# -*- coding: utf-8 -*-
"""pcc_ner.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sfD9AW_8YNzZ8A4KGlb2sp3F7zLRIqh7

输入数据格式：
```
{"words": ["痛", "1", "天", "。"], "ner": ["B-SIGNS", "O", "O", "O"]}

```
"""
#
# Commented out IPython magic to ensure Python compatibility.
# %pip install modelscope
# %pip install simplejson
# %pip install datasets==2.18.0

# Commented out IPython magic to ensure Python compatibility.
# %pip install adaseq

# Commented out IPython magic to ensure Python compatibility.
# %pip install oss2

from modelscope.utils.constant import Tasks
from modelscope.pipelines import pipeline

import json
import re
import os

"""模型采用：https://modelscope.cn/models/iic/nlp_raner_named-entity-recognition_chinese-large-generic"""

unlabled_corpus = open('./corpus/tsc_pcc_texts.txt', 'r').read().split('。')

unlabled_corpus[0]

from torch.utils.data import Dataset
from torch.utils.data import DataLoader

class PCCDataset(Dataset):
  def __init__(self, corpus_list):
    self.corpus = corpus_list

  def __len__(self):
    return len(self.corpus)

  def __getitem__(self, index):
    return self.corpus[index]

dataset = PCCDataset(unlabled_corpus)
dataloader = DataLoader(dataset, batch_size=64, drop_last=True)

ner_pipeline = pipeline(Tasks.named_entity_recognition, 'damo/nlp_raner_named-entity-recognition_chinese-large-generic', batch_size=64)

results = {}

for i, batch in enumerate(dataloader):
  print(len(batch))

len(dataloader)

for i, batch in enumerate(dataloader):
  try:
    results[i] = ner_pipeline(batch)
  except:
    results[i] = {}

results

with open('results.txt', 'w') as f:
  f.write(str(results))