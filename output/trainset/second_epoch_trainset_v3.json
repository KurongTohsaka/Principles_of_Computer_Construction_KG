[
  {
    "text": "不过在原码乘法中，算前求补和算后求补都不需要，因为输入数据都是立即可用的",
    "id": 4593,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "原码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6026,
    "created_at": "2024-08-12T11:44:21.982699Z",
    "updated_at": "2024-08-12T11:44:21.982699Z",
    "lead_time": 44.994
  },
  {
    "text": "经过个时钟周期的内部操作，数据在T时钟的上升沿开始送出",
    "id": 4594,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7017,
    "created_at": "2024-08-16T09:51:06.325312Z",
    "updated_at": "2024-08-16T09:51:06.325312Z",
    "lead_time": 1.467
  },
  {
    "text": "一般来说，大型计算机的时序电路比较复杂，而微型机的时序电路比较简单，这是因为前者涉及的操作动作较多，后者涉及的操作动作较少",
    "id": 4595,
    "label": [
      {
        "start": 21,
        "end": 24,
        "text": "微型机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7018,
    "created_at": "2024-08-16T09:51:08.537996Z",
    "updated_at": "2024-08-16T09:51:08.537996Z",
    "lead_time": 1.631
  },
  {
    "text": "狭义的PROM即指一次性编程ROMOTPROM，只能编程一次",
    "id": 4596,
    "label": [
      {
        "start": 9,
        "end": 17,
        "text": "一次性编程ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "PROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "PROM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7019,
    "created_at": "2024-08-16T09:51:12.656150Z",
    "updated_at": "2024-08-16T09:51:12.657171Z",
    "lead_time": 3.1270000000000002
  },
  {
    "text": "指令格式中，用于指派整数寄存器的个数不少于个，用于指派浮点数寄存器的个数不少于个",
    "id": 4597,
    "label": [
      {
        "start": 27,
        "end": 30,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7020,
    "created_at": "2024-08-16T09:51:15.248554Z",
    "updated_at": "2024-08-16T09:51:15.248554Z",
    "lead_time": 1.254
  },
  {
    "text": "所谓公操作，是指一条指令执行结束后CPU所进行的操作，如中断处理、取下条指令等",
    "id": 4598,
    "label": [
      {
        "start": 17,
        "end": 20,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7021,
    "created_at": "2024-08-16T09:51:19.553255Z",
    "updated_at": "2024-08-16T09:51:19.554248Z",
    "lead_time": 2.928
  },
  {
    "text": "为便于CPU访问端口，也需对端口安排地址",
    "id": 4599,
    "label": [
      {
        "start": 18,
        "end": 20,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7022,
    "created_at": "2024-08-16T09:51:24.575488Z",
    "updated_at": "2024-08-16T09:51:24.576011Z",
    "lead_time": 2.165
  },
  {
    "text": "缓冲寄存器的作用是：作为ALU运算结果和通用寄存器之间信息传送中时间上的缓冲；补偿CPU和内存、外围设备之间在操作速度上的差别",
    "id": 4600,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "缓冲寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 25,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "信息传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 48,
        "end": 52,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 44,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7023,
    "created_at": "2024-08-16T09:51:30.713631Z",
    "updated_at": "2024-08-16T09:51:30.713631Z",
    "lead_time": 2.761
  },
  {
    "text": "结构上的这种缺陷使得硬布线控制器的设计和调试非常复杂且代价很大",
    "id": 4601,
    "label": [
      {
        "start": 10,
        "end": 16,
        "text": "硬布线控制器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7024,
    "created_at": "2024-08-16T09:51:36.737006Z",
    "updated_at": "2024-08-16T09:51:36.738025Z",
    "lead_time": 3.5380000000000003
  },
  {
    "text": "在直接映射方式中，每个区第i块只能映射到cache唯一的第i行，冲突的概率可能会很大",
    "id": 4602,
    "label": [
      {
        "start": 1,
        "end": 7,
        "text": "直接映射方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 25,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6027,
    "created_at": "2024-08-12T11:44:25.902791Z",
    "updated_at": "2024-08-12T11:44:25.902791Z",
    "lead_time": 3.463
  },
  {
    "text": "如果在编码时用有脉冲表示二进制数“”，无脉冲表示二进制数“”，那么当连续出现几个“”时，表示某段时间间隔内传输线上没有脉冲信号",
    "id": 4603,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6028,
    "created_at": "2024-08-12T11:44:32.112992Z",
    "updated_at": "2024-08-12T11:44:32.112992Z",
    "lead_time": 5.531
  },
  {
    "text": "页式虚拟存储系统中，虚地址空间和主存空间都被分成大小相等的页，通过页表可以把虚地址转换成物理地址",
    "id": 4604,
    "label": [
      {
        "start": 2,
        "end": 8,
        "text": "虚拟存储系统",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 15,
        "text": "虚地址空间",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "主存空间",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 44,
        "end": 48,
        "text": "物理地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 43,
        "text": "地址转换",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 1,
        "text": "页",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 29,
        "end": 30,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6029,
    "created_at": "2024-08-12T11:45:21.566930Z",
    "updated_at": "2024-08-12T11:45:21.566930Z",
    "lead_time": 48.738
  },
  {
    "text": "在现有的流水线计算机中，存储器几乎都是采用交叉存取的方式工作",
    "id": 4605,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6030,
    "created_at": "2024-08-12T11:45:28.512635Z",
    "updated_at": "2024-08-12T11:45:28.512635Z",
    "lead_time": 6.134
  },
  {
    "text": "垂直型微指令则相反，微指令字较短而微程序长",
    "id": 4606,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "垂直型微指令",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 13,
        "end": 14,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6031,
    "created_at": "2024-08-12T11:45:37.859936Z",
    "updated_at": "2024-08-12T11:45:37.859936Z",
    "lead_time": 6.579
  },
  {
    "text": "按读写性质分类有：只读型：记录的信息只能读出，不能被修改",
    "id": 4607,
    "label": [
      {
        "start": 9,
        "end": 11,
        "text": "只读",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6032,
    "created_at": "2024-08-12T11:45:42.598903Z",
    "updated_at": "2024-08-12T11:45:42.598903Z",
    "lead_time": 4.028
  },
  {
    "text": "有两种情况：可屏蔽中断：CPU的INTR引脚收到中断请求信号，如果CPU中标志寄存器IF时，可引发中断；IF时，中断请求信号在CPU内部被禁止",
    "id": 4608,
    "label": [
      {
        "start": 39,
        "end": 42,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 63,
        "end": 66,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 56,
        "end": 58,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "引脚",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "屏蔽",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6033,
    "created_at": "2024-08-12T11:46:38.451860Z",
    "updated_at": "2024-08-12T11:46:38.451860Z",
    "lead_time": 55.088
  },
  {
    "text": "PCI总线采用集中式仲裁方式，有专用的PCI总线仲裁器",
    "id": 4609,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 24,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 12,
        "text": "集中式仲裁",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "仲裁器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6034,
    "created_at": "2024-08-12T11:46:49.528659Z",
    "updated_at": "2024-08-12T11:46:49.528659Z",
    "lead_time": 10.61
  },
  {
    "text": "注意，门G和G是互锁的，一个开启时另一个必定关闭，这样保证了读时不写，写时不读",
    "id": 4610,
    "annotator": 1,
    "annotation_id": 6035,
    "created_at": "2024-08-12T11:46:51.776047Z",
    "updated_at": "2024-08-12T11:46:51.776047Z",
    "lead_time": 1.848
  },
  {
    "text": "本章小结一个定点数由符号位和数值域两部分组成",
    "id": 4611,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "定点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6036,
    "created_at": "2024-08-12T11:46:59.069015Z",
    "updated_at": "2024-08-12T11:46:59.069015Z",
    "lead_time": 6.598
  },
  {
    "text": "CPU和主存储器之间在速度上是不匹配的，这种情况成为限制高速计算机设计的主要问题",
    "id": 4612,
    "label": [
      {
        "start": 4,
        "end": 8,
        "text": "主存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6037,
    "created_at": "2024-08-12T11:47:38.971717Z",
    "updated_at": "2024-08-12T11:47:38.971717Z",
    "lead_time": 39.037
  },
  {
    "text": "从应用角度考虑，这些指令的功能也具有普遍意义，几乎所有计算机的指令系统中都能找到这些指令",
    "id": 4613,
    "label": [
      {
        "start": 31,
        "end": 35,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6038,
    "created_at": "2024-08-12T11:47:50.345810Z",
    "updated_at": "2024-08-12T11:47:50.345810Z",
    "lead_time": 10.78
  },
  {
    "text": "一个“字节”由位二进制信息组成，而一个“字”则至少由一个以上的字节组成",
    "id": 4614,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 8,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 21,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6039,
    "created_at": "2024-08-12T11:51:28.502840Z",
    "updated_at": "2024-08-12T11:51:28.502840Z",
    "lead_time": 217.138
  },
  {
    "text": "设计微操作控制信号的方法和过程是，根据所有的机器指令流程图，寻找出产生同一个微操作信号的所有条件，并与适当的节拍电位和节拍脉冲组合，从而写出其布尔代数表达式并进行简化，然后用门电路或可编程器件来实现",
    "id": 4615,
    "label": [
      {
        "start": 87,
        "end": 90,
        "text": "门电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 9,
        "text": "微操作控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 59,
        "end": 63,
        "text": "节拍脉冲",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 54,
        "end": 58,
        "text": "节拍电位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 71,
        "end": 75,
        "text": "布尔代数",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "微操作",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6040,
    "created_at": "2024-08-12T11:52:52.325606Z",
    "updated_at": "2024-08-12T11:52:52.325606Z",
    "lead_time": 83.049
  },
  {
    "text": "而SCSI使用芯或芯电缆，插座体积也大",
    "id": 4616,
    "annotator": 1,
    "annotation_id": 6041,
    "created_at": "2024-08-12T11:52:54.675591Z",
    "updated_at": "2024-08-12T11:52:54.675591Z",
    "lead_time": 1.772
  },
  {
    "text": "三组信号线中，地址线和控制线公用而数据线单独分开连接",
    "id": 4617,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "地址线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "控制线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6042,
    "created_at": "2024-08-12T11:54:04.613866Z",
    "updated_at": "2024-08-12T11:54:34.551579Z",
    "lead_time": 73.875
  },
  {
    "text": "某设备的服务子程序执行完以后，接着查询下一个设备",
    "id": 4618,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6043,
    "created_at": "2024-08-12T11:54:38.064967Z",
    "updated_at": "2024-08-12T11:54:38.064967Z",
    "lead_time": 1.992
  },
  {
    "text": "上述过程称为“写入”",
    "id": 4619,
    "annotator": 1,
    "annotation_id": 6044,
    "created_at": "2024-08-12T11:54:39.441445Z",
    "updated_at": "2024-08-12T11:54:39.441445Z",
    "lead_time": 0.947
  },
  {
    "text": "实模式下使用中断向量表中断向量表IVT位于内存地址开始的KB空间",
    "id": 4620,
    "label": [
      {
        "start": 21,
        "end": 25,
        "text": "内存地址",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "KB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 19,
        "end": 20,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 11,
        "text": "中断向量表",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 16,
        "text": "中断向量表",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6045,
    "created_at": "2024-08-12T11:56:32.698026Z",
    "updated_at": "2024-08-12T11:56:32.698026Z",
    "lead_time": 112.426
  },
  {
    "text": "这是由cache存储器、主存和辅存构成的三级存储体系中的两个层次",
    "id": 4621,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "存储体",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6046,
    "created_at": "2024-08-12T11:56:38.316161Z",
    "updated_at": "2024-08-12T11:56:38.316161Z",
    "lead_time": 3.461
  },
  {
    "text": "早期的CPU由运算器和控制器组成",
    "id": 4622,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6047,
    "created_at": "2024-08-12T11:56:57.477862Z",
    "updated_at": "2024-08-12T11:56:57.477862Z",
    "lead_time": 17.594
  },
  {
    "text": "灰度级取决于每个像素对应刷新存储器单元的位数和CRT本身的性能",
    "id": 4623,
    "label": [
      {
        "start": 12,
        "end": 17,
        "text": "刷新存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "灰度级",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "CRT",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 20,
        "end": 21,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6048,
    "created_at": "2024-08-12T11:57:24.431634Z",
    "updated_at": "2024-08-12T11:57:24.432241Z",
    "lead_time": 25.59
  },
  {
    "text": "为了保证整个机器控制信号的同步，可以将一个微指令周期时间设计得恰好和CPU周期时间相等",
    "id": 4624,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 26,
        "text": "微指令周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 34,
        "end": 39,
        "text": "CPU周期",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6049,
    "created_at": "2024-08-12T11:57:51.751182Z",
    "updated_at": "2024-08-12T11:57:51.751182Z",
    "lead_time": 26.697
  },
  {
    "text": "显然，设立多个通道的另一好处是，对不同类型的外设可以进行分类管理",
    "id": 4625,
    "label": [
      {
        "start": 22,
        "end": 24,
        "text": "外设",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6050,
    "created_at": "2024-08-12T11:57:53.922527Z",
    "updated_at": "2024-08-12T11:57:53.922527Z",
    "lead_time": 1.412
  },
  {
    "text": "为了控制方便，一般取tRCtWC，通常称为存取周期",
    "id": 4626,
    "label": [
      {
        "start": 21,
        "end": 25,
        "text": "存取周期",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6051,
    "created_at": "2024-08-12T11:57:58.623788Z",
    "updated_at": "2024-08-12T11:57:58.623788Z",
    "lead_time": 4.066
  },
  {
    "text": "写数据时，用激光束将待写区域加热至高温，使之熔化冷却成非晶形物质",
    "id": 4627,
    "annotator": 1,
    "annotation_id": 6052,
    "created_at": "2024-08-12T11:58:00.372203Z",
    "updated_at": "2024-08-12T11:58:00.372203Z",
    "lead_time": 1.103
  },
  {
    "text": "在这些工作完成后，CPU继续执行原来的主程序",
    "id": 4628,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6053,
    "created_at": "2024-08-12T11:58:03.741990Z",
    "updated_at": "2024-08-12T11:58:03.741990Z",
    "lead_time": 2.853
  },
  {
    "text": "机器语言用指令代码编写程序，而符号语言用指令助记符来编写程序",
    "id": 4629,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "机器语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6054,
    "created_at": "2024-08-12T11:58:07.367290Z",
    "updated_at": "2024-08-12T11:58:07.367290Z",
    "lead_time": 2.996
  },
  {
    "text": "总之，从年计算机诞生以来，大约每隔五年运算速度提高倍，可靠性提高倍，成本降低为，体积缩小为",
    "id": 4630,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6055,
    "created_at": "2024-08-12T11:58:09.812590Z",
    "updated_at": "2024-08-12T11:58:09.812590Z",
    "lead_time": 1.713
  },
  {
    "text": "显然，选择型DMA控制器相当于一个逻辑开关，根据IO指令来控制此开关与某个设备连接",
    "id": 4631,
    "label": [
      {
        "start": 6,
        "end": 12,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6056,
    "created_at": "2024-08-12T11:58:11.811582Z",
    "updated_at": "2024-08-12T11:58:11.811582Z",
    "lead_time": 1.325
  },
  {
    "text": "由DMA控制器对内存寻址，即决定数据传送的内存单元地址及数据传送个数的计数，并执行数据传送的操作",
    "id": 4632,
    "label": [
      {
        "start": 1,
        "end": 7,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "内存单元",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6057,
    "created_at": "2024-08-12T11:58:15.661530Z",
    "updated_at": "2024-08-12T11:58:15.661530Z",
    "lead_time": 3.215
  },
  {
    "text": "指令的执行周期由M、M两个节拍来完成",
    "id": 4633,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "执行周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6058,
    "created_at": "2024-08-12T11:58:17.565702Z",
    "updated_at": "2024-08-12T11:58:17.565702Z",
    "lead_time": 1.316
  },
  {
    "text": "这三个功能部件可以组成一个级流水线",
    "id": 4634,
    "label": [
      {
        "start": 14,
        "end": 17,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6059,
    "created_at": "2024-08-12T11:58:19.691161Z",
    "updated_at": "2024-08-12T11:58:19.691161Z",
    "lead_time": 1.485
  },
  {
    "text": "与USB总线和SATA接口类似，PCIe总线也采用串行传输方式替代PCI总线的并行传输方式",
    "id": 4635,
    "label": [
      {
        "start": 16,
        "end": 22,
        "text": "PCIe总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 38,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6060,
    "created_at": "2024-08-12T11:58:28.485775Z",
    "updated_at": "2024-08-12T11:58:28.485775Z",
    "lead_time": 8.288
  },
  {
    "text": "在MIPS中，访问存储器取数或存数需要使用数据传送指令",
    "id": 4636,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "MIPS",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6061,
    "created_at": "2024-08-12T11:58:31.882682Z",
    "updated_at": "2024-08-12T11:58:31.882682Z",
    "lead_time": 2.771
  },
  {
    "text": "与早期的串行除法器相比，阵列除法器不仅所需要的控制线路少，而且能够提供令人满意的高速运算速度",
    "id": 4637,
    "label": [
      {
        "start": 12,
        "end": 17,
        "text": "阵列除法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "控制线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6062,
    "created_at": "2024-08-12T11:59:56.245864Z",
    "updated_at": "2024-08-12T11:59:56.245864Z",
    "lead_time": 83.801
  },
  {
    "text": "LAD和STO指令需要两个节拍M、M",
    "id": 4638,
    "label": [
      {
        "start": 4,
        "end": 9,
        "text": "STO指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6063,
    "created_at": "2024-08-12T12:00:08.116805Z",
    "updated_at": "2024-08-12T12:00:08.116805Z",
    "lead_time": 11.399
  },
  {
    "text": "非屏蔽中断：CPU的NMI引脚收到的中断请求信号而引发的中断，这类中断不能被禁止",
    "id": 4639,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "引脚",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "屏蔽",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6064,
    "created_at": "2024-08-12T12:00:11.580908Z",
    "updated_at": "2024-08-12T12:00:11.580908Z",
    "lead_time": 3.062
  },
  {
    "text": "由操作系统在硬件的支持下对程序进行虚地址到实地址的变换，这一过程称为程序的再定位",
    "id": 4640,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "虚地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "实地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "再定位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6065,
    "created_at": "2024-08-12T12:00:14.972150Z",
    "updated_at": "2024-08-12T12:00:14.972150Z",
    "lead_time": 2.983
  },
  {
    "text": "然后，再由第三个传送动作，以便把加法的“和”选通到目的寄存器中",
    "id": 4641,
    "label": [
      {
        "start": 27,
        "end": 30,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6066,
    "created_at": "2024-08-12T12:00:16.308117Z",
    "updated_at": "2024-08-12T12:00:16.308117Z",
    "lead_time": 0.892
  },
  {
    "text": "当简单外设作为输入设备时，可使用三态缓冲器与数据总线相连；当简单外设作为输出设备时，输出一般采用锁存器",
    "id": 4642,
    "label": [
      {
        "start": 48,
        "end": 51,
        "text": "锁存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 40,
        "text": "输出设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "输入设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "外设",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6067,
    "created_at": "2024-08-12T12:00:19.989678Z",
    "updated_at": "2024-08-12T12:00:19.989678Z",
    "lead_time": 3.301
  },
  {
    "text": "事实上双端口存储器也可以由DRAM构成",
    "id": 4643,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6068,
    "created_at": "2024-08-12T12:00:26.257857Z",
    "updated_at": "2024-08-12T12:00:26.258857Z",
    "lead_time": 5.793
  },
  {
    "text": "访问主存微指令",
    "id": 4644,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6069,
    "created_at": "2024-08-12T12:00:27.570779Z",
    "updated_at": "2024-08-12T12:00:27.570779Z",
    "lead_time": 0.86
  },
  {
    "text": "外围设备这个术语涉及相当广泛的计算机部件",
    "id": 4645,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6070,
    "created_at": "2024-08-12T12:00:29.241115Z",
    "updated_at": "2024-08-12T12:00:29.241115Z",
    "lead_time": 1.288
  },
  {
    "text": "大型计算机的IO指令都是管态指令，只有当CPU处于管态时，才能运行IO指令，目态时不能运行IO指令",
    "id": 4646,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "IO指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "管态",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "管态",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "目态",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6071,
    "created_at": "2024-08-12T12:01:17.181368Z",
    "updated_at": "2024-08-12T12:01:17.181368Z",
    "lead_time": 47.327
  },
  {
    "text": "设模块字长等于数据总线宽度，又假设模块存取一个字的存储周期为T，总线传送周期为，存储器的交叉模块数为m，那么为了实现流水线方式存取，应当满足Tm即成块传送可按间隔流水方式进行，也就是每经时间延迟后启动下一个模块",
    "id": 4647,
    "label": [
      {
        "start": 25,
        "end": 29,
        "text": "存储周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 58,
        "end": 61,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "字长",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 81,
        "end": 83,
        "text": "流水",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6072,
    "created_at": "2024-08-12T12:01:29.216203Z",
    "updated_at": "2024-08-12T12:01:29.216203Z",
    "lead_time": 11.347
  },
  {
    "text": "从外围设备发出DMA请求",
    "id": 4648,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6073,
    "created_at": "2024-08-12T12:01:54.367536Z",
    "updated_at": "2024-08-12T12:01:54.367536Z",
    "lead_time": 24.693
  },
  {
    "text": "为了在屏幕上保留持久稳定的图像，需要按一定的频率对屏幕反复刷新",
    "id": 4649,
    "annotator": 1,
    "annotation_id": 6074,
    "created_at": "2024-08-12T12:01:56.290775Z",
    "updated_at": "2024-08-12T12:01:56.290775Z",
    "lead_time": 1.266
  },
  {
    "text": "设Aananaa和Bbnbnbb均为用定点表示的n位带符号整数",
    "id": 4650,
    "label": [
      {
        "start": 19,
        "end": 23,
        "text": "定点表示",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 26,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6075,
    "created_at": "2024-08-12T12:02:00.206526Z",
    "updated_at": "2024-08-12T12:02:00.206526Z",
    "lead_time": 3.396
  },
  {
    "text": "US为用户管理员权限控制位指明该页是只能被操作系统访问还是同时允许操作系统和用户程序访问",
    "id": 4651,
    "label": [
      {
        "start": 21,
        "end": 25,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 38,
        "end": 42,
        "text": "用户程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 12,
        "end": 13,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 17,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6076,
    "created_at": "2024-08-12T12:02:09.924543Z",
    "updated_at": "2024-08-12T12:02:09.924543Z",
    "lead_time": 9.19
  },
  {
    "text": "其次，用到了算盘，它用来对数据进行加、减、乘、除等算术运算",
    "id": 4652,
    "label": [
      {
        "start": 25,
        "end": 29,
        "text": "算术运算",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6077,
    "created_at": "2024-08-12T12:02:12.717728Z",
    "updated_at": "2024-08-12T12:02:12.717728Z",
    "lead_time": 2.217
  },
  {
    "text": "而主存的存取时间为纳秒ns级，两者速度差别十分突出，因此磁盘IO系统成为整个系统的瓶颈",
    "id": 4653,
    "label": [
      {
        "start": 4,
        "end": 8,
        "text": "存取时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6078,
    "created_at": "2024-08-12T12:02:21.105559Z",
    "updated_at": "2024-08-12T12:02:21.105559Z",
    "lead_time": 7.932
  },
  {
    "text": "每个模块的容量为MBK位，由片K位的DRAM芯片组成位扩展",
    "id": 4654,
    "label": [
      {
        "start": 26,
        "end": 29,
        "text": "位扩展",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "MB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 17,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6079,
    "created_at": "2024-08-12T12:02:28.306064Z",
    "updated_at": "2024-08-12T12:02:28.306064Z",
    "lead_time": 6.774
  },
  {
    "text": "每次访存时，首先判断该虚地址所对应的部分是否在实存中：如果是，则进行地址转换并用实地址访问主存；否则按照某种算法将辅存中的部分程序调度进内存，再按同样的方法访问主存",
    "id": 4655,
    "label": [
      {
        "start": 68,
        "end": 70,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "地址转换",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "虚地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "实地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 54,
        "end": 56,
        "text": "算法",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 57,
        "end": 59,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 63,
        "end": 65,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 80,
        "end": 82,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "实存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6080,
    "created_at": "2024-08-12T12:02:38.711954Z",
    "updated_at": "2024-08-12T12:02:38.711954Z",
    "lead_time": 9.899
  },
  {
    "text": "在PCIe总线中，基于PCIe总线的设备称为端点Endpoint，如PCIe接口网卡、串口卡、存储卡等",
    "id": 4656,
    "label": [
      {
        "start": 1,
        "end": 7,
        "text": "PCIe总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 17,
        "text": "PCIe总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "PCIe",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "端点",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 47,
        "end": 50,
        "text": "存储卡",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6081,
    "created_at": "2024-08-12T12:03:30.454389Z",
    "updated_at": "2024-08-12T12:03:30.454389Z",
    "lead_time": 51.12
  },
  {
    "text": "如果是，本设备就进入工作状态，否则不予理睬",
    "id": 4657,
    "annotator": 1,
    "annotation_id": 6082,
    "created_at": "2024-08-12T12:03:32.860054Z",
    "updated_at": "2024-08-12T12:03:32.860054Z",
    "lead_time": 1.77
  },
  {
    "text": "操作控制器的功能，就是根据指令操作码和时序信号，产生各种操作控制信号，以便正确地选择数据通路，把有关数据打入到一个寄存器，从而完成取指令和执行指令的控制",
    "id": 4658,
    "label": [
      {
        "start": 57,
        "end": 60,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 34,
        "text": "操作控制信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "操作控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 18,
        "text": "指令操作码",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "时序信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 46,
        "text": "数据通路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 65,
        "end": 68,
        "text": "取指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 71,
        "end": 73,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6083,
    "created_at": "2024-08-12T12:03:40.901547Z",
    "updated_at": "2024-08-12T12:03:40.901547Z",
    "lead_time": 7.614
  },
  {
    "text": "这种规模的v路比较器容易设计和实现",
    "id": 4659,
    "annotator": 1,
    "annotation_id": 6084,
    "created_at": "2024-08-12T12:03:43.022653Z",
    "updated_at": "2024-08-12T12:03:43.022653Z",
    "lead_time": 1.546
  },
  {
    "text": "由于时间充足，执行周期一般只需要一个CPU周期",
    "id": 4660,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "执行周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 18,
        "end": 23,
        "text": "CPU周期",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6085,
    "created_at": "2024-08-12T12:03:58.240631Z",
    "updated_at": "2024-08-12T12:03:58.240631Z",
    "lead_time": 14.772
  },
  {
    "text": "一种是机械式的，在底座上装有一个金属球，在光滑的表面上摩擦，使金属球转动，球与四个方向的电位器接触，就可以测量出上下左右四个方向的相对位移量",
    "id": 4661,
    "label": [
      {
        "start": 44,
        "end": 46,
        "text": "电位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 67,
        "end": 68,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6086,
    "created_at": "2024-08-12T12:04:10.898011Z",
    "updated_at": "2024-08-12T12:04:10.898011Z",
    "lead_time": 12.097
  },
  {
    "text": "在T时钟的上升沿处，控制器送入预充命令",
    "id": 4662,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6087,
    "created_at": "2024-08-12T12:06:33.136025Z",
    "updated_at": "2024-08-12T12:06:33.136025Z",
    "lead_time": 141.768
  },
  {
    "text": "打印输出是计算机最基本的输出形式",
    "id": 4663,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6088,
    "created_at": "2024-08-12T12:06:36.152778Z",
    "updated_at": "2024-08-12T12:06:36.152778Z",
    "lead_time": 2.426
  },
  {
    "text": "为了实现流水，首先必须把输入的任务分割为一系列子任务，使各子任务能在流水线的各个阶段并发地执行",
    "id": 4664,
    "label": [
      {
        "start": 34,
        "end": 37,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "并发",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "流水",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6089,
    "created_at": "2024-08-12T12:06:45.036778Z",
    "updated_at": "2024-08-12T12:06:45.036778Z",
    "lead_time": 8.36
  },
  {
    "text": "其逻辑电路见图",
    "id": 4665,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "逻辑电路",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6090,
    "created_at": "2024-08-12T12:06:50.344712Z",
    "updated_at": "2024-08-12T12:06:50.344712Z",
    "lead_time": 4.644
  },
  {
    "text": "这里的中断与节介绍的IO中断所采用的技术相同，但中断的目的不同，前面是为了数据的输入或输出，而这里是为了报告一组数据传送结束",
    "id": 4666,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6091,
    "created_at": "2024-08-12T12:06:58.705875Z",
    "updated_at": "2024-08-12T12:06:58.705875Z",
    "lead_time": 7.746
  },
  {
    "text": "在虚拟存储系统中，通常采用页表保护、段表保护和键式保护方法实现存储区域保护",
    "id": 4667,
    "label": [
      {
        "start": 1,
        "end": 7,
        "text": "虚拟存储系统",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "页表保护",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 31,
        "end": 35,
        "text": "存储区域",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "段表保护",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "键式保护",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6092,
    "created_at": "2024-08-12T12:07:02.907642Z",
    "updated_at": "2024-08-12T12:07:02.907642Z",
    "lead_time": 3.702
  },
  {
    "text": "间接寻址方式是早期计算机中经常采用的方式，但由于两次访存，影响指令执行速度，现在较少使用",
    "id": 4668,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "间接寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6093,
    "created_at": "2024-08-12T12:07:07.409476Z",
    "updated_at": "2024-08-12T12:07:07.409476Z",
    "lead_time": 3.917
  },
  {
    "text": "两个二进制数字Ai，Bi和一个进位输入Ci相加，产生一个和输出Si，以及一个进位输出Ci",
    "id": 4669,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6094,
    "created_at": "2024-08-12T12:07:19.943691Z",
    "updated_at": "2024-08-12T12:07:19.943691Z",
    "lead_time": 11.987
  },
  {
    "text": "阶码下溢超过了阶码可能表示的最小值的负指数值，一般将其认为是",
    "id": 4670,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6095,
    "created_at": "2024-08-12T12:07:23.075265Z",
    "updated_at": "2024-08-12T12:07:23.075265Z",
    "lead_time": 2.595
  },
  {
    "text": "前者称为操作码，后者称为地址码",
    "id": 4671,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6096,
    "created_at": "2024-08-12T12:07:24.883975Z",
    "updated_at": "2024-08-12T12:07:24.883975Z",
    "lead_time": 1.225
  },
  {
    "text": "换句话说，写入时，利用磁头使载磁体盘片具有不同的磁化状态，而在读出时又利用磁头来判别这些不同的磁化状态",
    "id": 4672,
    "label": [
      {
        "start": 17,
        "end": 19,
        "text": "盘片",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6097,
    "created_at": "2024-08-12T12:07:32.581683Z",
    "updated_at": "2024-08-12T12:07:32.582628Z",
    "lead_time": 6.966
  },
  {
    "text": "注意，程序跳跃后，按新的指令地址开始顺序执行",
    "id": 4673,
    "label": [
      {
        "start": 12,
        "end": 16,
        "text": "指令地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6098,
    "created_at": "2024-08-12T12:08:39.865974Z",
    "updated_at": "2024-08-12T12:08:39.866974Z",
    "lead_time": 66.535
  },
  {
    "text": "如果各种指令字长度随指令功能而异，如有的指令是单字长指令，有的指令是双字长指令，就称为变长指令字结构",
    "id": 4674,
    "label": [
      {
        "start": 4,
        "end": 9,
        "text": "指令字长度",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 23,
        "end": 28,
        "text": "单字长指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "长指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 44,
        "end": 47,
        "text": "长指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 35,
        "end": 36,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 47,
        "end": 48,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6099,
    "created_at": "2024-08-12T12:09:16.944035Z",
    "updated_at": "2024-08-12T12:09:16.944035Z",
    "lead_time": 36.509
  },
  {
    "text": "cache分为行，每行个字W",
    "id": 4675,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 13,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6100,
    "created_at": "2024-08-12T12:09:21.148980Z",
    "updated_at": "2024-08-12T12:09:21.148980Z",
    "lead_time": 3.61
  },
  {
    "text": "图c是直接寻址方式的示意图",
    "id": 4676,
    "label": [
      {
        "start": 3,
        "end": 9,
        "text": "直接寻址方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6101,
    "created_at": "2024-08-12T12:09:25.833722Z",
    "updated_at": "2024-08-12T12:09:25.833722Z",
    "lead_time": 4.117
  },
  {
    "text": "这时应该产生一个商位“”，除数首先沿对角线右移，然后加到下一行的部分余数上",
    "id": 4677,
    "label": [
      {
        "start": 21,
        "end": 23,
        "text": "右移",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6102,
    "created_at": "2024-08-12T12:10:33.511747Z",
    "updated_at": "2024-08-12T12:10:33.511747Z",
    "lead_time": 67.15
  },
  {
    "text": "RAID是年由美国加州大学伯克利分校一个研究小组提出的，它的设计理念是用多个小容量磁盘代替一个大容量磁盘，并用分布数据的方法能够同时从多个磁盘中存取数据，因而改善了IO性能，增加了存储容量，现已在超级或大型计算机中使用",
    "id": 4678,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "RAID",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 90,
        "end": 94,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 103,
        "end": 106,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 69,
        "end": 71,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 82,
        "end": 86,
        "text": "IO性能",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6103,
    "created_at": "2024-08-12T12:10:53.157936Z",
    "updated_at": "2024-08-12T12:10:53.158946Z",
    "lead_time": 19.199
  },
  {
    "text": "刷新和刷新存储器CRT发光是由电子束打在荧光粉上引起的",
    "id": 4679,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "电子束",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "CRT",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6104,
    "created_at": "2024-08-12T12:10:58.328436Z",
    "updated_at": "2024-08-12T12:10:58.328436Z",
    "lead_time": 4.652
  },
  {
    "text": "第五代为年开始的巨大规模集成电路计算机",
    "id": 4680,
    "label": [
      {
        "start": 12,
        "end": 16,
        "text": "集成电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6105,
    "created_at": "2024-08-12T12:11:03.414658Z",
    "updated_at": "2024-08-12T12:11:03.414658Z",
    "lead_time": 4.661
  },
  {
    "text": "使用符号语言编程序比用机器语言编程序是进了一步，但符号语言还是一种最初级的语言，和数学语言的差异很大，并且仍然面向一台具体的机器",
    "id": 4681,
    "label": [
      {
        "start": 11,
        "end": 15,
        "text": "机器语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6106,
    "created_at": "2024-08-12T12:11:29.144686Z",
    "updated_at": "2024-08-12T12:11:29.144686Z",
    "lead_time": 25.294
  },
  {
    "text": "这里以加减交替阵列除法器为例，来说明这类除法器的组成原理",
    "id": 4682,
    "label": [
      {
        "start": 7,
        "end": 12,
        "text": "阵列除法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "除法器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6107,
    "created_at": "2024-08-12T12:11:46.033474Z",
    "updated_at": "2024-08-12T12:11:46.033474Z",
    "lead_time": 16.465
  },
  {
    "text": "在加减交替的除法阵列中，每一行所执行的操作究竟是加法还是减法，取决于前一行输出的符号与被除数的符号是否一致",
    "id": 4683,
    "annotator": 1,
    "annotation_id": 6108,
    "created_at": "2024-08-12T12:11:49.534715Z",
    "updated_at": "2024-08-12T12:11:49.535716Z",
    "lead_time": 3.08
  },
  {
    "text": "为此，需要采用多级时序体制",
    "id": 4684,
    "annotator": 1,
    "annotation_id": 6109,
    "created_at": "2024-08-12T12:11:52.567599Z",
    "updated_at": "2024-08-12T12:11:52.567599Z",
    "lead_time": 2.683
  },
  {
    "text": "换句话说，写操作对BUSY变为低电平的端口是不起作用的",
    "id": 4685,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "低电平",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6110,
    "created_at": "2024-08-12T12:12:10.320835Z",
    "updated_at": "2024-08-12T12:12:10.320835Z",
    "lead_time": 17.348
  },
  {
    "text": "我们看到，磁盘控制器的功能全部转移到设备中，主机与设备之间采用标准的通用接口，如SCSI接口小型计算机系统接口，从而使设备相对独立",
    "id": 4686,
    "label": [
      {
        "start": 5,
        "end": 10,
        "text": "磁盘控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 48,
        "end": 53,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 53,
        "end": 55,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6111,
    "created_at": "2024-08-12T12:12:48.469768Z",
    "updated_at": "2024-08-12T12:12:48.469768Z",
    "lead_time": 37.554
  },
  {
    "text": "指令格式是指令字用二进制代码表示的结构形式，通常由操作码字段和地址码字段组成",
    "id": 4687,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "操作码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "指令字",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6112,
    "created_at": "2024-08-12T12:13:08.332655Z",
    "updated_at": "2024-08-12T12:13:08.332655Z",
    "lead_time": 18.012
  },
  {
    "text": "设有两个不带符号的二进制整数：AamaaBbnbb上述过程说明了在m位n位不带符号整数的阵列乘法中加法移位操作的被加数矩阵",
    "id": 4688,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 51,
        "end": 53,
        "text": "移位",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 34,
        "end": 35,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 37,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6113,
    "created_at": "2024-08-12T12:13:41.114877Z",
    "updated_at": "2024-08-12T12:13:41.115867Z",
    "lead_time": 30.314
  },
  {
    "text": "我们知道，指令和数据从形式上看都是二进制代码，所以人们很难区分出这些代码是指令还是数据",
    "id": 4689,
    "label": [
      {
        "start": 5,
        "end": 7,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6114,
    "created_at": "2024-08-12T12:14:01.918801Z",
    "updated_at": "2024-08-12T12:14:01.919808Z",
    "lead_time": 19.592
  },
  {
    "text": "异常通常称为异常中断，它是由指令执行引发的",
    "id": 4690,
    "label": [
      {
        "start": 14,
        "end": 16,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "异常中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6115,
    "created_at": "2024-08-12T12:15:42.533922Z",
    "updated_at": "2024-08-12T12:15:42.533922Z",
    "lead_time": 99.569
  },
  {
    "text": "磁头实际上是由软磁材料做铁芯绕有读写线圈的电磁铁，如图所示",
    "id": 4691,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6116,
    "created_at": "2024-08-12T12:15:46.409634Z",
    "updated_at": "2024-08-12T12:15:46.409634Z",
    "lead_time": 2.946
  },
  {
    "text": "也就是说，只有规定了总线上各信号有效的时序关系，CPU才能正确无误地使用",
    "id": 4692,
    "label": [
      {
        "start": 24,
        "end": 27,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6117,
    "created_at": "2024-08-12T12:16:04.828247Z",
    "updated_at": "2024-08-12T12:16:04.828247Z",
    "lead_time": 17.555
  },
  {
    "text": "现代的DRAM芯片通常会在一次读操作之后自动地刷新选中行中的所有存储位元",
    "id": 4693,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "存储位元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "读操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6118,
    "created_at": "2024-08-12T12:16:52.319207Z",
    "updated_at": "2024-08-12T12:16:52.319207Z",
    "lead_time": 46.632
  },
  {
    "text": "而微电子技术的发展又为大幅度提升存储器的存储密度提供了可能性，这反过来又促使对存储器容量的需求进一步提升",
    "id": 4694,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "存储密度",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6119,
    "created_at": "2024-08-12T12:17:03.348862Z",
    "updated_at": "2024-08-12T12:17:03.348862Z",
    "lead_time": 9.438
  },
  {
    "text": "在T时钟的上升沿，控制器发出存储体A的读命令",
    "id": 4695,
    "label": [
      {
        "start": 14,
        "end": 17,
        "text": "存储体",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6120,
    "created_at": "2024-08-12T12:17:10.350731Z",
    "updated_at": "2024-08-12T12:17:10.350731Z",
    "lead_time": 6.138
  },
  {
    "text": "如何与主存内容保持一致，可选用如下三种写操作策略",
    "id": 4696,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6121,
    "created_at": "2024-08-12T12:17:12.839655Z",
    "updated_at": "2024-08-12T12:17:12.839655Z",
    "lead_time": 1.744
  },
  {
    "text": "但随着巨大规模集成电路的迅速发展，单片机、多核机等彼此之间的概念也在发生变化，因为今天的单片机可能就是明天的多核机",
    "id": 4697,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "集成电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "多核机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 54,
        "end": 57,
        "text": "多核机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "单片机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 44,
        "end": 47,
        "text": "单片机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6122,
    "created_at": "2024-08-12T12:17:44.881385Z",
    "updated_at": "2024-08-12T12:17:44.881896Z",
    "lead_time": 27.447
  },
  {
    "text": "总之，当两个端口均为开放状态BUSY为高电平且存取地址相同时，发生写冲突",
    "id": 4698,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "高电平",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6123,
    "created_at": "2024-08-12T12:19:35.596625Z",
    "updated_at": "2024-08-12T12:19:35.597624Z",
    "lead_time": 109.688
  },
  {
    "text": "闪存的存储单元在编程之前需首先擦除；闪存发出编程命令也比RAM发出写命令复杂许多；闪存编程的速度远低于RAM的写入速度；闪存的读出速度也远低于RAM",
    "id": 4699,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "存储单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "RAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 51,
        "end": 54,
        "text": "RAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 71,
        "end": 74,
        "text": "RAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 60,
        "end": 62,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6124,
    "created_at": "2024-08-12T12:19:48.852883Z",
    "updated_at": "2024-08-12T12:19:48.852883Z",
    "lead_time": 12.748
  },
  {
    "text": "简易型汉字为点阵，提高型汉字为点阵、点阵，甚至更高",
    "id": 4700,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "点阵",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "点阵",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "点阵",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "汉字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "汉字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6125,
    "created_at": "2024-08-12T12:19:51.656257Z",
    "updated_at": "2024-08-12T12:19:51.656257Z",
    "lead_time": 2.054
  },
  {
    "text": "空间并行技术主要体现在多处理器系统和多计算机系统",
    "id": 4701,
    "label": [
      {
        "start": 11,
        "end": 17,
        "text": "多处理器系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 18,
        "end": 24,
        "text": "多计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "空间并行技术",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6126,
    "created_at": "2024-08-12T12:20:22.134724Z",
    "updated_at": "2024-08-12T12:20:22.134724Z",
    "lead_time": 29.756
  },
  {
    "text": "每一寄存器组各有一个计数器，用于修改内存地址和传送长度",
    "id": 4702,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "内存地址",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6127,
    "created_at": "2024-08-12T12:20:45.751183Z",
    "updated_at": "2024-08-12T12:20:45.751183Z",
    "lead_time": 22.828
  },
  {
    "text": "在多个通道有访存请求时，选择通道的优先权高于多路通道，因为前者一般连接高速设备",
    "id": 4703,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 39,
        "text": "高速设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6128,
    "created_at": "2024-08-12T12:20:51.754731Z",
    "updated_at": "2024-08-12T12:21:47.388403Z",
    "lead_time": 59.173
  },
  {
    "text": "与SRAM不同的是，图中增加了行地址锁存器和列地址锁存器",
    "id": 4704,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "锁存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "锁存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "行地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "列地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6129,
    "created_at": "2024-08-12T12:22:05.725707Z",
    "updated_at": "2024-08-12T12:22:05.725707Z",
    "lead_time": 16.78
  },
  {
    "text": "表中I、T为比值，C为实际周期数",
    "id": 4705,
    "annotator": 1,
    "annotation_id": 6130,
    "created_at": "2024-08-12T12:22:34.534602Z",
    "updated_at": "2024-08-12T12:22:34.534602Z",
    "lead_time": 28.036
  },
  {
    "text": "在当代总线结构中，CPU和它私有的cache一起作为一个模块与总线相连",
    "id": 4706,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 22,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6131,
    "created_at": "2024-08-12T12:22:45.186537Z",
    "updated_at": "2024-08-12T12:22:45.186537Z",
    "lead_time": 9.764
  },
  {
    "text": "为了不致造成混乱，在CPU的中断管理部件中必须有一个“中断屏蔽”触发器，它可以在程序的控制下置“”关中断，或清“”开中断",
    "id": 4707,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "中断屏蔽",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 49,
        "end": 52,
        "text": "关中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 57,
        "end": 60,
        "text": "开中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6132,
    "created_at": "2024-08-12T12:23:20.294649Z",
    "updated_at": "2024-08-12T12:23:20.295649Z",
    "lead_time": 33.296
  },
  {
    "text": "大端bigendian模式将一个字的高有效字节放在内存的低地址端，低有效字节放在内存的高地址端，而小端littleendian模式则将一个字的低有效字节放在内存的低地址端，高有效字节放在内存的高地址端",
    "id": 4708,
    "label": [
      {
        "start": 21,
        "end": 23,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 74,
        "end": 76,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 89,
        "end": 91,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 78,
        "end": 80,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 93,
        "end": 95,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 82,
        "end": 84,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 97,
        "end": 99,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 17,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 69,
        "end": 70,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6133,
    "created_at": "2024-08-12T12:23:26.183574Z",
    "updated_at": "2024-08-12T12:23:26.183574Z",
    "lead_time": 2.872
  },
  {
    "text": "这种复合指令经常用在矩阵运算中，使得一部分内部积用“乘加”来实现",
    "id": 4709,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6134,
    "created_at": "2024-08-12T12:23:31.250966Z",
    "updated_at": "2024-08-12T12:23:31.251486Z",
    "lead_time": 2.556
  },
  {
    "text": "目前常用的输入设备是键盘、鼠标、数字扫描仪及模数转换器等",
    "id": 4710,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "输入设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "转换器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "模数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "键盘",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "鼠标",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 16,
        "end": 21,
        "text": "数字扫描仪",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6135,
    "created_at": "2024-08-12T12:23:47.088693Z",
    "updated_at": "2024-08-12T12:23:47.090209Z",
    "lead_time": 13.42
  },
  {
    "text": "其中微地址寄存器决定将要访问的下一条微指令的地址，而微命令寄存器则保存一条微指令的操作控制字段和判别测试字段的信息",
    "id": 4711,
    "label": [
      {
        "start": 2,
        "end": 8,
        "text": "微地址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 32,
        "text": "微命令寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 47,
        "text": "操作控制字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 48,
        "end": 54,
        "text": "判别测试字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6136,
    "created_at": "2024-08-12T12:24:14.154918Z",
    "updated_at": "2024-08-12T12:24:14.154918Z",
    "lead_time": 25.712
  },
  {
    "text": "对MOV指令来说，执行周期中完成到两个通用寄存器R、R之间的数据传送操作",
    "id": 4712,
    "label": [
      {
        "start": 19,
        "end": 24,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 6,
        "text": "MOV指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "执行周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6137,
    "created_at": "2024-08-12T12:24:22.576168Z",
    "updated_at": "2024-08-12T12:24:22.576168Z",
    "lead_time": 6.656
  },
  {
    "text": "在页表长度较大的系统中，还可以采用反向页表invertedpagetable实现物理页号到逻辑页号的反向映射",
    "id": 4713,
    "label": [
      {
        "start": 45,
        "end": 49,
        "text": "逻辑页号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 40,
        "end": 44,
        "text": "物理页号",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6138,
    "created_at": "2024-08-12T12:26:03.366990Z",
    "updated_at": "2024-08-12T12:26:03.366990Z",
    "lead_time": 99.85
  },
  {
    "text": "例如，汉字操作系统CCDOS中使用的汉字内码是一种最高位为“”的两字节内码",
    "id": 4714,
    "label": [
      {
        "start": 18,
        "end": 22,
        "text": "汉字内码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "最高位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "汉字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6139,
    "created_at": "2024-08-12T12:26:13.417856Z",
    "updated_at": "2024-08-12T12:26:13.418855Z",
    "lead_time": 9.033
  },
  {
    "text": "DMA请求标志每当设备准备好一个数据字后给出一个控制信号，使“DMA请求”标志置“”",
    "id": 4715,
    "label": [
      {
        "start": 24,
        "end": 28,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "数据字",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6140,
    "created_at": "2024-08-12T12:26:18.568066Z",
    "updated_at": "2024-08-12T12:26:18.568066Z",
    "lead_time": 4.368
  },
  {
    "text": "上述四个标志触发器的具体功能如下",
    "id": 4716,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6141,
    "created_at": "2024-08-12T12:26:43.149789Z",
    "updated_at": "2024-08-12T12:26:43.149789Z",
    "lead_time": 23.952
  },
  {
    "text": "T通常采用一个“与”门或一个“或”门的时间延迟来作为度量单位，因此多级进位链的时间延迟可以用与或门的级数或者T的数目来计算得到",
    "id": 4717,
    "annotator": 1,
    "annotation_id": 6142,
    "created_at": "2024-08-12T12:26:58.097169Z",
    "updated_at": "2024-08-12T12:26:58.097169Z",
    "lead_time": 14.466
  },
  {
    "text": "这种在某一段时间内频繁访问某一局部的存储器地址空间，而对此范围以外的地址空间则很少访问的现象称为程序的局部性原理",
    "id": 4718,
    "label": [
      {
        "start": 18,
        "end": 21,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 51,
        "end": 56,
        "text": "局部性原理",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "地址空间",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "地址空间",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 48,
        "end": 50,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6143,
    "created_at": "2024-08-12T12:27:02.300700Z",
    "updated_at": "2024-08-12T12:27:02.301206Z",
    "lead_time": 3.738
  },
  {
    "text": "在流水线中，原则上要求各个阶段的处理时间都相同",
    "id": 4719,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6144,
    "created_at": "2024-08-12T12:27:05.600760Z",
    "updated_at": "2024-08-12T12:27:05.600760Z",
    "lead_time": 2.763
  },
  {
    "text": "流水CPU是以时间并行性为原理构造的处理机，是一种非常经济而实用的并行技术",
    "id": 4720,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "时间并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "处理机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "流水CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6145,
    "created_at": "2024-08-12T12:28:51.493390Z",
    "updated_at": "2024-08-12T12:28:51.493390Z",
    "lead_time": 105.386
  },
  {
    "text": "图a是全相联映射的多对一示意图，其中cache为行，主存为块，每块行中有同样多的字",
    "id": 4721,
    "label": [
      {
        "start": 18,
        "end": 23,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 8,
        "text": "全相联映射",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 40,
        "end": 41,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6146,
    "created_at": "2024-08-12T12:28:54.380751Z",
    "updated_at": "2024-08-12T12:28:54.380751Z",
    "lead_time": 2.37
  },
  {
    "text": "并行处理技术可贯穿于信息加工的各个步骤和阶段",
    "id": 4722,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "并行处理技术",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6147,
    "created_at": "2024-08-12T12:28:56.538812Z",
    "updated_at": "2024-08-12T12:28:56.539839Z",
    "lead_time": 1.703
  },
  {
    "text": "数据通路不同CPU与cache和主存之间均可以有直接访问通路，cache不命中时可直接访问主存；而虚存所依赖的辅存与CPU之间不存在直接的数据通路，当主存不命中时只能通过调页解决，CPU最终还是要访问主存",
    "id": 4723,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "数据通路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 15,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 31,
        "end": 36,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 69,
        "end": 73,
        "text": "数据通路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 58,
        "end": 61,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 90,
        "end": 93,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 75,
        "end": 77,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 100,
        "end": 102,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "虚存",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 86,
        "end": 87,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6148,
    "created_at": "2024-08-12T12:28:58.746738Z",
    "updated_at": "2024-08-12T12:28:58.746738Z",
    "lead_time": 1.745
  },
  {
    "text": "此芯片地址引脚的数量为位，先传送行地址码AA，由行选通信号RAS打入到行地址锁存器；然后传送列地址码AA，由列选通信号CAS打入到列地址锁存器",
    "id": 4724,
    "label": [
      {
        "start": 1,
        "end": 3,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 54,
        "end": 59,
        "text": "列选通信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 29,
        "text": "行选通信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "地址引脚",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "RAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "锁存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 68,
        "end": 71,
        "text": "锁存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 47,
        "end": 50,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "行地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 59,
        "end": 62,
        "text": "CAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 65,
        "end": 68,
        "text": "列地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6149,
    "created_at": "2024-08-12T12:28:59.934698Z",
    "updated_at": "2024-08-12T12:28:59.934698Z",
    "lead_time": 0.718
  },
  {
    "text": "程序中断由外设接口的状态和CPU两方面来控制",
    "id": 4725,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6150,
    "created_at": "2024-08-12T12:29:08.699987Z",
    "updated_at": "2024-08-12T12:29:08.699987Z",
    "lead_time": 8.211
  },
  {
    "text": "一旦ROM芯片做成，就不能改变其中的存储内容",
    "id": 4726,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6151,
    "created_at": "2024-08-12T12:29:10.982908Z",
    "updated_at": "2024-08-12T12:29:10.982908Z",
    "lead_time": 1.719
  },
  {
    "text": "同样地，以为模时，modmod从这里可以得到一个启示，就是负数用补码表示时，可以把减法转化为加法",
    "id": 4727,
    "label": [
      {
        "start": 32,
        "end": 34,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6152,
    "created_at": "2024-08-12T12:29:14.059582Z",
    "updated_at": "2024-08-12T12:29:14.059582Z",
    "lead_time": 2.614
  },
  {
    "text": "为了写入可靠，IO线的写入数据要有维持时间thD，CS的维持时间也比读周期长",
    "id": 4728,
    "label": [
      {
        "start": 34,
        "end": 37,
        "text": "读周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6153,
    "created_at": "2024-08-12T12:29:52.776966Z",
    "updated_at": "2024-08-12T12:29:52.776966Z",
    "lead_time": 38.145
  },
  {
    "text": "ID区的MD为模式控制，用于控制数据区和校验区的使用",
    "id": 4729,
    "annotator": 1,
    "annotation_id": 6154,
    "created_at": "2024-08-12T12:29:54.459593Z",
    "updated_at": "2024-08-12T12:29:54.459593Z",
    "lead_time": 1.011
  },
  {
    "text": "目前国际上普遍采用的一种字符系统是七单位的IRA码",
    "id": 4730,
    "annotator": 1,
    "annotation_id": 6155,
    "created_at": "2024-08-12T12:30:05.191887Z",
    "updated_at": "2024-08-12T12:30:05.191887Z",
    "lead_time": 10.083
  },
  {
    "text": "由此可见，时间控制对计算机来说太重要了",
    "id": 4731,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "时间控制",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6156,
    "created_at": "2024-08-12T12:30:09.242653Z",
    "updated_at": "2024-08-12T12:30:09.242653Z",
    "lead_time": 3.588
  },
  {
    "text": "这种方式与前述例子的DMA方式相仿，大大提高了CPU的工作效率",
    "id": 4732,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6157,
    "created_at": "2024-08-12T12:30:12.016655Z",
    "updated_at": "2024-08-12T12:30:12.017651Z",
    "lead_time": 2.289
  },
  {
    "text": "例如，采用并行技术的双口存储器甚至是多口存储器，以及多体交叉存储器，都可以让CPU在一个周期中访问多个存储字",
    "id": 4733,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 51,
        "end": 54,
        "text": "存储字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 26,
        "end": 33,
        "text": "多体交叉存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6158,
    "created_at": "2024-08-12T12:30:31.899127Z",
    "updated_at": "2024-08-12T12:30:31.899127Z",
    "lead_time": 19.39
  },
  {
    "text": "门描述符给出中断服务子程序入口地址段，偏移，其中位偏移量装入EIP寄存器，位的段值装入CS寄存器",
    "id": 4734,
    "label": [
      {
        "start": 25,
        "end": 28,
        "text": "偏移量",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 25,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 37,
        "end": 38,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 13,
        "text": "中断服务子程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6159,
    "created_at": "2024-08-12T12:31:08.358235Z",
    "updated_at": "2024-08-12T12:31:13.254357Z",
    "lead_time": 37.757000000000005
  },
  {
    "text": "高效率主要表现在程序占据存储空间小、执行速度快",
    "id": 4735,
    "label": [
      {
        "start": 12,
        "end": 16,
        "text": "存储空间",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6160,
    "created_at": "2024-08-12T12:31:21.143894Z",
    "updated_at": "2024-08-12T12:31:21.143894Z",
    "lead_time": 6.085
  },
  {
    "text": "这样，允许存于cache第L行的主存块号是BBBB共块",
    "id": 4736,
    "label": [
      {
        "start": 16,
        "end": 18,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 12,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "块号",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6161,
    "created_at": "2024-08-12T12:31:47.579584Z",
    "updated_at": "2024-08-12T12:31:47.579584Z",
    "lead_time": 25.836
  },
  {
    "text": "存储器写入也有相似的速度提高",
    "id": 4737,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6162,
    "created_at": "2024-08-12T12:31:53.339544Z",
    "updated_at": "2024-08-12T12:31:53.339544Z",
    "lead_time": 5.226
  },
  {
    "text": "在当前PC机要连接的设备越来越多，主机箱的体积越显窄小的情况下，电缆细、插座小的是很有吸引力的，尤其对笔记本电脑一类机器",
    "id": 4738,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "PC机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6163,
    "created_at": "2024-08-12T12:32:03.366508Z",
    "updated_at": "2024-08-12T12:32:03.366508Z",
    "lead_time": 9.287
  },
  {
    "text": "在单级中断中，采用串行排队链法来实现具有公共请求线的中断源判优识别",
    "id": 4739,
    "label": [
      {
        "start": 26,
        "end": 29,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "单级中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6164,
    "created_at": "2024-08-12T12:32:54.437565Z",
    "updated_at": "2024-08-12T12:32:54.437565Z",
    "lead_time": 50.539
  },
  {
    "text": "写操作当写线圈中通过一定方向的脉冲电流时，铁芯内就产生一定方向的磁通",
    "id": 4740,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6165,
    "created_at": "2024-08-12T12:33:15.064642Z",
    "updated_at": "2024-08-12T12:33:15.064642Z",
    "lead_time": 20.055
  },
  {
    "text": "数据缓冲寄存器当输入操作时，用数据缓冲寄存器来存放从外部设备读出的数据，然后送往CPU；当输出操作时，用数据缓冲寄存器来存放CPU送来的数据，以便送给外部设备输出",
    "id": 4741,
    "label": [
      {
        "start": 0,
        "end": 7,
        "text": "数据缓冲寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 22,
        "text": "数据缓冲寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 52,
        "end": 59,
        "text": "数据缓冲寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "外部设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 75,
        "end": 79,
        "text": "外部设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 62,
        "end": 65,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6166,
    "created_at": "2024-08-12T12:33:28.745826Z",
    "updated_at": "2024-08-12T12:33:28.745826Z",
    "lead_time": 12.94
  },
  {
    "text": "刷新存储器存放显示图案的点阵数据",
    "id": 4742,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "刷新存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "点阵",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6167,
    "created_at": "2024-08-12T12:33:33.816173Z",
    "updated_at": "2024-08-12T12:33:33.816173Z",
    "lead_time": 4.51
  },
  {
    "text": "控制存储器的字长就是微指令字的长度，其存储容量视机器指令系统而定，即取决于微程序的数量",
    "id": 4743,
    "label": [
      {
        "start": 24,
        "end": 30,
        "text": "机器指令系统",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "控制存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "字长",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 14,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6168,
    "created_at": "2024-08-12T12:34:29.397550Z",
    "updated_at": "2024-08-12T12:34:29.397550Z",
    "lead_time": 54.96
  },
  {
    "text": "为此，提供了一个FIFO指令执行队列，称为历史缓冲器",
    "id": 4744,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "FIFO",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "队列",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6169,
    "created_at": "2024-08-12T12:35:14.939882Z",
    "updated_at": "2024-08-12T12:35:14.939882Z",
    "lead_time": 44.937
  },
  {
    "text": "一般说来，外围设备由三个基本部分组成",
    "id": 4745,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6170,
    "created_at": "2024-08-12T12:35:39.685601Z",
    "updated_at": "2024-08-12T12:35:39.685601Z",
    "lead_time": 24.247
  },
  {
    "text": "在有些计算机中，由硬件产生的向量地址不是直接地址，而是一个“位移量”，这个位移量加上CPU某寄存器里存放的基地址，最后得到中断服务程序的入口地址",
    "id": 4746,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 46,
        "end": 49,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 45,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 54,
        "end": 56,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 70,
        "end": 72,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 61,
        "end": 67,
        "text": "中断服务程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6171,
    "created_at": "2024-08-12T12:37:27.920875Z",
    "updated_at": "2024-08-12T12:37:27.920875Z",
    "lead_time": 107.685
  },
  {
    "text": "在计算机系统中，为了保证高速的主机和不同速度的外设之间的高效和可靠的交互，CPU必须通过IO接口与外设连接",
    "id": 4747,
    "label": [
      {
        "start": 1,
        "end": 6,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 44,
        "end": 48,
        "text": "IO接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6172,
    "created_at": "2024-08-12T12:37:38.948854Z",
    "updated_at": "2024-08-12T12:37:38.948854Z",
    "lead_time": 10.315
  },
  {
    "text": "此时的指令格式称为R型寄存器指令",
    "id": 4748,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6173,
    "created_at": "2024-08-12T12:37:49.244941Z",
    "updated_at": "2024-08-12T12:37:49.244941Z",
    "lead_time": 9.297
  },
  {
    "text": "例如，单地址的指令格式，就不是明显地在地址字段中指出第二操作数的地址，而是规定累加寄存器AC作为第二操作数地址",
    "id": 4749,
    "label": [
      {
        "start": 50,
        "end": 55,
        "text": "操作数地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "地址字段",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 41,
        "end": 44,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "单地址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6174,
    "created_at": "2024-08-12T12:38:07.469617Z",
    "updated_at": "2024-08-12T12:38:07.469617Z",
    "lead_time": 17.434
  },
  {
    "text": "操作系统在管理该层次结构时起到关键作用，当它决定要把某一页移到磁盘上去时，就迫使该页的全部内容从cache中删除",
    "id": 4750,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 48,
        "end": 53,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 28,
        "end": 29,
        "text": "页",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 41,
        "end": 42,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6175,
    "created_at": "2024-08-12T12:38:13.656571Z",
    "updated_at": "2024-08-12T12:38:13.656571Z",
    "lead_time": 5.478
  },
  {
    "text": "桥又是一个总线转换部件，可以把一条总线的地址空间映射到另一条总线的地址空间上，从而使系统中任意一个总线主设备都能看到同样的一份地址表",
    "id": 4751,
    "label": [
      {
        "start": 20,
        "end": 24,
        "text": "地址空间",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "地址空间",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 51,
        "end": 54,
        "text": "主设备",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 63,
        "end": 65,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 1,
        "text": "桥",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6176,
    "created_at": "2024-08-12T12:39:06.999222Z",
    "updated_at": "2024-08-12T12:39:06.999222Z",
    "lead_time": 52.527
  },
  {
    "text": "为了执行任何给定的指令，必须对操作码进行测试，以便识别所要求的操作",
    "id": 4752,
    "label": [
      {
        "start": 15,
        "end": 18,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6177,
    "created_at": "2024-08-12T12:39:21.934661Z",
    "updated_at": "2024-08-12T12:39:21.934661Z",
    "lead_time": 14.328
  },
  {
    "text": "LEGACY总线可以是ISA、EISA、MCA等这类性能较低的传统总线，以便充分利用市场上丰富的适配器卡，支持中、低速IO设备",
    "id": 4753,
    "label": [
      {
        "start": 57,
        "end": 63,
        "text": "低速IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 15,
        "end": 19,
        "text": "EISA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "ISA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 48,
        "end": 51,
        "text": "适配器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6178,
    "created_at": "2024-08-12T12:39:32.601392Z",
    "updated_at": "2024-08-12T12:39:32.601392Z",
    "lead_time": 10.065
  },
  {
    "text": "总线有物理特性、功能特性、电气特性、机械特性，因此必须标准化",
    "id": 4754,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "物理特性",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "功能特性",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "电气特性",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "机械特性",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6179,
    "created_at": "2024-08-12T12:40:17.098596Z",
    "updated_at": "2024-08-12T12:40:17.098596Z",
    "lead_time": 43.9
  },
  {
    "text": "应用程序是针对某一应用课题领域开发的软件",
    "id": 4755,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "应用程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6180,
    "created_at": "2024-08-12T12:41:35.828986Z",
    "updated_at": "2024-08-12T12:41:35.828986Z",
    "lead_time": 77.909
  },
  {
    "text": "这条指令是有意安排的，因为它们是非常典型的，既有RR型指令，又有RS型指令；既有算术逻辑指令，又有访存指令，还有程序转移指令",
    "id": 4756,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 32,
        "end": 37,
        "text": "RS型指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 24,
        "end": 29,
        "text": "RR型指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 49,
        "end": 53,
        "text": "访存指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 40,
        "end": 46,
        "text": "算术逻辑指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 56,
        "end": 62,
        "text": "程序转移指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6181,
    "created_at": "2024-08-12T12:42:43.557734Z",
    "updated_at": "2024-08-12T12:42:43.557734Z",
    "lead_time": 67.086
  },
  {
    "text": "硬磁盘是指记录介质为硬质圆形盘片的磁表面存储器",
    "id": 4757,
    "label": [
      {
        "start": 17,
        "end": 23,
        "text": "磁表面存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "盘片",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6182,
    "created_at": "2024-08-12T12:42:47.220265Z",
    "updated_at": "2024-08-12T12:42:47.220265Z",
    "lead_time": 3.037
  },
  {
    "text": "如磁带存储器就是顺序存取存储器，它的存取周期较长",
    "id": 4758,
    "label": [
      {
        "start": 18,
        "end": 22,
        "text": "存取周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6183,
    "created_at": "2024-08-12T12:43:03.384555Z",
    "updated_at": "2024-08-12T12:43:03.384555Z",
    "lead_time": 15.493
  },
  {
    "text": "页表中对应每一个物理页号有一个表项，表项的内容包含该物理页所对应的逻辑页号",
    "id": 4759,
    "label": [
      {
        "start": 33,
        "end": 37,
        "text": "逻辑页号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "物理页号",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 29,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6184,
    "created_at": "2024-08-12T12:43:20.203758Z",
    "updated_at": "2024-08-12T12:43:20.203758Z",
    "lead_time": 16.207
  },
  {
    "text": "在RAID控制器的组织管理下，可实现数据的并行存储、交叉存储、单独存储",
    "id": 4760,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "RAID",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6185,
    "created_at": "2024-08-12T12:43:28.261862Z",
    "updated_at": "2024-08-12T12:43:28.261862Z",
    "lead_time": 7.474
  },
  {
    "text": "DMA的种类很多，但多种DMA至少能执行以下一些基本操作",
    "id": 4761,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6186,
    "created_at": "2024-08-12T12:43:30.797884Z",
    "updated_at": "2024-08-12T12:43:30.797884Z",
    "lead_time": 2.04
  },
  {
    "text": "根据设计方法不同，操作控制器可分为时序逻辑型和存储逻辑型两种",
    "id": 4762,
    "label": [
      {
        "start": 9,
        "end": 14,
        "text": "操作控制器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6187,
    "created_at": "2024-08-12T12:43:35.094610Z",
    "updated_at": "2024-08-12T12:43:35.094610Z",
    "lead_time": 3.764
  },
  {
    "text": "显然人的思维速度跟不上计算机的计算速度，要摆脱这种情况还要依靠计算机来管理自己和管理用户，于是人们又创造出一类程序，叫做操作系统",
    "id": 4763,
    "label": [
      {
        "start": 60,
        "end": 64,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6188,
    "created_at": "2024-08-12T12:43:40.627596Z",
    "updated_at": "2024-08-12T12:43:40.627596Z",
    "lead_time": 5.04
  },
  {
    "text": "两个正数相加，结果大于机器字长所能表示的最大正数，称为正溢",
    "id": 4764,
    "label": [
      {
        "start": 11,
        "end": 15,
        "text": "机器字长",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6189,
    "created_at": "2024-08-12T12:43:49.438686Z",
    "updated_at": "2024-08-12T12:43:49.438686Z",
    "lead_time": 8.273
  },
  {
    "text": "在向量中断方式中，查找中断源、中断排队与判优、获取中断服务程序入口地址都是由硬件在中断周期中自动完成的",
    "id": 4765,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 7,
        "text": "向量中断方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 25,
        "end": 31,
        "text": "中断服务程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 41,
        "end": 45,
        "text": "中断周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6190,
    "created_at": "2024-08-12T12:44:10.314678Z",
    "updated_at": "2024-08-12T12:44:10.314678Z",
    "lead_time": 20.398
  },
  {
    "text": "因此流水处理大幅度地改善了计算机的系统性能，是在计算机上实现时间并行性的一种非常经济的方法",
    "id": 4766,
    "label": [
      {
        "start": 30,
        "end": 34,
        "text": "时间并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "流水",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6191,
    "created_at": "2024-08-12T12:44:17.583731Z",
    "updated_at": "2024-08-12T12:44:17.583731Z",
    "lead_time": 6.629
  },
  {
    "text": "三个寄存器R、R、R的时钟输入端、、也需要加以控制，以便在ALU运算完毕而输出公共总线上电平稳定时，将结果打入到某一寄存器",
    "id": 4767,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 58,
        "end": 61,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "电平",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6192,
    "created_at": "2024-08-12T12:44:26.008351Z",
    "updated_at": "2024-08-12T12:44:26.008351Z",
    "lead_time": 7.837
  },
  {
    "text": "方式码的b位为VESA标志位，bb为保留位，故VESA的显示方式号为h",
    "id": 4768,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "VESA",
        "labels": [
          "GRP"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "VESA",
        "labels": [
          "GRP"
        ]
      },
      {
        "start": 5,
        "end": 6,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 14,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 21,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6193,
    "created_at": "2024-08-12T12:44:31.321538Z",
    "updated_at": "2024-08-12T12:44:31.321538Z",
    "lead_time": 4.675
  },
  {
    "text": "一块主适配器可以接台具有SCSI接口的设备，这些设备可以是类型完全不同的设备，主适配器却只占主机的一个槽口",
    "id": 4769,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "适配器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "适配器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6194,
    "created_at": "2024-08-12T12:45:31.615978Z",
    "updated_at": "2024-08-12T12:45:40.638481Z",
    "lead_time": 63.19
  },
  {
    "text": "处理机字长指处理机运算器中一次能够完成二进制数运算的位数，如位、位",
    "id": 4770,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "处理机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 31,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 32,
        "end": 33,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "处理机字长",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6195,
    "created_at": "2024-08-12T12:46:08.718369Z",
    "updated_at": "2024-08-12T12:46:08.718369Z",
    "lead_time": 26.049
  },
  {
    "text": "与停止CPU访内的DMA方法比较，周期挪用的方法既实现了IO传送，又较好地发挥了内存和CPU的效率，是一种广泛采用的方法",
    "id": 4771,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "周期挪用",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6196,
    "created_at": "2024-08-12T12:46:26.917896Z",
    "updated_at": "2024-08-12T12:46:26.918881Z",
    "lead_time": 17.1
  },
  {
    "text": "数据地址寄存器AR数据地址寄存器用来保存当前CPU所访问的数据存储器简称数存单元的地址",
    "id": 4772,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "地址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 16,
        "text": "地址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6197,
    "created_at": "2024-08-12T12:46:49.771793Z",
    "updated_at": "2024-08-12T12:46:49.771793Z",
    "lead_time": 19.978
  },
  {
    "text": "执行部件通过反馈线向控制部件反映操作情况，以便使控制部件根据执行部件的“状态”来下达新的微命令，这也称为“状态测试”",
    "id": 4773,
    "label": [
      {
        "start": 44,
        "end": 47,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6198,
    "created_at": "2024-08-12T12:46:58.327081Z",
    "updated_at": "2024-08-12T12:46:58.327081Z",
    "lead_time": 6.189
  },
  {
    "text": "这些因素将造成信号在总线上的畸变和延时，使总线最高传输速率受到限制",
    "id": 4774,
    "label": [
      {
        "start": 25,
        "end": 29,
        "text": "传输速率",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6199,
    "created_at": "2024-08-12T12:48:17.502560Z",
    "updated_at": "2024-08-12T12:48:17.502560Z",
    "lead_time": 76.943
  },
  {
    "text": "通过页表可以把虚地址逻辑地址转换成物理地址",
    "id": 4775,
    "label": [
      {
        "start": 17,
        "end": 21,
        "text": "物理地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "逻辑地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "虚地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6200,
    "created_at": "2024-08-12T12:48:23.669374Z",
    "updated_at": "2024-08-12T12:48:23.669374Z",
    "lead_time": 5.65
  },
  {
    "text": "在地址期内除给出目标地址外，还在CBE线上给出总线命令以指明总线周期类型",
    "id": 4776,
    "label": [
      {
        "start": 23,
        "end": 25,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "目标地址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "地址期",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6201,
    "created_at": "2024-08-12T12:48:35.084983Z",
    "updated_at": "2024-08-12T12:48:35.084983Z",
    "lead_time": 10.878
  },
  {
    "text": "缺点是每个主存块只有一个固定的行位置可存放",
    "id": 4777,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "主存块",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6202,
    "created_at": "2024-08-12T12:48:41.166636Z",
    "updated_at": "2024-08-12T12:48:41.167645Z",
    "lead_time": 5.301
  },
  {
    "text": "但有的总线允许一个主方对多个从方进行写操作，这种操作称为广播",
    "id": 4778,
    "label": [
      {
        "start": 28,
        "end": 30,
        "text": "广播",
        "labels": [
          "PROT"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6203,
    "created_at": "2024-08-12T12:48:44.873544Z",
    "updated_at": "2024-08-12T12:48:44.873544Z",
    "lead_time": 2.981
  },
  {
    "text": "字节的扇区标识ID区用于说明此扇区的地址和工作模式",
    "id": 4779,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "扇区",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "扇区",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6204,
    "created_at": "2024-08-12T12:48:48.812249Z",
    "updated_at": "2024-08-12T12:48:48.812249Z",
    "lead_time": 3.192
  },
  {
    "text": "但汉字同音字太多，输入重码率很高，因此按拼音输入后还必须进行同音字选择，影响了输入速度",
    "id": 4780,
    "label": [
      {
        "start": 1,
        "end": 3,
        "text": "汉字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6205,
    "created_at": "2024-08-12T12:48:53.757278Z",
    "updated_at": "2024-08-12T12:48:53.757278Z",
    "lead_time": 4.064
  },
  {
    "text": "框图中DBUS代表数据总线，ABUSD代表数存地址总线，ABUSI代表指存地址总线，RDD代表数存读命令，WED代表数存写命令，RDI代表指存读命令",
    "id": 4781,
    "label": [
      {
        "start": 28,
        "end": 33,
        "text": "ABUSI",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "地址总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 41,
        "text": "地址总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6206,
    "created_at": "2024-08-12T12:49:01.334903Z",
    "updated_at": "2024-08-12T12:49:01.334903Z",
    "lead_time": 6.702
  },
  {
    "text": "MB分页方式的地址转换如图所示",
    "id": 4782,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "地址转换",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "MB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "分页",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6207,
    "created_at": "2024-08-12T12:49:05.859531Z",
    "updated_at": "2024-08-12T12:49:05.859531Z",
    "lead_time": 3.503
  },
  {
    "text": "由于所有的位同时被传送，所以并行数据传送比串行数据传送快得多，例如，使用条单独的地址线，可以从CPU的地址寄存器同时传送位地址信息给主存",
    "id": 4783,
    "label": [
      {
        "start": 51,
        "end": 56,
        "text": "地址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 60,
        "end": 63,
        "text": "位地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 47,
        "end": 50,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 66,
        "end": 68,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 5,
        "end": 6,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6208,
    "created_at": "2024-08-12T12:49:12.523656Z",
    "updated_at": "2024-08-12T12:49:12.523656Z",
    "lead_time": 5.278
  },
  {
    "text": "外围处理机IO方式一般应用于大型高效率的计算机系统中",
    "id": 4784,
    "label": [
      {
        "start": 20,
        "end": 25,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "外围处理机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6209,
    "created_at": "2024-08-12T12:49:26.330270Z",
    "updated_at": "2024-08-12T12:49:26.330270Z",
    "lead_time": 11.743
  },
  {
    "text": "CPU通过HOST桥的两个位专用寄存器配置地址、配置数据来访问PCI设备的配置空间",
    "id": 4785,
    "label": [
      {
        "start": 14,
        "end": 19,
        "text": "专用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 10,
        "text": "HOST桥",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "PCI",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 14,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6210,
    "created_at": "2024-08-12T12:50:05.689042Z",
    "updated_at": "2024-08-12T12:50:05.689042Z",
    "lead_time": 36.986
  },
  {
    "text": "总线仲裁器中有一个排队电路，它根据一定的优先次序决定首先响应哪个设备的请求，给设备以授权信号BGi",
    "id": 4786,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "总线仲裁",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6211,
    "created_at": "2024-08-12T12:50:11.286113Z",
    "updated_at": "2024-08-12T12:50:11.287134Z",
    "lead_time": 3.98
  },
  {
    "text": "由于程序访问的局部性，实现这个目标是可能的",
    "id": 4787,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6212,
    "created_at": "2024-08-12T12:50:15.305716Z",
    "updated_at": "2024-08-12T12:50:15.306721Z",
    "lead_time": 2.741
  },
  {
    "text": "DMA方式一般用于高速传送成组数据",
    "id": 4788,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6213,
    "created_at": "2024-08-12T12:50:18.983738Z",
    "updated_at": "2024-08-12T12:50:18.983738Z",
    "lead_time": 2.355
  },
  {
    "text": "第一种称为硬布线控制器，它是采用时序逻辑技术来实现的；第二种称为微程序控制器，它是采用存储逻辑来实现的",
    "id": 4789,
    "label": [
      {
        "start": 5,
        "end": 11,
        "text": "硬布线控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 38,
        "text": "微程序控制器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6214,
    "created_at": "2024-08-12T12:50:24.376729Z",
    "updated_at": "2024-08-12T12:50:24.376729Z",
    "lead_time": 4.34
  },
  {
    "text": "该芯片有两种工作模式：字模式组织成Mbit，需要AA共位地址，DQDQ共位数据线；字节模式组织成Mbit，需要AA共位地址，DQDQ共位数据线",
    "id": 4790,
    "label": [
      {
        "start": 37,
        "end": 40,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 68,
        "end": 71,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "bit",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 49,
        "end": 52,
        "text": "bit",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 37,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 67,
        "end": 68,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 59,
        "end": 61,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 27,
        "end": 28,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6215,
    "created_at": "2024-08-12T12:51:18.725946Z",
    "updated_at": "2024-08-12T12:51:18.725946Z",
    "lead_time": 52.799
  },
  {
    "text": "为了避免对主存访问次数的增多，可以对页表本身实行二级缓存，把页表中最活跃的部分存放在高速存储器中",
    "id": 4791,
    "label": [
      {
        "start": 42,
        "end": 47,
        "text": "高速存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "缓存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6216,
    "created_at": "2024-08-12T12:51:22.716670Z",
    "updated_at": "2024-08-12T12:51:22.716670Z",
    "lead_time": 2.842
  },
  {
    "text": "这一发展趋势中的另一阶段是在年，贝尔实验室和HP公司开发出了位单片微处理器",
    "id": 4792,
    "label": [
      {
        "start": 33,
        "end": 37,
        "text": "微处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 31,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6217,
    "created_at": "2024-08-12T12:51:25.635783Z",
    "updated_at": "2024-08-12T12:51:25.635783Z",
    "lead_time": 2.132
  },
  {
    "text": "因此，对于分段的存储器，用户的虚拟地址空间是TB",
    "id": 4793,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 15,
        "end": 21,
        "text": "虚拟地址空间",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "TB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "分段",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6218,
    "created_at": "2024-08-12T12:51:29.308644Z",
    "updated_at": "2024-08-12T12:51:29.308644Z",
    "lead_time": 2.833
  },
  {
    "text": "为了读出数据，片选信号CS和读出使能信号OE也必须有效由高电平变为低电平",
    "id": 4794,
    "label": [
      {
        "start": 28,
        "end": 31,
        "text": "高电平",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "片选信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "低电平",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6219,
    "created_at": "2024-08-16T06:57:21.737043Z",
    "updated_at": "2024-08-16T06:57:21.737043Z",
    "lead_time": 135.607
  },
  {
    "text": "因此当前的刷存容量一般在MB，由高速的DRAM组成",
    "id": 4795,
    "label": [
      {
        "start": 12,
        "end": 14,
        "text": "MB",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6220,
    "created_at": "2024-08-16T06:59:11.937901Z",
    "updated_at": "2024-08-16T06:59:11.937901Z",
    "lead_time": 109.788
  },
  {
    "text": "对称性是指：在指令系统中所有的寄存器和存储器单元都可同等对待，所有的指令都可使用各种寻址方式；匀齐性是指：一种操作性质的指令可以支持各种数据类型，如算术运算指令可支持字节、字、双字整数的运算，十进制数运算和单、双精度浮点数运算等；指令格式和数据格式的一致性是指：指令长度和数据长度有一定的关系，以方便处理和存取",
    "id": 4796,
    "label": [
      {
        "start": 15,
        "end": 18,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 74,
        "end": 80,
        "text": "算术运算指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 105,
        "end": 111,
        "text": "双精度浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 42,
        "end": 46,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 115,
        "end": 119,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 96,
        "end": 99,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 60,
        "end": 62,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 131,
        "end": 133,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 83,
        "end": 85,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 86,
        "end": 87,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 89,
        "end": 90,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6221,
    "created_at": "2024-08-16T06:59:25.451989Z",
    "updated_at": "2024-08-16T06:59:25.451989Z",
    "lead_time": 13.111
  },
  {
    "text": "每个SCSI设备有自己的唯一设备号ID",
    "id": 4797,
    "annotator": 1,
    "annotation_id": 6222,
    "created_at": "2024-08-16T06:59:40.366805Z",
    "updated_at": "2024-08-16T06:59:40.367321Z",
    "lead_time": 14.432
  },
  {
    "text": "由于非晶形区域比水晶形区域反射的光线强度弱，这样读数据时就可以区分出是还是",
    "id": 4798,
    "annotator": 1,
    "annotation_id": 6223,
    "created_at": "2024-08-16T06:59:42.729764Z",
    "updated_at": "2024-08-16T06:59:42.729764Z",
    "lead_time": 2.002
  },
  {
    "text": "如图所示，在这个磁场作用下，载磁体就被磁化成相应极性的磁化位或磁化元",
    "id": 4799,
    "annotator": 1,
    "annotation_id": 6224,
    "created_at": "2024-08-16T06:59:50.419404Z",
    "updated_at": "2024-08-16T06:59:50.419404Z",
    "lead_time": 7.316
  },
  {
    "text": "由于外围设备种类繁多且速度不同，因而每种设备都有适应它自己工作特点的设备控制器",
    "id": 4800,
    "label": [
      {
        "start": 36,
        "end": 39,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6225,
    "created_at": "2024-08-16T06:59:55.475411Z",
    "updated_at": "2024-08-16T06:59:55.475411Z",
    "lead_time": 4.669
  },
  {
    "text": "内部总线是指CPU内各部件的连线，而外部总线是指系统总线，即CPU与存储器、IO系统之间的连线",
    "id": 4801,
    "label": [
      {
        "start": 24,
        "end": 28,
        "text": "系统总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "外部总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "内部总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6226,
    "created_at": "2024-08-16T07:01:05.607292Z",
    "updated_at": "2024-08-16T07:01:05.607292Z",
    "lead_time": 69.714
  },
  {
    "text": "它主要用于系统资源的分配和管理，包括改变系统工作方式，检测用户的访问权限，修改虚拟存储器管理的段表、页表，完成任务的创建和切换等",
    "id": 4802,
    "label": [
      {
        "start": 39,
        "end": 44,
        "text": "虚拟存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "段表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6227,
    "created_at": "2024-08-16T07:01:11.195096Z",
    "updated_at": "2024-08-16T07:01:11.195096Z",
    "lead_time": 5.16
  },
  {
    "text": "在全相联cache中，全部标记用一个相联存储器来实现，全部数据存储用一个普通RAM来实现",
    "id": 4803,
    "label": [
      {
        "start": 18,
        "end": 23,
        "text": "相联存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "RAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 9,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "全相联",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6228,
    "created_at": "2024-08-16T07:01:56.539692Z",
    "updated_at": "2024-08-16T07:01:56.539692Z",
    "lead_time": 44.957
  },
  {
    "text": "故溢出逻辑表达式为VCfC，其中Cf为符号位产生的进位，C为最高有效位产生的进位",
    "id": 4804,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "逻辑表达式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "有效位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6229,
    "created_at": "2024-08-16T07:01:59.141037Z",
    "updated_at": "2024-08-16T07:02:39.215934Z",
    "lead_time": 38.46
  },
  {
    "text": "用编辑程序建立好的汇编语言源程序，需要经过系统软件中的“汇编器”翻译为机器语言程序之后，才能交付给计算机硬件系统去执行",
    "id": 4805,
    "label": [
      {
        "start": 49,
        "end": 54,
        "text": "计算机硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "汇编语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 35,
        "end": 39,
        "text": "机器语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "系统软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "源程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "汇编器",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6230,
    "created_at": "2024-08-16T07:02:46.595428Z",
    "updated_at": "2024-08-16T07:02:46.595428Z",
    "lead_time": 4.753
  },
  {
    "text": "早期的计算机系统只有单一的存储器存放为数不多的数据和指令",
    "id": 4806,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 8,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6231,
    "created_at": "2024-08-16T07:02:52.397019Z",
    "updated_at": "2024-08-16T07:02:52.397527Z",
    "lead_time": 5.323
  },
  {
    "text": "图表示基本的静态存储元阵列",
    "id": 4807,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "存储元",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6232,
    "created_at": "2024-08-16T07:03:42.621677Z",
    "updated_at": "2024-08-16T07:03:42.621677Z",
    "lead_time": 49.848
  },
  {
    "text": "向存储器中存数或者从存储器中取数，都要按给定的地址来寻找所选的存储单元，这相当于上面所讲的横格纸每一行存放一个数一样",
    "id": 4808,
    "label": [
      {
        "start": 31,
        "end": 35,
        "text": "存储单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6233,
    "created_at": "2024-08-16T07:03:46.336954Z",
    "updated_at": "2024-08-16T07:03:46.336954Z",
    "lead_time": 3.308
  },
  {
    "text": "之后，CPU与系统总线相脱离，而DMA控制器接管数据总线与地址总线的控制，并向内存提供地址，于是，在内存和外围设备之间进行数据交换",
    "id": 4809,
    "label": [
      {
        "start": 16,
        "end": 22,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "系统总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 53,
        "end": 57,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "地址总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6234,
    "created_at": "2024-08-16T07:03:48.380105Z",
    "updated_at": "2024-08-16T07:03:48.380105Z",
    "lead_time": 1.627
  },
  {
    "text": "周期挪用方式在这种DMA传送方法中，当IO设备没有DMA请求时，CPU按程序要求访问内存；一旦IO设备有DMA请求，则由IO设备挪用一个或几个内存周期",
    "id": 4810,
    "label": [
      {
        "start": 9,
        "end": 14,
        "text": "DMA传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 47,
        "end": 51,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 60,
        "end": 64,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 52,
        "end": 55,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 71,
        "end": 73,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6235,
    "created_at": "2024-08-16T07:03:50.634356Z",
    "updated_at": "2024-08-16T07:03:50.634356Z",
    "lead_time": 1.826
  },
  {
    "text": "写后读、读修改写操作这是两种组合操作",
    "id": 4811,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6236,
    "created_at": "2024-08-16T07:03:51.932056Z",
    "updated_at": "2024-08-16T07:03:51.932056Z",
    "lead_time": 0.87
  },
  {
    "text": "然而当经位数据总线存取数据时，数据传送是以双字为单位进行的，双字的起始地址是能被整除的",
    "id": 4812,
    "label": [
      {
        "start": 33,
        "end": 37,
        "text": "起始地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 5,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 26,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 23,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 31,
        "end": 32,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6237,
    "created_at": "2024-08-16T07:03:57.875737Z",
    "updated_at": "2024-08-16T07:03:57.875737Z",
    "lead_time": 5.528
  },
  {
    "text": "主存容量为块，其中BBBB共个主存块映射到cache第S组；BBBB共个主存块映射到cache的第S组；以此类推",
    "id": 4813,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 26,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 42,
        "end": 47,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "主存块",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "主存块",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6238,
    "created_at": "2024-08-16T07:04:30.869307Z",
    "updated_at": "2024-08-16T07:04:30.869307Z",
    "lead_time": 32.574
  },
  {
    "text": "转换接口模块可以完成任何要求的数据转换，如并串转换或串并转换，因此数据能在外围设备和CPU之间正确地进行传送",
    "id": 4814,
    "label": [
      {
        "start": 37,
        "end": 41,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 42,
        "end": 45,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6239,
    "created_at": "2024-08-16T07:04:34.617006Z",
    "updated_at": "2024-08-16T07:04:34.617006Z",
    "lead_time": 3.333
  },
  {
    "text": "我们知道，除CPU模块外，IO模块也可提出总线请求",
    "id": 4815,
    "label": [
      {
        "start": 21,
        "end": 25,
        "text": "总线请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "IO模块",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6240,
    "created_at": "2024-08-16T07:04:37.245338Z",
    "updated_at": "2024-08-16T07:04:37.245338Z",
    "lead_time": 2.254
  },
  {
    "text": "当前的计算机都采用统一的IEEE标准中的格式表示浮点数",
    "id": 4816,
    "label": [
      {
        "start": 24,
        "end": 27,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6241,
    "created_at": "2024-08-16T07:04:40.262187Z",
    "updated_at": "2024-08-16T07:04:40.262187Z",
    "lead_time": 2.56
  },
  {
    "text": "我们需要取每个数位，对它加，然后再存回，故需要的有效地址序列是AAA直到最后一个位置",
    "id": 4817,
    "label": [
      {
        "start": 24,
        "end": 28,
        "text": "有效地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 9,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6242,
    "created_at": "2024-08-16T07:05:19.031994Z",
    "updated_at": "2024-08-16T07:05:19.031994Z",
    "lead_time": 38.37
  },
  {
    "text": "二是要给出指数，用整数形式表示，常称为阶码，阶码指明小数点在数据中的位置，因而决定了浮点数的表示范围",
    "id": 4818,
    "label": [
      {
        "start": 19,
        "end": 21,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 42,
        "end": 45,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6243,
    "created_at": "2024-08-16T07:05:45.472677Z",
    "updated_at": "2024-08-16T07:05:45.472677Z",
    "lead_time": 26.035
  },
  {
    "text": "待这些信号稳定后，它发出读命令，指示有效地址和控制信号的出现",
    "id": 4819,
    "label": [
      {
        "start": 18,
        "end": 22,
        "text": "有效地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6244,
    "created_at": "2024-08-16T07:05:47.773763Z",
    "updated_at": "2024-08-16T07:05:47.773763Z",
    "lead_time": 1.899
  },
  {
    "text": "假设我们已经按微程序流程图编好了微程序，并已事先存放到控制存储器中",
    "id": 4820,
    "label": [
      {
        "start": 27,
        "end": 32,
        "text": "控制存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6245,
    "created_at": "2024-08-16T07:05:49.803366Z",
    "updated_at": "2024-08-16T07:05:49.803366Z",
    "lead_time": 1.652
  },
  {
    "text": "它与处理器无关，不论HOST总线上是单CPU还是多CPU，也不论CPU是什么型号，只要有相应的HOST桥芯片组，就可与PCI总线相连",
    "id": 4821,
    "label": [
      {
        "start": 10,
        "end": 16,
        "text": "HOST总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 47,
        "end": 52,
        "text": "HOST桥",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 59,
        "end": 64,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "多CPU",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 52,
        "end": 54,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6246,
    "created_at": "2024-08-16T07:05:51.427212Z",
    "updated_at": "2024-08-16T07:05:51.427212Z",
    "lead_time": 1.093
  },
  {
    "text": "输入输出指令输入输出指令主要用来启动外围设备，检查测试外围设备的工作状态，并实现外部设备和CPU之间，或外围设备与外围设备之间的信息传送",
    "id": 4822,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "输入输出指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 6,
        "end": 12,
        "text": "输入输出指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 64,
        "end": 68,
        "text": "信息传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 52,
        "end": 56,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 57,
        "end": 61,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 40,
        "end": 44,
        "text": "外部设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6247,
    "created_at": "2024-08-16T07:05:56.949982Z",
    "updated_at": "2024-08-16T07:05:56.949982Z",
    "lead_time": 5.088
  },
  {
    "text": "例如，指令长度和数据长度通常是字节长度的整数倍",
    "id": 4823,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6248,
    "created_at": "2024-08-16T07:09:13.872145Z",
    "updated_at": "2024-08-16T07:09:13.872145Z",
    "lead_time": 196.452
  },
  {
    "text": "例如，某机的IO指令格式如下：其中第位表示IO指令；OP表示操作码，用以指定IO指令的种操作类型；DMs表示个外部设备的设备地址，每个设备地址中可含有A、B、C三个数据寄存器；、位表示控制功能，如启动设备S、关闭设备C等；RR表示CPU中的个通用寄存器",
    "id": 4824,
    "label": [
      {
        "start": 30,
        "end": 33,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 82,
        "end": 87,
        "text": "数据寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 123,
        "end": 126,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 55,
        "end": 59,
        "text": "外部设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 60,
        "end": 64,
        "text": "设备地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 67,
        "end": 71,
        "text": "设备地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 115,
        "end": 118,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "OP",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 18,
        "end": 19,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 89,
        "end": 90,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6249,
    "created_at": "2024-08-16T07:09:18.824089Z",
    "updated_at": "2024-08-16T07:09:18.824089Z",
    "lead_time": 4.539
  },
  {
    "text": "专门用来完成此项工作的计算机部件称为中央处理器，通常简称CPU",
    "id": 4825,
    "label": [
      {
        "start": 18,
        "end": 23,
        "text": "中央处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6250,
    "created_at": "2024-08-16T07:09:25.272112Z",
    "updated_at": "2024-08-16T07:09:25.272112Z",
    "lead_time": 6.03
  },
  {
    "text": "然后再重新竞争总线，完成数据传送总线周期",
    "id": 4826,
    "label": [
      {
        "start": 16,
        "end": 20,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6251,
    "created_at": "2024-08-16T07:09:28.079276Z",
    "updated_at": "2024-08-16T07:09:28.079276Z",
    "lead_time": 2.419
  },
  {
    "text": "表SALJ的区块地址表底部引导区NOR闪存的总线操作与工作方式表给出了SALJ的部分总线操作",
    "id": 4827,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "块地址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6252,
    "created_at": "2024-08-16T07:09:29.402567Z",
    "updated_at": "2024-08-16T07:09:29.402567Z",
    "lead_time": 0.935
  },
  {
    "text": "符号表示信号低电平有效，in表示输入线，out表示输出线，ts表示双向三态信号线，sts表示一次只被一个拥有者驱动的抑制三态信号线，od表示开路驱动，允许多个设备以线或方式共享此线",
    "id": 4828,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "低电平",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6253,
    "created_at": "2024-08-16T07:09:38.134450Z",
    "updated_at": "2024-08-16T07:09:38.134450Z",
    "lead_time": 8.323
  },
  {
    "text": "由于DMA传送开始的时间是随机的，但开始传送后需要进行连续批量的数据交换，因此DMA方式非常适合主存与高速IO设备间的简单数据传送",
    "id": 4829,
    "label": [
      {
        "start": 48,
        "end": 50,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 2,
        "end": 7,
        "text": "DMA传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 53,
        "end": 57,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6254,
    "created_at": "2024-08-16T07:09:43.328033Z",
    "updated_at": "2024-08-16T07:09:43.328033Z",
    "lead_time": 4.781
  },
  {
    "text": "一个标准IO接口可能连接一个设备，也可能连接多个设备",
    "id": 4830,
    "label": [
      {
        "start": 4,
        "end": 8,
        "text": "IO接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6255,
    "created_at": "2024-08-16T07:09:45.437094Z",
    "updated_at": "2024-08-16T07:09:45.437094Z",
    "lead_time": 1.693
  },
  {
    "text": "CPU写入控制口的信息要由接口内的逻辑电路转换成相关控制信号发送给外设，外设的状态信息则由接口的逻辑电路转换成状态字存入状态口供CPU读取",
    "id": 4831,
    "label": [
      {
        "start": 26,
        "end": 30,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "逻辑电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 48,
        "end": 52,
        "text": "逻辑电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 64,
        "end": 67,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 57,
        "end": 58,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6256,
    "created_at": "2024-08-16T07:09:46.475401Z",
    "updated_at": "2024-08-16T07:09:46.475401Z",
    "lead_time": 0.65
  },
  {
    "text": "在运算过程中如出现大于字长绝对值的现象，称为“溢出”",
    "id": 4832,
    "label": [
      {
        "start": 23,
        "end": 25,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "字长",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6257,
    "created_at": "2024-08-16T07:09:48.274239Z",
    "updated_at": "2024-08-16T07:09:48.274239Z",
    "lead_time": 1.348
  },
  {
    "text": "指令系统体系结构主要包括：寄存器组织，存储器的组织和寻址方式，IO系统结构，数据类型及其表示，指令系统，中断机制，机器工作状态的定义及切换，以及保护机制等",
    "id": 4833,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 47,
        "end": 51,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 52,
        "end": 54,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6258,
    "created_at": "2024-08-16T07:09:51.139469Z",
    "updated_at": "2024-08-16T07:09:51.139469Z",
    "lead_time": 2.474
  },
  {
    "text": "由于存储器按字节编址，因而每次访存数据总线上可能会传输个地址字、个地址半字或者个地址字节的数据",
    "id": 4834,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "编址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 31,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 37,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6259,
    "created_at": "2024-08-16T07:10:01.371999Z",
    "updated_at": "2024-08-16T07:10:01.371999Z",
    "lead_time": 9.752
  },
  {
    "text": "在串行传送时，被传送的数据需要在发送部件进行并串变换，这称为拆卸；而在接收部件又需要进行串并变换，这称为装配",
    "id": 4835,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "串行传送",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6260,
    "created_at": "2024-08-16T07:10:55.328581Z",
    "updated_at": "2024-08-16T07:10:55.328581Z",
    "lead_time": 53.511
  },
  {
    "text": "现在计算n位行波进位加法器图b的时间延迟",
    "id": 4836,
    "label": [
      {
        "start": 6,
        "end": 13,
        "text": "行波进位加法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 6,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6261,
    "created_at": "2024-08-16T07:11:14.686834Z",
    "updated_at": "2024-08-16T07:11:14.686834Z",
    "lead_time": 18.954
  },
  {
    "text": "当然，磁表面存储器也有缺点，主要是存取速度较慢，机械结构复杂，对工作环境要求较高",
    "id": 4837,
    "label": [
      {
        "start": 3,
        "end": 9,
        "text": "磁表面存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "存取速度",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6262,
    "created_at": "2024-08-16T07:11:16.823307Z",
    "updated_at": "2024-08-16T07:11:16.823307Z",
    "lead_time": 1.715
  },
  {
    "text": "各类磁盘驱动器的具体结构虽然有差别，但基本结构相同，主要由定位驱动系统、主轴系统和数据转换系统组成",
    "id": 4838,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "磁盘驱动器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6263,
    "created_at": "2024-08-16T07:11:21.395542Z",
    "updated_at": "2024-08-16T07:11:21.395542Z",
    "lead_time": 4.19
  },
  {
    "text": "图为某种半同步总线的操作时序图",
    "id": 4839,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "同步总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6264,
    "created_at": "2024-08-16T07:11:22.528265Z",
    "updated_at": "2024-08-16T07:11:22.528265Z",
    "lead_time": 0.698
  },
  {
    "text": "微指令格式微指令的编译方法是决定微指令格式的主要因素",
    "id": 4840,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "编译",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6265,
    "created_at": "2024-08-16T07:11:23.636967Z",
    "updated_at": "2024-08-16T07:11:23.636967Z",
    "lead_time": 0.736
  },
  {
    "text": "但启动设备和目标设备是依当时总线运行状态来划分的，而不是预先规定的",
    "id": 4841,
    "label": [
      {
        "start": 14,
        "end": 16,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6266,
    "created_at": "2024-08-16T07:11:31.555524Z",
    "updated_at": "2024-08-16T07:11:31.555524Z",
    "lead_time": 7.518
  },
  {
    "text": "故溢出逻辑表达式为VSfSf，其中Sf和Sf分别为最高符号位和第二符号位",
    "id": 4842,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "逻辑表达式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6267,
    "created_at": "2024-08-16T07:11:57.967266Z",
    "updated_at": "2024-08-16T07:11:57.967266Z",
    "lead_time": 26.027
  },
  {
    "text": "所以，对于简单的慢速设备，接口与外设之间只需要数据信号线，无需握手联络信号线，接口只需实现数据缓冲和寻址功能，故称为无条件传送方式或零线握手联络方式",
    "id": 4843,
    "label": [
      {
        "start": 16,
        "end": 18,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "慢速设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6268,
    "created_at": "2024-08-16T07:12:10.954137Z",
    "updated_at": "2024-08-16T07:12:10.954137Z",
    "lead_time": 12.589
  },
  {
    "text": "在分离式总线定时协定中，由于每个设备都要申请总线使用权，故读数据的双方都是总线主方",
    "id": 4844,
    "label": [
      {
        "start": 22,
        "end": 27,
        "text": "总线使用权",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "总线定时",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6269,
    "created_at": "2024-08-16T07:12:18.801907Z",
    "updated_at": "2024-08-16T07:12:18.801907Z",
    "lead_time": 7.418
  },
  {
    "text": "因此，把汉字的笔画部件用字母或数字进行编码，按笔画的顺序依次输入，就能表示一个汉字",
    "id": 4845,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "汉字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "汉字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 13,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 17,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6270,
    "created_at": "2024-08-16T07:12:21.764940Z",
    "updated_at": "2024-08-16T07:12:21.764940Z",
    "lead_time": 2.497
  },
  {
    "text": "CPU取指令与执行指令的动态过程，请见CAI动画视频演示",
    "id": 4846,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "取指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6271,
    "created_at": "2024-08-16T07:12:23.939938Z",
    "updated_at": "2024-08-16T07:12:23.939938Z",
    "lead_time": 1.731
  },
  {
    "text": "实时性可保证图像和声音不会出现时断时续的现象，因此对多媒体数据传送特别重要",
    "id": 4847,
    "annotator": 1,
    "annotation_id": 6272,
    "created_at": "2024-08-16T07:12:48.208031Z",
    "updated_at": "2024-08-16T07:12:48.208031Z",
    "lead_time": 23.826
  },
  {
    "text": "图b表示系统总线写周期时序图",
    "id": 4848,
    "label": [
      {
        "start": 4,
        "end": 8,
        "text": "系统总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "写周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6273,
    "created_at": "2024-08-16T07:12:49.735923Z",
    "updated_at": "2024-08-16T07:12:49.735923Z",
    "lead_time": 1.142
  },
  {
    "text": "tWC时间称为写周期时间",
    "id": 4849,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "写周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6274,
    "created_at": "2024-08-16T07:12:50.737651Z",
    "updated_at": "2024-08-16T07:12:50.737651Z",
    "lead_time": 0.617
  },
  {
    "text": "与单个大容量磁盘相比，其优点是：如果两个IO请求正在等待两个不同的数据块，则被请求的块有可能在不同的盘上",
    "id": 4850,
    "label": [
      {
        "start": 20,
        "end": 24,
        "text": "IO请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6275,
    "created_at": "2024-08-16T07:12:53.010131Z",
    "updated_at": "2024-08-16T07:12:53.010131Z",
    "lead_time": 1.894
  },
  {
    "text": "总线上所有事件，即信号电平转换出现在时钟信号的下跳沿时刻，而对信号的采样出现在时钟信号的上跳沿时刻",
    "id": 4851,
    "label": [
      {
        "start": 18,
        "end": 22,
        "text": "时钟信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 43,
        "text": "时钟信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 44,
        "end": 47,
        "text": "上跳沿",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "电平",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6276,
    "created_at": "2024-08-16T07:12:54.384052Z",
    "updated_at": "2024-08-16T07:12:54.384052Z",
    "lead_time": 0.923
  },
  {
    "text": "由于刷新操作的优先级高，刷新操作时正常的读写操作被暂停，数据线输出被封锁",
    "id": 4852,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "优先级",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6277,
    "created_at": "2024-08-16T07:13:23.289266Z",
    "updated_at": "2024-08-16T07:13:23.289266Z",
    "lead_time": 28.394
  },
  {
    "text": "从而保证了堆栈中数据先进后出的存取顺序",
    "id": 4853,
    "label": [
      {
        "start": 5,
        "end": 7,
        "text": "堆栈",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6278,
    "created_at": "2024-08-16T07:13:32.687625Z",
    "updated_at": "2024-08-16T07:13:32.687625Z",
    "lead_time": 9.014
  },
  {
    "text": "显然，某些指令进行过程中需要两次访问内存，一次是取指令，另一次是取数据，如表中取数、乘法、加法、减法、存数指令就是如此",
    "id": 4854,
    "label": [
      {
        "start": 18,
        "end": 20,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 51,
        "end": 55,
        "text": "存数指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "取指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6279,
    "created_at": "2024-08-16T07:13:35.234322Z",
    "updated_at": "2024-08-16T07:13:35.234322Z",
    "lead_time": 2.127
  },
  {
    "text": "紫外线擦除PROMUVEPROM通常简称EPROM，器件的上方有一个石英窗口，通常将其从电路板上的插座上拔下后，在专用的擦除器中使用一定波长的紫外线照射数分钟至十余分钟即可擦除存储的信息，且可在通用编程器或电路板上实现多次编程和验证",
    "id": 4855,
    "label": [
      {
        "start": 11,
        "end": 16,
        "text": "EPROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 25,
        "text": "EPROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "PROM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6280,
    "created_at": "2024-08-16T07:14:17.378055Z",
    "updated_at": "2024-08-16T07:14:17.378055Z",
    "lead_time": 41.729
  },
  {
    "text": "段长可以根据需要动态改变，允许自由调度，以便有效利用主存空间",
    "id": 4856,
    "label": [
      {
        "start": 26,
        "end": 30,
        "text": "主存空间",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6281,
    "created_at": "2024-08-16T07:14:18.701400Z",
    "updated_at": "2024-08-16T07:14:18.701400Z",
    "lead_time": 0.811
  },
  {
    "text": "掩模ROM实际上是一个存储内容固定的ROM，由半导体生产厂家根据用户提供的信息代码在生产过程中将信息存入芯片内",
    "id": 4857,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "掩模ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "半导体",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 52,
        "end": 54,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6282,
    "created_at": "2024-08-16T07:14:23.186434Z",
    "updated_at": "2024-08-16T07:14:23.186434Z",
    "lead_time": 4.07
  },
  {
    "text": "CPU同时访问四个模块，由存储器控制部件控制它们分时使用数据总线进行信息传递",
    "id": 4858,
    "label": [
      {
        "start": 28,
        "end": 32,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6283,
    "created_at": "2024-08-16T07:14:44.955511Z",
    "updated_at": "2024-08-16T07:14:44.955511Z",
    "lead_time": 21.321
  },
  {
    "text": "从传统的观点看，可以把CPU总线看成是CPU引脚信号的延伸",
    "id": 4859,
    "label": [
      {
        "start": 11,
        "end": 16,
        "text": "CPU总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "引脚",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6284,
    "created_at": "2024-08-16T07:14:46.465841Z",
    "updated_at": "2024-08-16T07:14:46.465841Z",
    "lead_time": 1.1
  },
  {
    "text": "现以位位不带符号的阵列乘法器mn为例来说明并行阵列乘法器的基本原理",
    "id": 4860,
    "label": [
      {
        "start": 9,
        "end": 14,
        "text": "阵列乘法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 28,
        "text": "阵列乘法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 3,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 4,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6285,
    "created_at": "2024-08-16T07:15:05.738131Z",
    "updated_at": "2024-08-16T07:15:05.738131Z",
    "lead_time": 18.86
  },
  {
    "text": "缺点是在DMA控制器访内阶段，内存的效能没有充分发挥，相当一部分内存工作周期是空闲的",
    "id": 4861,
    "label": [
      {
        "start": 4,
        "end": 10,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6286,
    "created_at": "2024-08-16T07:15:07.451697Z",
    "updated_at": "2024-08-16T07:15:07.451697Z",
    "lead_time": 1.295
  },
  {
    "text": "k个周期后，流水线被装满，剩余的n个任务只需n个周期就能完成",
    "id": 4862,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6287,
    "created_at": "2024-08-16T07:15:10.138126Z",
    "updated_at": "2024-08-16T07:15:10.138126Z",
    "lead_time": 2.277
  },
  {
    "text": "启停控制逻辑机器一旦接通电源，就会自动产生原始的节拍脉冲信号TT，然而，只有在启动机器运行的情况下，才允许时序产生器发出CPU工作所需的节拍脉冲TT",
    "id": 4863,
    "label": [
      {
        "start": 24,
        "end": 30,
        "text": "节拍脉冲信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 53,
        "end": 58,
        "text": "时序产生器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 68,
        "end": 72,
        "text": "节拍脉冲",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 60,
        "end": 63,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6288,
    "created_at": "2024-08-16T07:15:12.547302Z",
    "updated_at": "2024-08-16T07:15:12.547302Z",
    "lead_time": 2.0
  },
  {
    "text": "因此，在早期计算机中为了简化硬件结构，采用串行的位乘法方案，即多次执行“加法移位”操作来实现",
    "id": 4864,
    "label": [
      {
        "start": 14,
        "end": 16,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "移位",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 24,
        "end": 25,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6289,
    "created_at": "2024-08-16T07:15:45.215920Z",
    "updated_at": "2024-08-16T07:15:45.215920Z",
    "lead_time": 32.22
  },
  {
    "text": "这是第一个通用微处理器，而和是为特殊用途而设计的",
    "id": 4865,
    "label": [
      {
        "start": 5,
        "end": 11,
        "text": "通用微处理器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6290,
    "created_at": "2024-08-16T07:15:46.580387Z",
    "updated_at": "2024-08-16T07:15:46.580387Z",
    "lead_time": 0.938
  },
  {
    "text": "在数据传送过程中，没有保存现场、恢复现场之类的工作",
    "id": 4866,
    "annotator": 1,
    "annotation_id": 6291,
    "created_at": "2024-08-16T07:15:47.477396Z",
    "updated_at": "2024-08-16T07:15:47.477396Z",
    "lead_time": 0.506
  },
  {
    "text": "同程序查询方式相比，中断方式硬件结构相对复杂，软件复杂度也提高了，服务开销时间较大",
    "id": 4867,
    "label": [
      {
        "start": 14,
        "end": 16,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "中断方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 1,
        "end": 7,
        "text": "程序查询方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6292,
    "created_at": "2024-08-16T07:15:57.050021Z",
    "updated_at": "2024-08-16T07:15:57.050021Z",
    "lead_time": 9.168
  },
  {
    "text": "图b表示非流水计算机的时空图",
    "id": 4868,
    "label": [
      {
        "start": 5,
        "end": 10,
        "text": "流水计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "时空图",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6293,
    "created_at": "2024-08-16T07:15:58.670083Z",
    "updated_at": "2024-08-16T07:15:58.670083Z",
    "lead_time": 1.169
  },
  {
    "text": "不同类型的桥扩展出不同层次的总线，并分别连接高速、中速和低速设备",
    "id": 4869,
    "label": [
      {
        "start": 14,
        "end": 16,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 6,
        "text": "桥",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "低速设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6294,
    "created_at": "2024-08-16T07:16:48.257028Z",
    "updated_at": "2024-08-16T07:16:48.257028Z",
    "lead_time": 49.155
  },
  {
    "text": "配置读写周期是PCI具有自动配置能力的体现",
    "id": 4870,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "PCI",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "读写周期",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6295,
    "created_at": "2024-08-16T07:16:49.960940Z",
    "updated_at": "2024-08-16T07:16:49.960940Z",
    "lead_time": 1.289
  },
  {
    "text": "首先我们看看输入输出设备同CPU交换数据的一般过程",
    "id": 4871,
    "label": [
      {
        "start": 6,
        "end": 12,
        "text": "输入输出设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6296,
    "created_at": "2024-08-16T07:16:51.279835Z",
    "updated_at": "2024-08-16T07:16:51.279835Z",
    "lead_time": 0.903
  },
  {
    "text": "奇偶校验只能检出位错误，不能纠正错误",
    "id": 4872,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "奇偶校验",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 9,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6297,
    "created_at": "2024-08-16T07:16:52.245144Z",
    "updated_at": "2024-08-16T07:16:52.245144Z",
    "lead_time": 0.557
  },
  {
    "text": "SASA大小均为KB",
    "id": 4873,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "KB",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6298,
    "created_at": "2024-08-16T07:16:53.173245Z",
    "updated_at": "2024-08-16T07:16:53.173245Z",
    "lead_time": 0.52
  },
  {
    "text": "这些同时运行的程序到底占用实际内存中的哪一部分，在编制程序时是无法确定的，必须等到程序运行时才动态分配",
    "id": 4874,
    "label": [
      {
        "start": 15,
        "end": 17,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6299,
    "created_at": "2024-08-16T07:16:53.880232Z",
    "updated_at": "2024-08-16T07:16:53.880232Z",
    "lead_time": 0.303
  },
  {
    "text": "注意，图中微指令给出的控制信号都是节拍电位信号，它们的持续时间都是一个CPU周期",
    "id": 4875,
    "label": [
      {
        "start": 17,
        "end": 21,
        "text": "节拍电位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 35,
        "end": 40,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6300,
    "created_at": "2024-08-16T07:16:55.105081Z",
    "updated_at": "2024-08-16T07:16:55.105081Z",
    "lead_time": 0.808
  },
  {
    "text": "空间局部性：最近被访问的信息邻近地址的信息也可能被访问",
    "id": 4876,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "空间局部性",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6301,
    "created_at": "2024-08-16T07:16:56.746749Z",
    "updated_at": "2024-08-16T07:16:56.746749Z",
    "lead_time": 1.199
  },
  {
    "text": "图b表示组相联映射的示意图",
    "id": 4877,
    "label": [
      {
        "start": 4,
        "end": 9,
        "text": "组相联映射",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6302,
    "created_at": "2024-08-16T07:16:57.616391Z",
    "updated_at": "2024-08-16T07:17:04.244935Z",
    "lead_time": 5.218999999999999
  },
  {
    "text": "各种不同操作数的指令格式如下所示：零地址指令的指令字中只有操作码，而没有地址码",
    "id": 4878,
    "label": [
      {
        "start": 17,
        "end": 20,
        "text": "零地址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "指令字",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6303,
    "created_at": "2024-08-16T07:17:07.797039Z",
    "updated_at": "2024-08-16T07:17:07.797039Z",
    "lead_time": 1.783
  },
  {
    "text": "图示出了成组连续传送方式的DMA传送数据的流程图",
    "id": 4879,
    "label": [
      {
        "start": 13,
        "end": 18,
        "text": "DMA传送",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6304,
    "created_at": "2024-08-16T07:17:12.571041Z",
    "updated_at": "2024-08-16T07:17:12.571041Z",
    "lead_time": 4.277
  },
  {
    "text": "故障处理",
    "id": 4880,
    "annotator": 1,
    "annotation_id": 6305,
    "created_at": "2024-08-16T07:17:13.437841Z",
    "updated_at": "2024-08-16T07:17:13.437841Z",
    "lead_time": 0.473
  },
  {
    "text": "这一级由各种高级语言编译程序支持和执行",
    "id": 4881,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "高级语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "编译程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6306,
    "created_at": "2024-08-16T07:17:14.941482Z",
    "updated_at": "2024-08-16T07:17:14.941482Z",
    "lead_time": 1.09
  },
  {
    "text": "数组多路通道与设备之间数据传送的基本单位是数据块，通道必须为一个设备传送完一个数据块以后，才能为别的设备传送数据块",
    "id": 4882,
    "annotator": 1,
    "annotation_id": 6307,
    "created_at": "2024-08-16T07:17:32.279256Z",
    "updated_at": "2024-08-16T07:17:32.279256Z",
    "lead_time": 16.874
  },
  {
    "text": "另一些系统采用二级页表结构",
    "id": 4883,
    "label": [
      {
        "start": 9,
        "end": 11,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6308,
    "created_at": "2024-08-16T07:17:36.934537Z",
    "updated_at": "2024-08-16T07:17:36.934537Z",
    "lead_time": 4.172
  },
  {
    "text": "RW为读写控制位用于指明用户对该页的权限是只读还是可读写",
    "id": 4884,
    "label": [
      {
        "start": 21,
        "end": 23,
        "text": "只读",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 8,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 17,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6309,
    "created_at": "2024-08-16T07:17:45.744325Z",
    "updated_at": "2024-08-16T07:17:45.744325Z",
    "lead_time": 7.895
  },
  {
    "text": "尾数下溢在将尾数右移时，尾数的最低有效位从尾数域右端流出，要进行舍入处理",
    "id": 4885,
    "label": [
      {
        "start": 32,
        "end": 36,
        "text": "舍入处理",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "有效位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "右移",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6310,
    "created_at": "2024-08-16T07:18:09.816829Z",
    "updated_at": "2024-08-16T07:18:09.816829Z",
    "lead_time": 23.629
  },
  {
    "text": "对全相联和组相联cache来说，就要从允许存放新主存块的若干特定行中选取一行换出",
    "id": 4886,
    "label": [
      {
        "start": 8,
        "end": 13,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "全相联",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "组相联",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "主存块",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6311,
    "created_at": "2024-08-16T07:19:04.411149Z",
    "updated_at": "2024-08-16T07:19:04.411149Z",
    "lead_time": 53.973
  },
  {
    "text": "图c表示读操作：低功率的激光束反射掉相反极性的磁性粒子且使它的极性变化",
    "id": 4887,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "读操作",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6312,
    "created_at": "2024-08-16T07:19:06.649344Z",
    "updated_at": "2024-08-16T07:19:06.649344Z",
    "lead_time": 1.787
  },
  {
    "text": "广义地讲，IO接口是指CPU、主存和外围设备之间通过系统总线进行连接的标准化逻辑部件",
    "id": 4888,
    "label": [
      {
        "start": 26,
        "end": 30,
        "text": "系统总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "IO接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6313,
    "created_at": "2024-08-16T07:19:09.924898Z",
    "updated_at": "2024-08-16T07:19:09.924898Z",
    "lead_time": 2.871
  },
  {
    "text": "无论延迟写和预读，桥的作用可使所有的存取都按CPU的需要出现在总线上",
    "id": 4889,
    "label": [
      {
        "start": 22,
        "end": 25,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "桥",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6314,
    "created_at": "2024-08-16T07:19:11.935968Z",
    "updated_at": "2024-08-16T07:19:11.935968Z",
    "lead_time": 1.597
  },
  {
    "text": "当输入时，由设备如磁盘送往数据缓冲寄存器，再由缓冲寄存器通过数据总线送到内存",
    "id": 4890,
    "label": [
      {
        "start": 15,
        "end": 20,
        "text": "缓冲寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 28,
        "text": "缓冲寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6315,
    "created_at": "2024-08-16T07:19:14.111809Z",
    "updated_at": "2024-08-16T07:19:14.111809Z",
    "lead_time": 1.751
  },
  {
    "text": "图形是用计算机表示和生成的图，称为主观图像",
    "id": 4891,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6316,
    "created_at": "2024-08-16T07:19:30.127316Z",
    "updated_at": "2024-08-16T07:19:30.127316Z",
    "lead_time": 15.601
  },
  {
    "text": "图a给出了其外部引脚",
    "id": 4892,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "引脚",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6317,
    "created_at": "2024-08-16T07:19:31.681329Z",
    "updated_at": "2024-08-16T07:19:31.681329Z",
    "lead_time": 1.163
  },
  {
    "text": "设磁盘旋转速度为n转秒，每条磁道容量为N字节，则内部数据传输率为计算机组成原理DrnN字节秒或DrDv字节秒其中，D为位密度，v为磁盘旋转的线速度",
    "id": 4893,
    "label": [
      {
        "start": 24,
        "end": 31,
        "text": "内部数据传输率",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 32,
        "end": 39,
        "text": "计算机组成原理",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 51,
        "end": 53,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "磁道",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 65,
        "end": 67,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 59,
        "end": 62,
        "text": "位密度",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6318,
    "created_at": "2024-08-16T07:19:54.448148Z",
    "updated_at": "2024-08-16T07:19:54.448148Z",
    "lead_time": 22.37
  },
  {
    "text": "原则上，既可以通过Mx移位以改变Ex来达到ExEy，也可以通过My移位以改变Ey来实现ExEy",
    "id": 4894,
    "label": [
      {
        "start": 11,
        "end": 13,
        "text": "移位",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "移位",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6319,
    "created_at": "2024-08-16T07:19:57.041244Z",
    "updated_at": "2024-08-16T07:19:57.041244Z",
    "lead_time": 2.106
  },
  {
    "text": "因为任何操作可以由软件来实现，也可以由硬件来实现；任何指令的执行可以由硬件完成，也可以由软件来完成",
    "id": 4895,
    "label": [
      {
        "start": 27,
        "end": 29,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6320,
    "created_at": "2024-08-16T07:19:58.406225Z",
    "updated_at": "2024-08-16T07:19:58.406225Z",
    "lead_time": 0.949
  },
  {
    "text": "每当一条指令发射出去，它的副本就被送到FIFO队尾",
    "id": 4896,
    "label": [
      {
        "start": 19,
        "end": 23,
        "text": "FIFO",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6321,
    "created_at": "2024-08-16T07:19:59.564783Z",
    "updated_at": "2024-08-16T07:19:59.564783Z",
    "lead_time": 0.727
  },
  {
    "text": "中央仲裁器使nGNTA无效与nGNTB有效之间至少有个时钟周期的延迟，以保证信号线由A驱动变为B驱动时在临界情况下也不产生冲突，即上述的交换期",
    "id": 4897,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "中央仲裁器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6322,
    "created_at": "2024-08-16T07:20:07.287628Z",
    "updated_at": "2024-08-16T07:20:07.287628Z",
    "lead_time": 7.255
  },
  {
    "text": "由于乘法运算大约占全部算术运算的，因此采用高速乘法部件，无论从速度上来说还是从效率上来说，都是十分必要的",
    "id": 4898,
    "label": [
      {
        "start": 11,
        "end": 15,
        "text": "算术运算",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6323,
    "created_at": "2024-08-16T07:20:08.855133Z",
    "updated_at": "2024-08-16T07:20:08.855133Z",
    "lead_time": 1.138
  },
  {
    "text": "不同机器有不同的指令系统",
    "id": 4899,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6324,
    "created_at": "2024-08-16T07:20:09.802301Z",
    "updated_at": "2024-08-16T07:20:09.802301Z",
    "lead_time": 0.566
  },
  {
    "text": "每个数位占用半字节即个二进制位，其值可用二十编码BCD码或数字符的ASCII码的低位表示",
    "id": 4900,
    "label": [
      {
        "start": 33,
        "end": 39,
        "text": "ASCII码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "二进制位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "BCD码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 4,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 41,
        "end": 42,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6325,
    "created_at": "2024-08-16T07:20:18.381302Z",
    "updated_at": "2024-08-16T07:20:18.381302Z",
    "lead_time": 8.106
  },
  {
    "text": "数据传送是以数据块为单位进行的，在每个数据块传送之前的预置阶段，除了用程序中IO指令给出数据块的传送个数、起始地址、操作命令外，还要给出所选择的设备号",
    "id": 4901,
    "label": [
      {
        "start": 53,
        "end": 57,
        "text": "起始地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6326,
    "created_at": "2024-08-16T07:20:37.174123Z",
    "updated_at": "2024-08-16T07:20:37.174123Z",
    "lead_time": 18.353
  },
  {
    "text": "DMA的后处理进行的工作是，一旦DMA的中断请求得到响应，CPU停止主程序的执行，转去执行中断服务程序做一些DMA的结束处理工作",
    "id": 4902,
    "label": [
      {
        "start": 29,
        "end": 32,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 54,
        "end": 57,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 45,
        "end": 51,
        "text": "中断服务程序",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6327,
    "created_at": "2024-08-16T07:20:57.311439Z",
    "updated_at": "2024-08-16T07:20:57.311439Z",
    "lead_time": 19.733
  },
  {
    "text": "和可以用电压的高低、脉冲的有无来表示",
    "id": 4903,
    "annotator": 1,
    "annotation_id": 6328,
    "created_at": "2024-08-16T07:20:58.716666Z",
    "updated_at": "2024-08-16T07:20:58.716666Z",
    "lead_time": 0.941
  },
  {
    "text": "基址偏移量寻址：基址寄存器B是位通用寄存器中任何一个",
    "id": 4904,
    "label": [
      {
        "start": 8,
        "end": 13,
        "text": "基址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 21,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 16,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 7,
        "text": "基址偏移量寻址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6329,
    "created_at": "2024-08-16T07:21:09.957070Z",
    "updated_at": "2024-08-16T07:21:09.957070Z",
    "lead_time": 10.878
  },
  {
    "text": "页表中对应每一个虚存页面有一个表项，表项的内容包含该虚存页面所在的主存页面的地址物理页号，以及指示该逻辑页是否已调入主存的有效位",
    "id": 4905,
    "label": [
      {
        "start": 40,
        "end": 44,
        "text": "物理页号",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "主存页面",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 61,
        "end": 64,
        "text": "有效位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 58,
        "end": 60,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "页面",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "页面",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "虚存",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "虚存",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 50,
        "end": 53,
        "text": "逻辑页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6330,
    "created_at": "2024-08-16T07:21:29.344968Z",
    "updated_at": "2024-08-16T07:21:29.344968Z",
    "lead_time": 18.946
  },
  {
    "text": "因此差分信号抗干扰的能力更强，可以使用更高的总线频率",
    "id": 4906,
    "label": [
      {
        "start": 22,
        "end": 26,
        "text": "总线频率",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6331,
    "created_at": "2024-08-16T07:21:43.945638Z",
    "updated_at": "2024-08-16T07:21:43.945638Z",
    "lead_time": 14.154
  },
  {
    "text": "由表看出，在时钟时，第I条的MEM段与第I条的IF段都要访问存储器",
    "id": 4907,
    "label": [
      {
        "start": 30,
        "end": 33,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6332,
    "created_at": "2024-08-16T07:21:45.182046Z",
    "updated_at": "2024-08-16T07:21:45.182046Z",
    "lead_time": 0.849
  },
  {
    "text": "很显然，由于输入输出设备本身的速度差异很大，因此，对于不同速度的外围设备，需要有不同的定时方式",
    "id": 4908,
    "label": [
      {
        "start": 6,
        "end": 12,
        "text": "输入输出设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6333,
    "created_at": "2024-08-16T07:21:46.256140Z",
    "updated_at": "2024-08-16T07:21:46.256140Z",
    "lead_time": 0.634
  },
  {
    "text": "除了上述各部件外，计算机系统中还必须有总线",
    "id": 4909,
    "label": [
      {
        "start": 19,
        "end": 21,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 14,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6334,
    "created_at": "2024-08-16T07:21:47.296226Z",
    "updated_at": "2024-08-16T07:21:47.296226Z",
    "lead_time": 0.556
  },
  {
    "text": "对温盘驱动器，还要求在超净环境下组装",
    "id": 4910,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "驱动器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6335,
    "created_at": "2024-08-16T07:21:48.262873Z",
    "updated_at": "2024-08-16T07:21:48.263869Z",
    "lead_time": 0.56
  },
  {
    "text": "可移动磁头固定盘片的磁盘机特点是一片或一组盘片固定在主轴上，盘片不可更换",
    "id": 4911,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "盘片",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "可移动磁头",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "磁盘机",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "盘片",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "盘片",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6336,
    "created_at": "2024-08-16T07:21:49.814130Z",
    "updated_at": "2024-08-16T07:21:49.815136Z",
    "lead_time": 1.146
  },
  {
    "text": "在T时钟的上升沿开始下一次读操作",
    "id": 4912,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "读操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6337,
    "created_at": "2024-08-16T07:22:00.512061Z",
    "updated_at": "2024-08-16T07:22:00.512061Z",
    "lead_time": 2.657
  },
  {
    "text": "当任一端口被选中驱动时，就可对整个存储器进行存取，每一个端口都有自己的片选控制CE和输出驱动控制OE",
    "id": 4913,
    "label": [
      {
        "start": 17,
        "end": 20,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6338,
    "created_at": "2024-08-16T07:22:02.475952Z",
    "updated_at": "2024-08-16T07:22:02.475952Z",
    "lead_time": 1.568
  },
  {
    "text": "它也是由若干个过程段组成的流水线",
    "id": 4914,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6339,
    "created_at": "2024-08-16T07:22:06.187444Z",
    "updated_at": "2024-08-16T07:22:06.187444Z",
    "lead_time": 3.32
  },
  {
    "text": "这个基地址就是CPU中的段寄存器",
    "id": 4915,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6340,
    "created_at": "2024-08-16T07:22:07.914004Z",
    "updated_at": "2024-08-16T07:22:07.914004Z",
    "lead_time": 1.304
  },
  {
    "text": "移码表示法对两个指数大小的比较和对阶操作都比较方便，因为阶码域值大者其指数值也大",
    "id": 4916,
    "label": [
      {
        "start": 28,
        "end": 30,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "移码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "对阶",
        "labels": [
          "ALG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6341,
    "created_at": "2024-08-16T07:23:22.638135Z",
    "updated_at": "2024-08-16T07:23:22.638135Z",
    "lead_time": 69.387
  },
  {
    "text": "显示控制器是适配器的心脏",
    "id": 4917,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "显示控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "适配器",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6342,
    "created_at": "2024-08-16T07:24:07.819399Z",
    "updated_at": "2024-08-16T07:24:07.819399Z",
    "lead_time": 44.771
  },
  {
    "text": "缺点是随意换出的数据很可能马上又要使用，从而降低命中率和cache工作效率",
    "id": 4918,
    "label": [
      {
        "start": 28,
        "end": 33,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "命中率",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6343,
    "created_at": "2024-08-16T07:24:11.831570Z",
    "updated_at": "2024-08-16T07:24:11.831570Z",
    "lead_time": 3.627
  },
  {
    "text": "为了防止遗漏，设计时可按信号出现在指令流程图中的先后次序来书写，然后进行归纳和简化",
    "id": 4919,
    "label": [
      {
        "start": 17,
        "end": 20,
        "text": "指令流",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6344,
    "created_at": "2024-08-16T07:24:13.817923Z",
    "updated_at": "2024-08-16T07:24:13.817923Z",
    "lead_time": 1.551
  },
  {
    "text": "输入时，由IO指令将设备的数据传送到CPU某寄存器，再由访内指令把寄存器中的数据存入内存；输出时，其过程正好相反",
    "id": 4920,
    "label": [
      {
        "start": 22,
        "end": 25,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "IO指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6345,
    "created_at": "2024-08-16T07:24:21.896937Z",
    "updated_at": "2024-08-16T07:24:21.896937Z",
    "lead_time": 7.68
  },
  {
    "text": "那么大量的、代码在存储器中如何保存呢目前采用半导体器件来担当此任务",
    "id": 4921,
    "label": [
      {
        "start": 22,
        "end": 25,
        "text": "半导体",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6346,
    "created_at": "2024-08-16T07:24:24.534115Z",
    "updated_at": "2024-08-16T07:24:24.534115Z",
    "lead_time": 2.215
  },
  {
    "text": "典型的图形加速功能有：位和块传送，用于生成和移动一个矩形块如窗口数据；画线，由硬件在屏上任意两点间画一向量；填域，以预先指定的颜色或花样填满一个任意多边形；颜色扩充，将一个单色的图像放到屏上某一位置后，给它加上指定的前景颜色和背景颜色",
    "id": 4922,
    "label": [
      {
        "start": 39,
        "end": 41,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6347,
    "created_at": "2024-08-16T07:24:30.927273Z",
    "updated_at": "2024-08-16T07:24:30.927273Z",
    "lead_time": 6.014
  },
  {
    "text": "尾数上溢两个同符号尾数相加产生了最高位向上的进位，要将尾数右移，阶码增来重新对齐",
    "id": 4923,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "最高位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "右移",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6348,
    "created_at": "2024-08-16T07:24:32.275682Z",
    "updated_at": "2024-08-16T07:24:32.275682Z",
    "lead_time": 0.943
  },
  {
    "text": "地址变换时，根据逻辑页号同时查快表和慢表，当在快表中有此逻辑页号时，就能很快地找到对应的物理页号",
    "id": 4924,
    "label": [
      {
        "start": 15,
        "end": 17,
        "text": "快表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "慢表",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "地址变换",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "逻辑页号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "逻辑页号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 44,
        "end": 48,
        "text": "物理页号",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "快表",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6349,
    "created_at": "2024-08-16T07:24:34.637117Z",
    "updated_at": "2024-08-16T07:24:34.637117Z",
    "lead_time": 1.931
  },
  {
    "text": "扫描时激光器将对鼓表面有选择地曝光，曝光部分产生放电现象，未曝光部分仍保留充电时的电荷，从而形成静电潜像",
    "id": 4925,
    "annotator": 1,
    "annotation_id": 6350,
    "created_at": "2024-08-16T07:25:11.399960Z",
    "updated_at": "2024-08-16T07:25:11.399960Z",
    "lead_time": 36.327
  },
  {
    "text": "保护模式下使用中断描述符表保护模式为位寻址",
    "id": 4926,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 19,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6351,
    "created_at": "2024-08-16T07:25:47.832632Z",
    "updated_at": "2024-08-16T07:25:47.832632Z",
    "lead_time": 36.011
  },
  {
    "text": "在T时钟的上升沿图中处，激活命令ACT和行地址首先被锁存，表明开始一次存取操作",
    "id": 4927,
    "label": [
      {
        "start": 20,
        "end": 23,
        "text": "行地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 35,
        "end": 39,
        "text": "存取操作",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6352,
    "created_at": "2024-08-16T07:25:49.653077Z",
    "updated_at": "2024-08-16T07:25:49.653077Z",
    "lead_time": 1.415
  },
  {
    "text": "在单色字符方式下，每个字符窗口为点阵，字符为点阵",
    "id": 4928,
    "label": [
      {
        "start": 16,
        "end": 18,
        "text": "点阵",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "点阵",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 4,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6353,
    "created_at": "2024-08-16T07:25:54.824851Z",
    "updated_at": "2024-08-16T07:25:54.824851Z",
    "lead_time": 4.721
  },
  {
    "text": "一方面，中断可以实现CPU与外设的并行工作；另一方面，对于慢速IO设备，使用中断方式可以有效提高CPU的效率",
    "id": 4929,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 42,
        "text": "中断方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 31,
        "end": 35,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 48,
        "end": 51,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6354,
    "created_at": "2024-08-16T07:25:59.614984Z",
    "updated_at": "2024-08-16T07:25:59.614984Z",
    "lead_time": 4.399
  },
  {
    "text": "指令完成单元中的缓冲器通常称为重排序缓冲器，它也可以用来提供操作数，其工作方式类似于旁路逻辑在静态调度流水线中的工作方式",
    "id": 4930,
    "label": [
      {
        "start": 30,
        "end": 33,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 51,
        "end": 54,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6355,
    "created_at": "2024-08-16T07:26:01.477085Z",
    "updated_at": "2024-08-16T07:26:01.477085Z",
    "lead_time": 1.432
  },
  {
    "text": "写到存储元时，输出缓冲器和刷新缓冲器关闭，输入缓冲器打开，输入数据DIN送到存储元位线上；行选线为高，打开MOS管，于是电容上的电荷通过MOS管和位线放电，表示存储了",
    "id": 4931,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "存储元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "存储元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 42,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 73,
        "end": 74,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6356,
    "created_at": "2024-08-16T07:26:05.723264Z",
    "updated_at": "2024-08-16T07:26:05.723264Z",
    "lead_time": 3.827
  },
  {
    "text": "磁盘存储器的主要技术指标有存储密度、存储容量、平均存取时间、数据传输速率",
    "id": 4932,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "磁盘存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "存储密度",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 30,
        "end": 36,
        "text": "数据传输速率",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "存取时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6357,
    "created_at": "2024-08-16T07:27:21.030781Z",
    "updated_at": "2024-08-16T07:27:21.030781Z",
    "lead_time": 74.85
  },
  {
    "text": "左移时，若寄存器的数看作算术数，符号位不动，其他位左移，低位补零，右移时则高位补零，这种移位称算术移位",
    "id": 4933,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "移位",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 47,
        "end": 51,
        "text": "算术移位",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "右移",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "左移",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "左移",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 24,
        "end": 25,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 29,
        "end": 30,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 38,
        "end": 39,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6358,
    "created_at": "2024-08-16T07:27:23.940022Z",
    "updated_at": "2024-08-16T07:27:23.940022Z",
    "lead_time": 2.469
  },
  {
    "text": "因此，这种更新ROM存储内容的操作实际上不是“写入”，而是编程",
    "id": 4934,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6359,
    "created_at": "2024-08-16T07:27:26.143290Z",
    "updated_at": "2024-08-16T07:27:26.143290Z",
    "lead_time": 1.775
  },
  {
    "text": "显然，分布式仲裁是以优先级仲裁策略为基础的",
    "id": 4935,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "分布式仲裁",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 15,
        "text": "优先级仲裁",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6360,
    "created_at": "2024-08-16T07:27:27.190016Z",
    "updated_at": "2024-08-16T07:27:27.190016Z",
    "lead_time": 0.644
  },
  {
    "text": "盘片的上下两面都能记录信息，通常把磁盘片表面称为记录面",
    "id": 4936,
    "label": [
      {
        "start": 24,
        "end": 27,
        "text": "记录面",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "盘片",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "盘片",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6361,
    "created_at": "2024-08-16T07:27:28.002541Z",
    "updated_at": "2024-08-16T07:27:28.002541Z",
    "lead_time": 0.402
  },
  {
    "text": "地址映射方式有全相联方式、直接方式和组相联方式三种，下面分别介绍",
    "id": 4937,
    "label": [
      {
        "start": 7,
        "end": 12,
        "text": "全相联方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "地址映射",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "组相联",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6362,
    "created_at": "2024-08-16T07:27:28.864223Z",
    "updated_at": "2024-08-16T07:27:28.864223Z",
    "lead_time": 0.46
  },
  {
    "text": "不论是寄存器堆栈，还是存储器堆栈，数据的存取都与栈顶地址打交通，为此需要一个隐式或显式的堆栈指示器寄存器",
    "id": 4938,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 16,
        "text": "存储器堆栈",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 44,
        "end": 49,
        "text": "堆栈指示器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "栈顶地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 49,
        "end": 52,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "堆栈",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6363,
    "created_at": "2024-08-16T07:27:30.520096Z",
    "updated_at": "2024-08-16T07:27:30.520096Z",
    "lead_time": 1.241
  },
  {
    "text": "左、右输入源编址可指定种信息源之一",
    "id": 4939,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "编址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6364,
    "created_at": "2024-08-16T07:27:31.894600Z",
    "updated_at": "2024-08-16T07:27:31.894600Z",
    "lead_time": 0.968
  },
  {
    "text": "如忽略触发器的翻转延迟，那么下条微指令的微命令信号就从T上升沿起开始有效，直到下一条微指令读出后打入微指令寄存器为止",
    "id": 4940,
    "label": [
      {
        "start": 50,
        "end": 56,
        "text": "微指令寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 42,
        "end": 45,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6365,
    "created_at": "2024-08-16T07:27:32.649434Z",
    "updated_at": "2024-08-16T07:27:32.649434Z",
    "lead_time": 0.342
  },
  {
    "text": "当缓冲器中包含了所有的操作数，并且功能单元已经就绪，结果就被计算出来",
    "id": 4941,
    "label": [
      {
        "start": 17,
        "end": 21,
        "text": "功能单元",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6366,
    "created_at": "2024-08-16T07:27:33.364321Z",
    "updated_at": "2024-08-16T07:27:33.364321Z",
    "lead_time": 0.249
  },
  {
    "text": "磁表面存储器的读写原理在磁表面存储器中，利用一种称为“磁头”的装置来形成和判别磁层中的不同磁化状态",
    "id": 4942,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "磁表面存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 18,
        "text": "磁表面存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6367,
    "created_at": "2024-08-16T07:27:34.781314Z",
    "updated_at": "2024-08-16T07:27:34.781314Z",
    "lead_time": 1.021
  },
  {
    "text": "在实地址模式下，逻辑地址形式为段寻址方式：将段名所指定的段寄存器内容位左移位，低位补全，得到位段基地址，再加上段内偏移，即得位物理地址",
    "id": 4943,
    "label": [
      {
        "start": 29,
        "end": 32,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "地址模式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 55,
        "end": 59,
        "text": "段内偏移",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 63,
        "end": 67,
        "text": "物理地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "逻辑地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "移位",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 35,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 40,
        "end": 41,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 46,
        "end": 47,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 62,
        "end": 63,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6368,
    "created_at": "2024-08-16T07:27:41.371739Z",
    "updated_at": "2024-08-16T07:27:41.371739Z",
    "lead_time": 6.187
  },
  {
    "text": "而且，每进入一次中断处理程序，CPU都要保护被打断的程序的下一条指令地址断点和状态条件寄存器的当前值；在中断处理程序中，通常还要保护及恢复通用数据寄存器",
    "id": 4944,
    "label": [
      {
        "start": 43,
        "end": 46,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 71,
        "end": 76,
        "text": "数据寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "指令地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 8,
        "end": 14,
        "text": "中断处理程序",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 52,
        "end": 58,
        "text": "中断处理程序",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6369,
    "created_at": "2024-08-16T07:27:57.405144Z",
    "updated_at": "2024-08-16T07:27:57.405144Z",
    "lead_time": 15.598
  },
  {
    "text": "通常，在串行方式的微程序控制器中，微指令周期就是只读存储器的工作周期",
    "id": 4945,
    "label": [
      {
        "start": 9,
        "end": 15,
        "text": "微程序控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 22,
        "text": "微指令周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 24,
        "end": 29,
        "text": "只读存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6370,
    "created_at": "2024-08-16T07:27:59.291352Z",
    "updated_at": "2024-08-16T07:27:59.291352Z",
    "lead_time": 1.408
  },
  {
    "text": "若相符即命中，在cache中找到了所要求的块，而后用地址中最低的w位读取所需求的字",
    "id": 4946,
    "label": [
      {
        "start": 8,
        "end": 13,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 34,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 40,
        "end": 41,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6371,
    "created_at": "2024-08-16T07:28:02.421394Z",
    "updated_at": "2024-08-16T07:28:02.421394Z",
    "lead_time": 2.748
  },
  {
    "text": "在分段部件和分页部件中，每一部分都可以独立地打开或关闭，因而可出现四种组合方式：不分段不分页模式程序中使用的逻辑地址与物理地址相同",
    "id": 4947,
    "label": [
      {
        "start": 41,
        "end": 48,
        "text": "分段不分页模式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "分段部件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 59,
        "end": 63,
        "text": "物理地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "分页部件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 54,
        "end": 58,
        "text": "逻辑地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 48,
        "end": 50,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6372,
    "created_at": "2024-08-16T07:28:04.532674Z",
    "updated_at": "2024-08-16T07:28:04.532674Z",
    "lead_time": 1.684
  },
  {
    "text": "与传统只读存储器不同，闪存可以通过命令寄存器接收外部命令",
    "id": 4948,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "只读存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6373,
    "created_at": "2024-08-16T07:28:07.045989Z",
    "updated_at": "2024-08-16T07:28:07.045989Z",
    "lead_time": 2.065
  },
  {
    "text": "主存的写修改操作统一留到换出时再进行",
    "id": 4949,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6374,
    "created_at": "2024-08-16T07:28:08.258289Z",
    "updated_at": "2024-08-16T07:28:08.258289Z",
    "lead_time": 0.818
  },
  {
    "text": "因此，一位算术逻辑运算单元的逻辑表达式修改为FiXiYiCniCniXiYiYiCniCniXi式中进位下标用ni代替原来一位全加器中的i，i代表集成在一片电路上的ALU的二进制位数，对于位一片的ALU，i",
    "id": 4950,
    "label": [
      {
        "start": 5,
        "end": 13,
        "text": "算术逻辑运算单元",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 19,
        "text": "逻辑表达式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 86,
        "end": 90,
        "text": "二进制位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 82,
        "end": 85,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 98,
        "end": 101,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 63,
        "end": 66,
        "text": "全加器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 5,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 51,
        "end": 52,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 62,
        "end": 63,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 94,
        "end": 95,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6375,
    "created_at": "2024-08-16T07:28:12.546313Z",
    "updated_at": "2024-08-16T07:28:12.546313Z",
    "lead_time": 3.912
  },
  {
    "text": "此外，电源管理、服务质量QoS、热插拔支持、数据完整性、错误处理机制等也是PCIe总线所支持的高级特征",
    "id": 4951,
    "label": [
      {
        "start": 37,
        "end": 43,
        "text": "PCIe总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "处理机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6376,
    "created_at": "2024-08-16T07:28:14.292258Z",
    "updated_at": "2024-08-16T07:28:14.292258Z",
    "lead_time": 1.316
  },
  {
    "text": "通常有以下三种方法",
    "id": 4952,
    "annotator": 1,
    "annotation_id": 6377,
    "created_at": "2024-08-16T07:28:15.173696Z",
    "updated_at": "2024-08-16T07:28:15.173696Z",
    "lead_time": 0.474
  },
  {
    "text": "当载磁体相对于磁头运动时，就可以连续写入一连串的二进制信息",
    "id": 4953,
    "label": [
      {
        "start": 24,
        "end": 27,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6378,
    "created_at": "2024-08-16T07:28:16.671663Z",
    "updated_at": "2024-08-16T07:28:16.671663Z",
    "lead_time": 1.119
  },
  {
    "text": "现代计算机系统中，中断是频繁发生的，这些引起中断的事件被称为中断源",
    "id": 4954,
    "label": [
      {
        "start": 30,
        "end": 33,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 7,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6379,
    "created_at": "2024-08-16T07:28:17.542097Z",
    "updated_at": "2024-08-16T07:28:17.542097Z",
    "lead_time": 0.349
  },
  {
    "text": "图中，在CrD触发器下面加上一个SR触发器，且用T信号作Cr触发器的时钟控制端，那么就可以保证在T的前沿开启时序产生器，而在T的后沿关闭时序产生器",
    "id": 4955,
    "label": [
      {
        "start": 54,
        "end": 59,
        "text": "时序产生器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 68,
        "end": 73,
        "text": "时序产生器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6380,
    "created_at": "2024-08-16T07:28:19.677979Z",
    "updated_at": "2024-08-16T07:28:19.677979Z",
    "lead_time": 1.594
  },
  {
    "text": "在同步定时协议中，事件出现在总线上的时刻由总线时钟信号来确定，总线周期的长度是固定的",
    "id": 4956,
    "label": [
      {
        "start": 21,
        "end": 25,
        "text": "总线时钟",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 1,
        "end": 7,
        "text": "同步定时协议",
        "labels": [
          "PROT"
        ]
      },
      {
        "start": 31,
        "end": 35,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6381,
    "created_at": "2024-08-16T07:28:21.976144Z",
    "updated_at": "2024-08-16T07:28:21.976144Z",
    "lead_time": 1.881
  },
  {
    "text": "如果所要求的资源操作数寄存器、目标寄存器、功能部件发生资源使用冲突，或与先前指令发生数据相关冲突，或转移指令将转向新的目标指令地址，则FD段不再向EX段发射指令，或不发射紧接转移指令之后的指令",
    "id": 4957,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 50,
        "end": 54,
        "text": "转移指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 42,
        "end": 48,
        "text": "数据相关冲突",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 20,
        "text": "目标寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 87,
        "end": 91,
        "text": "转移指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "源操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 61,
        "end": 65,
        "text": "指令地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 78,
        "end": 80,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 94,
        "end": 96,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6382,
    "created_at": "2024-08-16T07:29:50.978545Z",
    "updated_at": "2024-08-16T07:29:50.978545Z",
    "lead_time": 88.269
  },
  {
    "text": "它通过IO接口接收来自CPU传送的各种信息，并根据设备的不同要求把这些信息传送到设备，或者从设备中读出信息传送到IO接口，然后送给CPU",
    "id": 4958,
    "label": [
      {
        "start": 35,
        "end": 39,
        "text": "信息传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 51,
        "end": 55,
        "text": "信息传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "IO接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 56,
        "end": 60,
        "text": "IO接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "从设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 65,
        "end": 68,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6383,
    "created_at": "2024-08-16T07:29:55.319689Z",
    "updated_at": "2024-08-16T07:29:55.319689Z",
    "lead_time": 2.632
  },
  {
    "text": "首先，将横格纸编上序号，每一行占一个序号，如n，如表所示",
    "id": 4959,
    "annotator": 1,
    "annotation_id": 6384,
    "created_at": "2024-08-16T07:30:57.179150Z",
    "updated_at": "2024-08-16T07:30:57.179150Z",
    "lead_time": 61.396
  },
  {
    "text": "本章小结对存储器的要求是容量大、速度快、成本低",
    "id": 4960,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6385,
    "created_at": "2024-08-16T07:30:58.564915Z",
    "updated_at": "2024-08-16T07:30:58.564915Z",
    "lead_time": 0.99
  },
  {
    "text": "可移动磁头可换盘片的磁盘机盘片可以更换，磁头可沿盘面径向移动",
    "id": 4961,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "磁盘机",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "可移动磁头",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "盘片",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "盘片",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "盘面",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6386,
    "created_at": "2024-08-16T07:31:00.042522Z",
    "updated_at": "2024-08-16T07:31:00.042522Z",
    "lead_time": 1.028
  },
  {
    "text": "但这以增加总线的复杂性和成本为代价",
    "id": 4962,
    "label": [
      {
        "start": 5,
        "end": 7,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6387,
    "created_at": "2024-08-16T07:31:01.105927Z",
    "updated_at": "2024-08-16T07:31:01.105927Z",
    "lead_time": 0.632
  },
  {
    "text": "不过这一次的判别标志不是P而是P，P用来测试进位标志Cy",
    "id": 4963,
    "label": [
      {
        "start": 22,
        "end": 26,
        "text": "进位标志",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6388,
    "created_at": "2024-08-16T07:31:02.103925Z",
    "updated_at": "2024-08-16T07:31:02.103925Z",
    "lead_time": 0.595
  },
  {
    "text": "第条指令“SKPDZ”的含义是，检查号设备的Ready标志是否为“”如果是，接着执行第条指令，即执行号设备的设备服务子程序PTRSV；如果Ready标志为“”，则跳过第条指令，转去执行第条指令",
    "id": 4964,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 85,
        "end": 87,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 94,
        "end": 96,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 59,
        "end": 61,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6389,
    "created_at": "2024-08-16T07:31:04.818362Z",
    "updated_at": "2024-08-16T07:31:04.818362Z",
    "lead_time": 2.324
  },
  {
    "text": "当用计算机解决某个问题时，我们首先必须为它编写程序",
    "id": 4965,
    "label": [
      {
        "start": 23,
        "end": 25,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6390,
    "created_at": "2024-08-16T07:31:05.985241Z",
    "updated_at": "2024-08-16T07:31:05.985241Z",
    "lead_time": 0.729
  },
  {
    "text": "因此，链式查询是通过接口的优先级排队电路来实现的",
    "id": 4966,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "优先级",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6391,
    "created_at": "2024-08-16T07:31:07.036245Z",
    "updated_at": "2024-08-16T07:31:07.036245Z",
    "lead_time": 0.586
  },
  {
    "text": "这种方式和前述例子的第三种方法相仿，主要的优点是数据传送速度很高，传送速率仅受到内存访问时间的限制",
    "id": 4967,
    "label": [
      {
        "start": 40,
        "end": 42,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6392,
    "created_at": "2024-08-16T07:31:08.223180Z",
    "updated_at": "2024-08-16T07:31:08.223180Z",
    "lead_time": 0.698
  },
  {
    "text": "图示出了微程序控制器中使用的时序信号产生器的结构图，它由时钟源、环形脉冲发生器、节拍脉冲和读写时序译码、启停控制逻辑等部分组成",
    "id": 4968,
    "label": [
      {
        "start": 14,
        "end": 21,
        "text": "时序信号产生器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 10,
        "text": "微程序控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 44,
        "text": "节拍脉冲",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "译码",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6393,
    "created_at": "2024-08-16T07:31:09.152479Z",
    "updated_at": "2024-08-16T07:31:09.152479Z",
    "lead_time": 0.49
  },
  {
    "text": "Cy为最高进位触发器，有进位时该触发器状态为“”",
    "id": 4969,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 7,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 14,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6394,
    "created_at": "2024-08-16T07:31:10.175025Z",
    "updated_at": "2024-08-16T07:31:10.175025Z",
    "lead_time": 0.56
  },
  {
    "text": "图示出浮点加减运算的操作流程",
    "id": 4970,
    "annotator": 1,
    "annotation_id": 6395,
    "created_at": "2024-08-16T07:31:11.167964Z",
    "updated_at": "2024-08-16T07:31:11.167964Z",
    "lead_time": 0.46
  },
  {
    "text": "程序的局部性可以从两个角度分析",
    "id": 4971,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6396,
    "created_at": "2024-08-16T07:31:16.319977Z",
    "updated_at": "2024-08-16T07:31:16.319977Z",
    "lead_time": 0.871
  },
  {
    "text": "当外设准备好发送数据输入或接受数据输出时，它发出DMA请求，由DMA控制器向CPU发出总线使用权的请求HOLD",
    "id": 4972,
    "label": [
      {
        "start": 31,
        "end": 37,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 48,
        "text": "总线使用权",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "外设",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6397,
    "created_at": "2024-08-16T07:31:19.122284Z",
    "updated_at": "2024-08-16T07:31:19.122284Z",
    "lead_time": 2.399
  },
  {
    "text": "与CDR所使的基于染料的记录表层不同，CDRW光盘采用一种特殊的水晶复合物作为记录介质",
    "id": 4973,
    "label": [
      {
        "start": 19,
        "end": 25,
        "text": "CDRW光盘",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6398,
    "created_at": "2024-08-16T07:32:33.355133Z",
    "updated_at": "2024-08-16T07:32:33.355133Z",
    "lead_time": 73.757
  },
  {
    "text": "此时cache控制逻辑依据地址判断此字当前是否在cache中：若是，则cache命中，此字立即传送给CPU；若非，则cache缺失未命中，用主存读周期把此字从主存读出送到CPU，与此同时，把含有这个字的整个数据块从主存读出送到cache中",
    "id": 4974,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 24,
        "end": 29,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 35,
        "end": 40,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 58,
        "end": 63,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 113,
        "end": 118,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 72,
        "end": 75,
        "text": "读周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 50,
        "end": 53,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 85,
        "end": 88,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 70,
        "end": 72,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 79,
        "end": 81,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 107,
        "end": 109,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 19,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 44,
        "end": 45,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 77,
        "end": 78,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 99,
        "end": 100,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6399,
    "created_at": "2024-08-16T07:32:42.620939Z",
    "updated_at": "2024-08-16T07:32:42.620939Z",
    "lead_time": 8.869
  },
  {
    "text": "R型指令格式就是上面所示的算术指令格式",
    "id": 4975,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 19,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6400,
    "created_at": "2024-08-16T07:32:44.326440Z",
    "updated_at": "2024-08-16T07:32:44.326440Z",
    "lead_time": 1.181
  },
  {
    "text": "控制状态逻辑由控制和时序电路以及状态标志等组成，用于修改内存地址计数器和字计数器，指定传送类型输入或输出，并对“DMA请求”信号和CPU响应信号进行协调和同步",
    "id": 4976,
    "label": [
      {
        "start": 28,
        "end": 32,
        "text": "内存地址",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 56,
        "end": 59,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 65,
        "end": 68,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 77,
        "end": 79,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 36,
        "end": 37,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6401,
    "created_at": "2024-08-16T07:32:48.270083Z",
    "updated_at": "2024-08-16T07:32:48.270083Z",
    "lead_time": 3.531
  },
  {
    "text": "由于数组多路通道既保留了选择通道高速传送数据的优点，又充分利用了控制性操作的时间间隔为其他设备服务，使通道效率得到充分发挥，因此数组多路通道在大型系统中得到较多应用",
    "id": 4977,
    "annotator": 1,
    "annotation_id": 6402,
    "created_at": "2024-08-16T07:32:52.779877Z",
    "updated_at": "2024-08-16T07:32:52.779877Z",
    "lead_time": 4.082
  },
  {
    "text": "研究表明，随机替换策略的性能只是稍逊于前两种策略",
    "id": 4978,
    "label": [
      {
        "start": 5,
        "end": 11,
        "text": "随机替换策略",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6403,
    "created_at": "2024-08-16T07:32:53.632127Z",
    "updated_at": "2024-08-16T07:32:53.632127Z",
    "lead_time": 0.482
  },
  {
    "text": "体积小易安装，连接方便",
    "id": 4979,
    "annotator": 1,
    "annotation_id": 6404,
    "created_at": "2024-08-16T07:32:54.442564Z",
    "updated_at": "2024-08-16T07:32:54.442564Z",
    "lead_time": 0.404
  },
  {
    "text": "现在让我们来讨论带符号的阵列乘法器",
    "id": 4980,
    "label": [
      {
        "start": 12,
        "end": 17,
        "text": "阵列乘法器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6405,
    "created_at": "2024-08-16T07:32:55.237661Z",
    "updated_at": "2024-08-16T07:32:55.237661Z",
    "lead_time": 0.403
  },
  {
    "text": "主板上一般留有个ISA总线扩充槽，以便使用各种位位适配器卡",
    "id": 4981,
    "label": [
      {
        "start": 8,
        "end": 13,
        "text": "ISA总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "适配器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 24,
        "end": 25,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6406,
    "created_at": "2024-08-16T07:32:56.129961Z",
    "updated_at": "2024-08-16T07:32:56.129961Z",
    "lead_time": 0.486
  },
  {
    "text": "完成上述中断现场保护后，从中断向量号获取的中断服务子程序入口地址段，偏移分别装入CS和EIP，开始执行中断服务子程序",
    "id": 4982,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 51,
        "end": 53,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 56,
        "end": 58,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6407,
    "created_at": "2024-08-16T07:32:58.245006Z",
    "updated_at": "2024-08-16T07:32:58.245006Z",
    "lead_time": 1.579
  },
  {
    "text": "利用这两个稳定的剩磁状态，可以表示二进制代码和",
    "id": 4983,
    "label": [
      {
        "start": 17,
        "end": 20,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6408,
    "created_at": "2024-08-16T07:33:00.617912Z",
    "updated_at": "2024-08-16T07:33:00.617912Z",
    "lead_time": 1.935
  },
  {
    "text": "外设接收数据以后，将向CPU发出“数据已经取走”的通知",
    "id": 4984,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "外设",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6409,
    "created_at": "2024-08-16T07:33:01.607254Z",
    "updated_at": "2024-08-16T07:33:01.607254Z",
    "lead_time": 0.606
  },
  {
    "text": "未命中时的损失不同由于主存的存取时间是cache的存取时间的倍，而主存的存取速度通常比辅存的存取速度快上千倍，故主存未命中时系统的性能损失要远大于cache未命中时的损失",
    "id": 4985,
    "label": [
      {
        "start": 19,
        "end": 24,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 73,
        "end": 78,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 36,
        "end": 40,
        "text": "存取速度",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 46,
        "end": 50,
        "text": "存取速度",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "存取时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "存取时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 56,
        "end": 58,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6410,
    "created_at": "2024-08-16T07:33:02.643901Z",
    "updated_at": "2024-08-16T07:33:12.250024Z",
    "lead_time": 8.055
  },
  {
    "text": "由于在超时的瞬间DQ仍可能翻转，故可以在超时后最后读取一次状态字，判断编程或者擦除操作是否失败",
    "id": 4986,
    "label": [
      {
        "start": 31,
        "end": 32,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6411,
    "created_at": "2024-08-16T07:33:14.816204Z",
    "updated_at": "2024-08-16T07:33:14.816204Z",
    "lead_time": 0.85
  },
  {
    "text": "如果二级cache包含所请求的数据，缺失损失就是二级cache的访问时间，这要比主存的访问时间少得多",
    "id": 4987,
    "label": [
      {
        "start": 4,
        "end": 9,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 26,
        "end": 31,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6412,
    "created_at": "2024-08-16T07:33:16.683583Z",
    "updated_at": "2024-08-16T07:33:16.683583Z",
    "lead_time": 1.332
  },
  {
    "text": "以上是一个DMA请求的过程，在一批数据传送过程中，要多次重复上述过程，直到外围设备表示一个数据块已传送完毕，或该设备的长度控制器判定传送长度已满",
    "id": 4988,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 41,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 61,
        "end": 64,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6413,
    "created_at": "2024-08-16T07:33:19.263663Z",
    "updated_at": "2024-08-16T07:33:19.264664Z",
    "lead_time": 2.048
  },
  {
    "text": "计算机的软件是计算机系统结构的重要组成部分，也是计算机不同于一般电子设备的本质所在",
    "id": 4989,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 12,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6414,
    "created_at": "2024-08-16T07:33:23.071178Z",
    "updated_at": "2024-08-16T07:33:23.071178Z",
    "lead_time": 3.311
  },
  {
    "text": "多路转移方式的特点是，能以较短的顺序控制字段配合，实现多路并行转移，灵活性好，速度较快，但转移地址逻辑需要用组合逻辑方法设计",
    "id": 4990,
    "label": [
      {
        "start": 27,
        "end": 33,
        "text": "多路并行转移",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 45,
        "end": 49,
        "text": "转移地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6415,
    "created_at": "2024-08-16T07:33:37.108241Z",
    "updated_at": "2024-08-16T07:33:37.108241Z",
    "lead_time": 13.568
  },
  {
    "text": "响应时间表征从输入有效到系统产生响应之间的时间度量，用时间单位来度量",
    "id": 4991,
    "annotator": 1,
    "annotation_id": 6416,
    "created_at": "2024-08-16T07:35:08.175143Z",
    "updated_at": "2024-08-16T07:35:08.175143Z",
    "lead_time": 90.642
  },
  {
    "text": "执行部件可以具有多个算术逻辑运算部件，这些部件本身又用流水线方式构成",
    "id": 4992,
    "label": [
      {
        "start": 12,
        "end": 16,
        "text": "逻辑运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6417,
    "created_at": "2024-08-16T07:35:10.179758Z",
    "updated_at": "2024-08-16T07:35:10.179758Z",
    "lead_time": 1.655
  },
  {
    "text": "因此，从逻辑结构上讲，IO系统一般具有四级连接：CPU与存储器通道IO模块外围设备",
    "id": 4993,
    "label": [
      {
        "start": 28,
        "end": 31,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 37,
        "end": 41,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "IO模块",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6418,
    "created_at": "2024-08-16T07:35:13.106336Z",
    "updated_at": "2024-08-16T07:35:13.106336Z",
    "lead_time": 2.519
  },
  {
    "text": "在DMA传送前，须通过程序将数据在内存中的起始位置首地址送到内存地址计数器",
    "id": 4994,
    "label": [
      {
        "start": 1,
        "end": 6,
        "text": "DMA传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "内存地址",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "首地址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6419,
    "created_at": "2024-08-16T07:35:16.040300Z",
    "updated_at": "2024-08-16T07:35:16.040300Z",
    "lead_time": 2.489
  },
  {
    "text": "由计算机执行程序的时间P的计算公式可以看出两种类型的机器的性能差异：PICT下面以PowerPC机为例来说明，该机是一个位字长的计算机，共有条指令",
    "id": 4995,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 64,
        "end": 67,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 71,
        "end": 73,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 61,
        "end": 63,
        "text": "字长",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 60,
        "end": 61,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6420,
    "created_at": "2024-08-16T07:35:31.630359Z",
    "updated_at": "2024-08-16T07:35:31.630359Z",
    "lead_time": 11.664
  },
  {
    "text": "该模式除兼容VGA的显示方式外，还支持像素光栅，每像素点位颜色深度，刷新频率可达MHz",
    "id": 4996,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "VGA",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "MHz",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 28,
        "end": 29,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6421,
    "created_at": "2024-08-16T07:37:29.543156Z",
    "updated_at": "2024-08-16T07:37:29.543156Z",
    "lead_time": 117.453
  },
  {
    "text": "由于计算机内部的主要工作过程是信息传送和加工的过程，因此在机器内部各部件之间的数据传送非常频繁",
    "id": 4997,
    "label": [
      {
        "start": 15,
        "end": 19,
        "text": "信息传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6422,
    "created_at": "2024-08-16T07:37:34.338206Z",
    "updated_at": "2024-08-16T07:37:34.338206Z",
    "lead_time": 4.34
  },
  {
    "text": "全相联映射方式cache的数据块大小称为行，用Li表示，其中im，共有mr行",
    "id": 4998,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "全相联映射",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 12,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6423,
    "created_at": "2024-08-16T07:37:54.227154Z",
    "updated_at": "2024-08-16T07:37:54.227154Z",
    "lead_time": 19.407
  },
  {
    "text": "变址寻址地址域引用一个主存地址，被引用的专用寄存器含有对那个地址的正偏移量",
    "id": 4999,
    "label": [
      {
        "start": 20,
        "end": 25,
        "text": "专用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "主存地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "变址寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "偏移量",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6424,
    "created_at": "2024-08-16T07:37:56.765327Z",
    "updated_at": "2024-08-16T07:37:56.765327Z",
    "lead_time": 2.103
  },
  {
    "text": "写入时可通过磁头把信息代码记录在磁带上",
    "id": 5000,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6425,
    "created_at": "2024-08-16T07:37:58.984311Z",
    "updated_at": "2024-08-16T07:37:58.984311Z",
    "lead_time": 1.778
  },
  {
    "text": "可以看出，它是一个三层次的多总线结构，即有CPU总线、PCI总线和ISA总线",
    "id": 5001,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "多总线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 38,
        "text": "ISA总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 32,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 26,
        "text": "CPU总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6426,
    "created_at": "2024-08-16T07:38:43.935075Z",
    "updated_at": "2024-08-16T07:38:43.935075Z",
    "lead_time": 44.52
  },
  {
    "text": "专用和通用是根据计算机的效率、速度、价格、运行的经济性和适应性来划分的",
    "id": 5002,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6427,
    "created_at": "2024-08-16T07:38:53.924785Z",
    "updated_at": "2024-08-16T07:38:53.924785Z",
    "lead_time": 9.555
  },
  {
    "text": "注意，汉字的输入编码、汉字内码、字模码是计算机中用于输入、内部处理、输出三种不同用途的编码，不要混为一谈",
    "id": 5003,
    "label": [
      {
        "start": 11,
        "end": 15,
        "text": "汉字内码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "字模码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "汉字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6428,
    "created_at": "2024-08-16T07:38:56.568392Z",
    "updated_at": "2024-08-16T07:38:56.568392Z",
    "lead_time": 2.232
  },
  {
    "text": "此时EAR",
    "id": 5004,
    "annotator": 1,
    "annotation_id": 6429,
    "created_at": "2024-08-16T07:38:57.529945Z",
    "updated_at": "2024-08-16T07:38:57.529945Z",
    "lead_time": 0.504
  },
  {
    "text": "早期微型机中浮点运算器放在CPU芯片外，随着高密度集成电路技术的发展，现已移至CPU内部",
    "id": 5005,
    "label": [
      {
        "start": 6,
        "end": 11,
        "text": "浮点运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "集成电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "微型机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6430,
    "created_at": "2024-08-16T07:38:58.707791Z",
    "updated_at": "2024-08-16T07:38:58.709300Z",
    "lead_time": 0.779
  },
  {
    "text": "但是数据位位时，校验码要求为位，字长变成位，位成本只增加约",
    "id": 5006,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "数据位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "字长",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 5,
        "end": 6,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 15,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 21,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 23,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6431,
    "created_at": "2024-08-16T07:39:01.507996Z",
    "updated_at": "2024-08-16T07:39:01.507996Z",
    "lead_time": 2.349
  },
  {
    "text": "从IO接口读入状态字",
    "id": 5007,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "IO接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6432,
    "created_at": "2024-08-16T07:39:02.932179Z",
    "updated_at": "2024-08-16T07:39:02.932179Z",
    "lead_time": 0.937
  },
  {
    "text": "这三个要素是：一个有限的简单的指令系统；CPU配备大量的通用寄存器；强调对指令流水线的优化",
    "id": 5008,
    "label": [
      {
        "start": 30,
        "end": 33,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 42,
        "text": "指令流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 19,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6433,
    "created_at": "2024-08-16T07:39:04.067041Z",
    "updated_at": "2024-08-16T07:39:04.067041Z",
    "lead_time": 0.716
  },
  {
    "text": "上面说过，现代电子计算机是由运算器、存储器、控制器、适配器、总线和输入输出设备组成的",
    "id": 5009,
    "label": [
      {
        "start": 33,
        "end": 39,
        "text": "输入输出设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 7,
        "end": 12,
        "text": "电子计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "适配器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6434,
    "created_at": "2024-08-16T07:39:04.842375Z",
    "updated_at": "2024-08-16T07:39:04.842375Z",
    "lead_time": 0.348
  },
  {
    "text": "当主存不命中时，由存储管理部件向CPU发出“缺页中断”，进行调页操作",
    "id": 5010,
    "label": [
      {
        "start": 9,
        "end": 15,
        "text": "存储管理部件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "缺页",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 31,
        "end": 32,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6435,
    "created_at": "2024-08-16T07:39:05.527606Z",
    "updated_at": "2024-08-16T07:39:05.527606Z",
    "lead_time": 0.235
  },
  {
    "text": "此时，设备A应在数据传送完成后立即释放nFRAME和nIRDY信号线，由设备B掌管后开始一个新的总线周期",
    "id": 5011,
    "label": [
      {
        "start": 48,
        "end": 52,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6436,
    "created_at": "2024-08-16T07:39:06.163842Z",
    "updated_at": "2024-08-16T07:39:13.346753Z",
    "lead_time": 5.398
  },
  {
    "text": "计算机的外存储器又称磁表面存储设备",
    "id": 5012,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7025,
    "created_at": "2024-08-16T09:51:40.083345Z",
    "updated_at": "2024-08-16T09:51:40.083345Z",
    "lead_time": 2.106
  },
  {
    "text": "这样，多个部件都可以与主存交换信息，使主存的访问次数明显增多",
    "id": 5013,
    "label": [
      {
        "start": 11,
        "end": 13,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6437,
    "created_at": "2024-08-16T07:39:16.444874Z",
    "updated_at": "2024-08-16T07:39:16.444874Z",
    "lead_time": 0.881
  },
  {
    "text": "DRAM读写时序图a为DRAM的读周期波形",
    "id": 5014,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "读周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6438,
    "created_at": "2024-08-16T07:39:17.376251Z",
    "updated_at": "2024-08-16T07:39:17.376251Z",
    "lead_time": 0.534
  },
  {
    "text": "低级语言分为机器语言二进制语言和汇编语言符号语言，这两种语言都是面向机器的语言，它们和具体机器的指令系统密切相关",
    "id": 5015,
    "label": [
      {
        "start": 16,
        "end": 20,
        "text": "汇编语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "机器语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 48,
        "end": 52,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6439,
    "created_at": "2024-08-16T07:39:18.550958Z",
    "updated_at": "2024-08-16T07:39:18.550958Z",
    "lead_time": 0.72
  },
  {
    "text": "处理机流水线应用在多机系统中",
    "id": 5016,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "处理机流水线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6440,
    "created_at": "2024-08-16T07:39:19.508097Z",
    "updated_at": "2024-08-16T07:39:19.508097Z",
    "lead_time": 0.52
  },
  {
    "text": "显然，在查询链中离总线仲裁器最近的设备具有最高优先级，离总线仲裁器越远，优先级越低",
    "id": 5017,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "总线仲裁",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "总线仲裁",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "优先级",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "优先级",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6441,
    "created_at": "2024-08-16T07:39:50.539291Z",
    "updated_at": "2024-08-16T07:39:50.539801Z",
    "lead_time": 30.582
  },
  {
    "text": "磁带速度比磁盘速度慢，原因是磁带上的数据采用顺序访问方式，而磁盘则采用随机访问方式",
    "id": 5018,
    "label": [
      {
        "start": 35,
        "end": 39,
        "text": "随机访问",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6442,
    "created_at": "2024-08-16T07:40:02.747652Z",
    "updated_at": "2024-08-16T07:40:02.747652Z",
    "lead_time": 11.759
  },
  {
    "text": "而异步DRAM并没有时钟信号，对应的动作为RAS有效低",
    "id": 5019,
    "label": [
      {
        "start": 1,
        "end": 7,
        "text": "异步DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "时钟信号",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6443,
    "created_at": "2024-08-16T07:40:14.696006Z",
    "updated_at": "2024-08-16T07:40:14.696006Z",
    "lead_time": 11.448
  },
  {
    "text": "与此相关，也有相对应的硬设备，如图所示",
    "id": 5020,
    "annotator": 1,
    "annotation_id": 6444,
    "created_at": "2024-08-16T07:41:00.863467Z",
    "updated_at": "2024-08-16T07:41:00.863467Z",
    "lead_time": 45.705
  },
  {
    "text": "若不对浮点数的表示作出明确规定，同一个浮点数的表示就不是唯一的",
    "id": 5021,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6445,
    "created_at": "2024-08-16T07:41:02.657129Z",
    "updated_at": "2024-08-16T07:41:02.657129Z",
    "lead_time": 1.422
  },
  {
    "text": "选择型DMA控制器图是选择型DMA控制器的逻辑框图，它在物理上可以连接多个设备，而在逻辑上只允许连接一个设备",
    "id": 5022,
    "label": [
      {
        "start": 3,
        "end": 9,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 20,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6446,
    "created_at": "2024-08-16T07:41:05.677971Z",
    "updated_at": "2024-08-16T07:41:05.677971Z",
    "lead_time": 2.611
  },
  {
    "text": "这导致了新的机器比它之前的机器更小、更快、存储容量更大，价格更便宜",
    "id": 5023,
    "label": [
      {
        "start": 21,
        "end": 25,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6447,
    "created_at": "2024-08-16T07:41:07.020225Z",
    "updated_at": "2024-08-16T07:41:07.020225Z",
    "lead_time": 0.919
  },
  {
    "text": "而计算机又觉得用户及外部设备“太笨”，常常使它处于无事可做的状态，因此，迫切需要摆脱这种情况",
    "id": 5024,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "外部设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6448,
    "created_at": "2024-08-16T07:41:08.637833Z",
    "updated_at": "2024-08-16T07:41:08.637833Z",
    "lead_time": 1.221
  },
  {
    "text": "另外，转印后的鼓面还留有残余的碳粉",
    "id": 5025,
    "annotator": 1,
    "annotation_id": 6449,
    "created_at": "2024-08-16T07:41:09.585496Z",
    "updated_at": "2024-08-16T07:41:09.585496Z",
    "lead_time": 0.552
  },
  {
    "text": "例如，在前述求解yaxbc的例子中，我们在横格纸上列出了它的解题步骤",
    "id": 5026,
    "annotator": 1,
    "annotation_id": 6450,
    "created_at": "2024-08-16T07:41:10.500179Z",
    "updated_at": "2024-08-16T07:41:10.500179Z",
    "lead_time": 0.529
  },
  {
    "text": "而传统的存储器在任一时刻只能进行一个读或写操作，不能被多个部件同时访问",
    "id": 5027,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6451,
    "created_at": "2024-08-16T07:41:11.552070Z",
    "updated_at": "2024-08-16T07:41:11.552070Z",
    "lead_time": 0.608
  },
  {
    "text": "CPU能直接访问内存cache、主存，但不能直接访问外存",
    "id": 5028,
    "label": [
      {
        "start": 16,
        "end": 18,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 15,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "外存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6452,
    "created_at": "2024-08-16T07:41:13.408058Z",
    "updated_at": "2024-08-16T07:41:13.408058Z",
    "lead_time": 1.359
  },
  {
    "text": "它是一个特殊的写操作，不需要目标方以nDEVSEL信号响应",
    "id": 5029,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6453,
    "created_at": "2024-08-16T07:41:14.773204Z",
    "updated_at": "2024-08-16T07:41:14.773204Z",
    "lead_time": 0.841
  },
  {
    "text": "图b表示采用交叉方式寻址的存储器模块化组织示意图",
    "id": 5030,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6454,
    "created_at": "2024-08-16T07:41:15.789089Z",
    "updated_at": "2024-08-16T07:41:15.789089Z",
    "lead_time": 0.449
  },
  {
    "text": "在计算机系统中，CPU管理外围设备也有几种类似的方式",
    "id": 5031,
    "label": [
      {
        "start": 1,
        "end": 6,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6455,
    "created_at": "2024-08-16T07:41:16.610244Z",
    "updated_at": "2024-08-16T07:41:16.610244Z",
    "lead_time": 0.33
  },
  {
    "text": "我们可以从Intel微处理器的演变中清楚地看到cache组织的演变",
    "id": 5032,
    "label": [
      {
        "start": 5,
        "end": 10,
        "text": "Intel",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 23,
        "end": 28,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "微处理器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6456,
    "created_at": "2024-08-16T07:41:17.465301Z",
    "updated_at": "2024-08-16T07:41:17.465301Z",
    "lead_time": 0.339
  },
  {
    "text": "但是位数越多，所需的电子器件也越多，因此计算机的运算器长度一般是位、位、位、位",
    "id": 5033,
    "label": [
      {
        "start": 24,
        "end": 27,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "电子器件",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 3,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 32,
        "end": 33,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 34,
        "end": 35,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 37,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 38,
        "end": 39,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6457,
    "created_at": "2024-08-16T07:41:18.520658Z",
    "updated_at": "2024-08-16T07:41:18.520658Z",
    "lead_time": 0.413
  },
  {
    "text": "之所以发生错误，是因为运算结果产生了溢出",
    "id": 5034,
    "label": [
      {
        "start": 18,
        "end": 20,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6458,
    "created_at": "2024-08-16T07:41:19.519304Z",
    "updated_at": "2024-08-16T07:41:19.519304Z",
    "lead_time": 0.338
  },
  {
    "text": "在MIPS中，所有的算术运算，数据必须放在通用寄存器中",
    "id": 5035,
    "label": [
      {
        "start": 21,
        "end": 26,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "MIPS",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "算术运算",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6459,
    "created_at": "2024-08-16T07:41:20.522060Z",
    "updated_at": "2024-08-16T07:41:20.522060Z",
    "lead_time": 0.541
  },
  {
    "text": "在这些动作完成以后，开放中断“中断屏蔽”触发器清“”，并返回到原来被中断的主程序的下一条指令",
    "id": 5036,
    "label": [
      {
        "start": 20,
        "end": 23,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "屏蔽",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6460,
    "created_at": "2024-08-16T07:41:24.467794Z",
    "updated_at": "2024-08-16T07:41:24.467794Z",
    "lead_time": 3.443
  },
  {
    "text": "只有这样，才能使发送出去的脉冲都是完整的脉冲",
    "id": 5037,
    "annotator": 1,
    "annotation_id": 6461,
    "created_at": "2024-08-16T07:41:25.521019Z",
    "updated_at": "2024-08-16T07:41:25.521019Z",
    "lead_time": 0.556
  },
  {
    "text": "在进行汇编语言程序设计时，可直接使用英文单词或其缩写表示指令，使用标识符表示数据或地址，从而有效地避免了记忆二进制的指令代码，不再由程序设计人员为指令和数据分配内存地址，直接调用操作系统的某些程序段完成输入输出及读写文件等操作功能",
    "id": 5038,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "汇编语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 80,
        "end": 84,
        "text": "内存地址",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "程序设计",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 66,
        "end": 70,
        "text": "程序设计",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 89,
        "end": 93,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 54,
        "end": 57,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 96,
        "end": 99,
        "text": "程序段",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 58,
        "end": 60,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 73,
        "end": 75,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6462,
    "created_at": "2024-08-16T07:41:28.401106Z",
    "updated_at": "2024-08-16T07:41:28.401106Z",
    "lead_time": 2.403
  },
  {
    "text": "指令本身由操作码字段、ModRM字段、SIB字段、位移量字段、立即数字段组成",
    "id": 5039,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "立即数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 26,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6463,
    "created_at": "2024-08-16T07:41:30.189664Z",
    "updated_at": "2024-08-16T07:41:30.189664Z",
    "lead_time": 1.299
  },
  {
    "text": "数据总线宽度为位",
    "id": 5040,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 8,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6464,
    "created_at": "2024-08-16T07:41:34.770016Z",
    "updated_at": "2024-08-16T07:41:34.770016Z",
    "lead_time": 0.762
  },
  {
    "text": "功能特性功能特性描述总线中每一根线的功能",
    "id": 5041,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6465,
    "created_at": "2024-08-16T07:41:37.680444Z",
    "updated_at": "2024-08-16T07:41:37.680444Z",
    "lead_time": 2.318
  },
  {
    "text": "对这种结构的运算器来说，在同一时间内，只能有一个操作数放在单总线上",
    "id": 5042,
    "label": [
      {
        "start": 24,
        "end": 27,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "单总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6466,
    "created_at": "2024-08-16T07:42:22.249144Z",
    "updated_at": "2024-08-16T07:42:22.249144Z",
    "lead_time": 44.083
  },
  {
    "text": "当一条转移指令译码并命中cache时，能同时由TIC取来它的目标路径的前面两条指令",
    "id": 5043,
    "label": [
      {
        "start": 12,
        "end": 17,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "转移指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "译码",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6467,
    "created_at": "2024-08-16T07:42:25.548071Z",
    "updated_at": "2024-08-16T07:42:25.548071Z",
    "lead_time": 2.864
  },
  {
    "text": "段寻址微型机中采用了段寻址方式，例如，它们可以给定一个位的地址，从而有MB存储空间的直接寻址能力",
    "id": 5044,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "段寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 42,
        "end": 46,
        "text": "直接寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 37,
        "end": 41,
        "text": "存储空间",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "微型机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "MB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 28,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6468,
    "created_at": "2024-08-16T07:42:41.029369Z",
    "updated_at": "2024-08-16T07:42:41.029369Z",
    "lead_time": 14.963
  },
  {
    "text": "异步总线定时协定在异步定时协议中，后一事件出现在总线上的时刻取决于前一事件的出现时刻，即建立在应答式或互锁机制基础上",
    "id": 5045,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "异步定时",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "总线定时",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6469,
    "created_at": "2024-08-16T07:42:44.734454Z",
    "updated_at": "2024-08-16T07:42:44.735455Z",
    "lead_time": 3.204
  },
  {
    "text": "由于擦除和编程速度相对较慢，且区块尺寸较大，NOR闪存不太适合纯数据存储和文件存储等应用场景",
    "id": 5046,
    "label": [
      {
        "start": 15,
        "end": 17,
        "text": "区块",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6470,
    "created_at": "2024-08-16T07:42:57.172532Z",
    "updated_at": "2024-08-16T07:42:57.172532Z",
    "lead_time": 11.962
  },
  {
    "text": "所谓系列计算机，是指基本指令系统相同、基本体系结构相同的一系列计算机，如Pentium系列就是曾经流行的一种个人机系列",
    "id": 5047,
    "label": [
      {
        "start": 12,
        "end": 16,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6471,
    "created_at": "2024-08-16T07:44:37.662987Z",
    "updated_at": "2024-08-16T07:44:37.662987Z",
    "lead_time": 99.542
  },
  {
    "text": "双端口存储器和多模块交叉存储器属于并行存储器结构",
    "id": 5048,
    "label": [
      {
        "start": 17,
        "end": 22,
        "text": "并行存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 15,
        "text": "多模块交叉存储器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "双端口存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6472,
    "created_at": "2024-08-16T07:44:47.208146Z",
    "updated_at": "2024-08-16T07:44:47.208146Z",
    "lead_time": 8.814
  },
  {
    "text": "朝舍入处理方法正好与朝舍入情况相反",
    "id": 5049,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "舍入处理",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6473,
    "created_at": "2024-08-16T07:44:53.911277Z",
    "updated_at": "2024-08-16T07:44:53.911277Z",
    "lead_time": 5.562
  },
  {
    "text": "因此，凡是用于一台计算机的各种程序，统称为这台计算机的程序或软件系统",
    "id": 5050,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6474,
    "created_at": "2024-08-16T07:45:09.895340Z",
    "updated_at": "2024-08-16T07:45:09.895340Z",
    "lead_time": 15.07
  },
  {
    "text": "因此最上面一行的控制线P固定置成“”",
    "id": 5051,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "控制线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6475,
    "created_at": "2024-08-16T07:45:58.241772Z",
    "updated_at": "2024-08-16T07:45:58.242346Z",
    "lead_time": 47.163
  },
  {
    "text": "图像输入控制板接收摄像机模拟视频输入信号，经AD变换为数字量存入刷新存储器用于显示，并可传送到计算机进行图像处理操作",
    "id": 5052,
    "label": [
      {
        "start": 32,
        "end": 37,
        "text": "刷新存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 52,
        "end": 56,
        "text": "图像处理",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 47,
        "end": 50,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6476,
    "created_at": "2024-08-16T07:46:42.064079Z",
    "updated_at": "2024-08-16T07:46:42.064079Z",
    "lead_time": 43.06
  },
  {
    "text": "借助系统总线，计算机在各系统部件之间实现传送地址、数据和控制信息的操作",
    "id": 5053,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "系统总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6477,
    "created_at": "2024-08-16T07:47:20.822987Z",
    "updated_at": "2024-08-16T07:47:20.822987Z",
    "lead_time": 38.045
  },
  {
    "text": "ADD指令是RR型指令，在运算器中用两个寄存器R和R的数据进行加法运算",
    "id": 5054,
    "label": [
      {
        "start": 20,
        "end": 23,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "ADD指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 6,
        "end": 11,
        "text": "RR型指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6478,
    "created_at": "2024-08-16T07:47:24.666702Z",
    "updated_at": "2024-08-16T07:47:24.666702Z",
    "lead_time": 3.235
  },
  {
    "text": "但是在进行计算机设计时，如果用这种办法来表示指令周期，那就显得过于烦琐，而且也没有必要",
    "id": 5055,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6479,
    "created_at": "2024-08-16T07:47:31.077751Z",
    "updated_at": "2024-08-16T07:47:31.077751Z",
    "lead_time": 5.788
  },
  {
    "text": "思考题你对通道技术的未来发展有什么见解？SCSI是小型计算机系统接口的简称，其设计思想来源于IBM大型机系统的IO通道结构，目的是使CPU摆脱对各种设备的繁杂控制",
    "id": 5056,
    "label": [
      {
        "start": 46,
        "end": 49,
        "text": "IBM",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 27,
        "end": 32,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 49,
        "end": 52,
        "text": "大型机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 66,
        "end": 69,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6480,
    "created_at": "2024-08-16T07:47:34.611676Z",
    "updated_at": "2024-08-16T07:47:34.611676Z",
    "lead_time": 2.913
  },
  {
    "text": "数的机器码表示前面介绍了数的小数点表示，下面还需要解决数的机器码表示问题",
    "id": 5057,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "机器码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "机器码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6481,
    "created_at": "2024-08-16T07:47:36.774323Z",
    "updated_at": "2024-08-16T07:47:36.774323Z",
    "lead_time": 1.323
  },
  {
    "text": "这mn个被加数aibjim和jn可以用mn个“与”门并行地产生，如图的上半部分所示",
    "id": 5058,
    "label": [
      {
        "start": 26,
        "end": 28,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6482,
    "created_at": "2024-08-16T07:47:40.454157Z",
    "updated_at": "2024-08-16T07:47:40.454157Z",
    "lead_time": 2.637
  },
  {
    "text": "优点是存取速度快，省去磁头找道时间，缺点是结构复杂",
    "id": 5059,
    "label": [
      {
        "start": 11,
        "end": 13,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "存取速度",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6483,
    "created_at": "2024-08-16T07:47:44.073209Z",
    "updated_at": "2024-08-16T07:47:44.073209Z",
    "lead_time": 3.053
  },
  {
    "text": "另有一些信号则根据条件变量来改变时序发生器的计数顺序，以便跳过某些状态，从而可以缩短指令周期",
    "id": 5060,
    "label": [
      {
        "start": 42,
        "end": 46,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6484,
    "created_at": "2024-08-16T07:49:35.655490Z",
    "updated_at": "2024-08-16T07:49:35.655490Z",
    "lead_time": 110.952
  },
  {
    "text": "用户直接使用机器总觉得机器“太硬了”，很多情况都得依附它",
    "id": 5061,
    "annotator": 1,
    "annotation_id": 6485,
    "created_at": "2024-08-16T07:49:55.840200Z",
    "updated_at": "2024-08-16T07:49:55.840200Z",
    "lead_time": 19.622
  },
  {
    "text": "每个适配器或控制器通过各自的设备级IO线可连接一台或几台同类型的外围设备如一个SCSI磁盘控制器接台硬盘驱动器",
    "id": 5062,
    "label": [
      {
        "start": 43,
        "end": 48,
        "text": "磁盘控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 52,
        "end": 55,
        "text": "驱动器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "适配器",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6486,
    "created_at": "2024-08-16T07:49:57.800741Z",
    "updated_at": "2024-08-16T07:49:57.800741Z",
    "lead_time": 1.42
  },
  {
    "text": "无符号半字同无符号字节，只是一个位的量",
    "id": 5063,
    "label": [
      {
        "start": 9,
        "end": 11,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 17,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 4,
        "end": 5,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6487,
    "created_at": "2024-08-16T07:50:00.285980Z",
    "updated_at": "2024-08-16T07:50:00.285980Z",
    "lead_time": 1.857
  },
  {
    "text": "在这种系统中，不需要统一的公共时钟信号",
    "id": 5064,
    "label": [
      {
        "start": 15,
        "end": 19,
        "text": "时钟信号",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6488,
    "created_at": "2024-08-16T07:50:32.082125Z",
    "updated_at": "2024-08-16T07:50:32.082125Z",
    "lead_time": 31.254
  },
  {
    "text": "本章所讨论的指令，是机器指令",
    "id": 5065,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6489,
    "created_at": "2024-08-16T07:52:22.410910Z",
    "updated_at": "2024-08-16T07:52:22.411045Z",
    "lead_time": 109.713
  },
  {
    "text": "为了减小转移指令对流水线性能的影响，常用以下两种转移处理技术",
    "id": 5066,
    "label": [
      {
        "start": 4,
        "end": 8,
        "text": "转移指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6490,
    "created_at": "2024-08-16T07:53:26.647028Z",
    "updated_at": "2024-08-16T07:53:26.647028Z",
    "lead_time": 63.506
  },
  {
    "text": "数据传输率磁盘存储器在单位时间内向主机传送数据的字节数，称为数据传输率",
    "id": 5067,
    "label": [
      {
        "start": 5,
        "end": 10,
        "text": "磁盘存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 35,
        "text": "数据传输率",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6491,
    "created_at": "2024-08-16T07:53:35.408032Z",
    "updated_at": "2024-08-16T07:53:35.408032Z",
    "lead_time": 7.951
  },
  {
    "text": "执行周期要求先进行ab运算，然后判断结果有无进位：当进位标志Cy，不减；当Cy，减去，从而获得正确结果",
    "id": 5068,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "执行周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "进位标志",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6492,
    "created_at": "2024-08-16T07:53:41.775939Z",
    "updated_at": "2024-08-16T07:53:41.775939Z",
    "lead_time": 5.473
  },
  {
    "text": "形成操作数的有效地址的方法，称为操作数的寻址方式",
    "id": 5069,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "有效地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6493,
    "created_at": "2024-08-16T07:55:43.420171Z",
    "updated_at": "2024-08-16T07:55:43.420171Z",
    "lead_time": 120.075
  },
  {
    "text": "这就是说，理论上k级线性流水线处理几乎可以提高k倍速度",
    "id": 5070,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6494,
    "created_at": "2024-08-16T07:55:45.792006Z",
    "updated_at": "2024-08-16T07:55:45.792006Z",
    "lead_time": 1.68
  },
  {
    "text": "图中，除第级外，其他各级都得到它下级的支持，同时也受到运行在下面各级上的程序的支持",
    "id": 5071,
    "label": [
      {
        "start": 36,
        "end": 38,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6495,
    "created_at": "2024-08-16T07:55:56.130094Z",
    "updated_at": "2024-08-16T07:55:56.130094Z",
    "lead_time": 9.656
  },
  {
    "text": "控制线，本例中RW控制线，它指定了对存储器进行读RW高电平，还是进行写RW低电平",
    "id": 5072,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "控制线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "低电平",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "控制线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "高电平",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6496,
    "created_at": "2024-08-16T07:56:57.325417Z",
    "updated_at": "2024-08-16T07:56:57.325417Z",
    "lead_time": 60.652
  },
  {
    "text": "第级到第级编写程序采用的语言，基本是二进制数字化语言，机器执行和解释容易",
    "id": 5073,
    "label": [
      {
        "start": 18,
        "end": 21,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6497,
    "created_at": "2024-08-16T07:57:06.839703Z",
    "updated_at": "2024-08-16T07:57:06.839703Z",
    "lead_time": 8.95
  },
  {
    "text": "下面以RAID级为例来说明",
    "id": 5074,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "RAID",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6498,
    "created_at": "2024-08-16T07:57:30.653060Z",
    "updated_at": "2024-08-16T07:57:30.653060Z",
    "lead_time": 23.362
  },
  {
    "text": "每个逻辑单元有一个逻辑单元号LUNLUN",
    "id": 5075,
    "annotator": 1,
    "annotation_id": 6499,
    "created_at": "2024-08-16T07:57:35.682159Z",
    "updated_at": "2024-08-16T07:57:35.682159Z",
    "lead_time": 4.405
  },
  {
    "text": "实际上，这也是PC机和服务器的主板总线的经典结构",
    "id": 5076,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "PC机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6500,
    "created_at": "2024-08-16T07:57:49.780358Z",
    "updated_at": "2024-08-16T07:57:49.780879Z",
    "lead_time": 13.423
  },
  {
    "text": "某些专用的方形CRT显示分辨率为像素，甚至更多",
    "id": 5077,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "CRT",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6501,
    "created_at": "2024-08-16T07:57:53.310161Z",
    "updated_at": "2024-08-16T07:57:53.310161Z",
    "lead_time": 2.912
  },
  {
    "text": "这种光盘允许多次写，重写数据时只需将被写过的呈非晶形的区域重新加热，温度在可结晶温度和熔化温度之间，使之重新转化为水晶态即可",
    "id": 5078,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6502,
    "created_at": "2024-08-16T07:58:03.355254Z",
    "updated_at": "2024-08-16T07:58:03.355254Z",
    "lead_time": 9.453
  },
  {
    "text": "进行计算的大多数指令算术、逻辑、浮点算术都包含一个R位，它指示运算结果是否应记录在条件寄存器中",
    "id": 5079,
    "label": [
      {
        "start": 41,
        "end": 46,
        "text": "条件寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 26,
        "end": 27,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6503,
    "created_at": "2024-08-16T07:59:02.736016Z",
    "updated_at": "2024-08-16T07:59:02.736016Z",
    "lead_time": 58.629
  },
  {
    "text": "如同硬件一样，计算机软件也是在不断发展的",
    "id": 5080,
    "label": [
      {
        "start": 7,
        "end": 12,
        "text": "计算机软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6504,
    "created_at": "2024-08-16T07:59:05.389378Z",
    "updated_at": "2024-08-16T07:59:05.389378Z",
    "lead_time": 1.996
  },
  {
    "text": "多路通道多路通道又称多路转换通道，在同一时间能处理多个IO设备的数据传输",
    "id": 5081,
    "label": [
      {
        "start": 27,
        "end": 31,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6505,
    "created_at": "2024-08-16T07:59:07.554306Z",
    "updated_at": "2024-08-16T07:59:07.554306Z",
    "lead_time": 1.417
  },
  {
    "text": "我们把前面的五条典型指令加以归纳，用方框图语言表示的指令周期示于图",
    "id": 5082,
    "label": [
      {
        "start": 26,
        "end": 30,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6506,
    "created_at": "2024-08-16T07:59:10.008362Z",
    "updated_at": "2024-08-16T07:59:10.008362Z",
    "lead_time": 1.796
  },
  {
    "text": "虚存页面替换的选择余地很大，属于一个进程的页面都可替换",
    "id": 5083,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "虚存",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "进程",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "页面替换",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "页面",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6507,
    "created_at": "2024-08-16T07:59:15.952399Z",
    "updated_at": "2024-08-16T07:59:15.952399Z",
    "lead_time": 5.291
  },
  {
    "text": "地址映射问题在访问主存时把虚地址变为主存物理地址这一过程称为内地址变换；在访问辅存时把虚地址变成辅存的物理地址这一过程称为外地址变换，以便换页",
    "id": 5084,
    "label": [
      {
        "start": 31,
        "end": 35,
        "text": "地址变换",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 62,
        "end": 66,
        "text": "地址变换",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "地址映射",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "物理地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 51,
        "end": 55,
        "text": "物理地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "虚地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "虚地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 48,
        "end": 50,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 70,
        "end": 71,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6508,
    "created_at": "2024-08-16T07:59:20.459288Z",
    "updated_at": "2024-08-16T07:59:20.459288Z",
    "lead_time": 3.621
  },
  {
    "text": "寻址方式少且简单，一般为二三种，最多不超过种，绝不出现存储器间接寻址方式",
    "id": 5085,
    "label": [
      {
        "start": 27,
        "end": 30,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "间接寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6509,
    "created_at": "2024-08-16T07:59:25.492705Z",
    "updated_at": "2024-08-16T07:59:25.492705Z",
    "lead_time": 4.259
  },
  {
    "text": "表列出了Pentium机的种寻址方式",
    "id": 5086,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6510,
    "created_at": "2024-08-16T07:59:53.794363Z",
    "updated_at": "2024-08-16T07:59:53.794363Z",
    "lead_time": 27.676
  },
  {
    "text": "数组多路通道是对选择通道的一种改进，它的基本思想是当某设备进行数据传送时，通道只为该设备服务；当设备在执行寻址等控制性动作时，通道暂时断开与这个设备的连接，挂起该设备的通道程序，去为其他设备服务，即执行其他设备的通道程序",
    "id": 5087,
    "label": [
      {
        "start": 86,
        "end": 88,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 108,
        "end": 110,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 53,
        "end": 55,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6511,
    "created_at": "2024-08-16T08:00:09.527053Z",
    "updated_at": "2024-08-16T08:00:09.527053Z",
    "lead_time": 15.176
  },
  {
    "text": "所谓超标量流水，是指它具有两条以上的指令流水线",
    "id": 5088,
    "label": [
      {
        "start": 20,
        "end": 23,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 2,
        "end": 7,
        "text": "超标量流水",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6512,
    "created_at": "2024-08-16T08:00:16.876470Z",
    "updated_at": "2024-08-16T08:00:16.876470Z",
    "lead_time": 6.736
  },
  {
    "text": "微指令和微程序在机器的一个CPU周期中，一组实现一定操作功能的微命令的组合，构成一条微指令",
    "id": 5089,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 13,
        "end": 18,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 42,
        "end": 45,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6513,
    "created_at": "2024-08-16T08:00:53.508085Z",
    "updated_at": "2024-08-16T08:00:53.508085Z",
    "lead_time": 36.08
  },
  {
    "text": "在这种结构中，两个操作数同时加到ALU进行运算，只需要一次操作控制，而且马上就可以得到运算结果",
    "id": 5090,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6514,
    "created_at": "2024-08-16T08:01:34.352395Z",
    "updated_at": "2024-08-16T08:01:34.352395Z",
    "lead_time": 40.194
  },
  {
    "text": "数据传送总线由地址线、数据线、控制线组成",
    "id": 5091,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "控制线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6515,
    "created_at": "2024-08-16T08:01:36.048212Z",
    "updated_at": "2024-08-16T08:01:36.048212Z",
    "lead_time": 1.056
  },
  {
    "text": "显然后者结构的计算机速度更快",
    "id": 5092,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6516,
    "created_at": "2024-08-16T08:01:37.894057Z",
    "updated_at": "2024-08-16T08:01:37.894057Z",
    "lead_time": 0.997
  },
  {
    "text": "有冲突的读写控制当两个端口同时存取存储器同一存储单元，而且至少有一个端口为写操作时，便发生读写冲突",
    "id": 5093,
    "label": [
      {
        "start": 17,
        "end": 20,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "存储单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6517,
    "created_at": "2024-08-16T08:01:39.478217Z",
    "updated_at": "2024-08-16T08:01:39.478217Z",
    "lead_time": 0.967
  },
  {
    "text": "DMA方式并不影响CPU的程序执行状态，只要不存在访存冲突，CPU就可以继续执行自己的程序",
    "id": 5094,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6518,
    "created_at": "2024-08-16T08:01:40.871113Z",
    "updated_at": "2024-08-16T08:01:40.871113Z",
    "lead_time": 0.636
  },
  {
    "text": "例如，软盘读出一个位二进制数大约需要s，而半导体内存的存储周期小于s，因此许多空闲的存储周期不能被CPU利用",
    "id": 5095,
    "label": [
      {
        "start": 27,
        "end": 31,
        "text": "存储周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 42,
        "end": 46,
        "text": "存储周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "半导体",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 49,
        "end": 52,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6519,
    "created_at": "2024-08-16T08:01:42.927077Z",
    "updated_at": "2024-08-16T08:01:42.927077Z",
    "lead_time": 1.206
  },
  {
    "text": "段是按照程序的自然分界划分的长度可以动态改变的区域",
    "id": 5096,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6520,
    "created_at": "2024-08-16T08:01:45.556227Z",
    "updated_at": "2024-08-16T08:01:45.556227Z",
    "lead_time": 1.834
  },
  {
    "text": "数据流从第一台处理机输入，经处理后被送入与第二台处理机相联的缓冲存储器中",
    "id": 5097,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "处理机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "处理机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6521,
    "created_at": "2024-08-16T08:01:47.985299Z",
    "updated_at": "2024-08-16T08:01:47.985299Z",
    "lead_time": 1.743
  },
  {
    "text": "内存地址计数器用于存放内存中要交换的数据的地址",
    "id": 5098,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "内存地址",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6522,
    "created_at": "2024-08-16T08:01:50.315809Z",
    "updated_at": "2024-08-16T08:01:50.315809Z",
    "lead_time": 1.609
  },
  {
    "text": "连接IO设备的PCIE总线又分别连接以太网设备控制器接口DCI、USB主机控制器接口、SATA串行高级技术附件桥、VGA视频图形阵列桥、DMA控制器和PCI总线扩展桥",
    "id": 5099,
    "label": [
      {
        "start": 7,
        "end": 13,
        "text": "PCIE总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 68,
        "end": 74,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 75,
        "end": 80,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 26,
        "text": "设备控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 57,
        "end": 60,
        "text": "VGA",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 55,
        "end": 56,
        "text": "桥",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 66,
        "end": 67,
        "text": "桥",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 82,
        "end": 83,
        "text": "桥",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6523,
    "created_at": "2024-08-16T08:02:01.189230Z",
    "updated_at": "2024-08-16T08:02:01.189230Z",
    "lead_time": 10.194
  },
  {
    "text": "当外围设备发出DMA请求时，CPU在指令周期执行结束后响应该请求，并使CPU的总线驱动器处于第三态高阻状态",
    "id": 5100,
    "label": [
      {
        "start": 39,
        "end": 44,
        "text": "总线驱动器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6524,
    "created_at": "2024-08-16T08:02:03.766131Z",
    "updated_at": "2024-08-16T08:02:03.766131Z",
    "lead_time": 1.802
  },
  {
    "text": "图示出浮点加减法运算电路的硬件框图",
    "id": 5101,
    "label": [
      {
        "start": 13,
        "end": 15,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6525,
    "created_at": "2024-08-16T08:02:06.759591Z",
    "updated_at": "2024-08-16T08:02:06.759591Z",
    "lead_time": 2.251
  },
  {
    "text": "其中，中断请求信号线是开路驱动，允许多个设备共享一条中断请求信号线",
    "id": 5102,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6526,
    "created_at": "2024-08-16T08:02:08.238043Z",
    "updated_at": "2024-08-16T08:02:08.238043Z",
    "lead_time": 0.869
  },
  {
    "text": "在T时钟的上升沿，DQ输出被设置为高阻状态",
    "id": 5103,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6527,
    "created_at": "2024-08-16T08:02:10.329566Z",
    "updated_at": "2024-08-16T08:02:10.329566Z",
    "lead_time": 1.399
  },
  {
    "text": "这样，每个程序就可以拥有一个虚拟的存储器，它具有辅存的容量和接近主存的访问速度",
    "id": 5104,
    "label": [
      {
        "start": 17,
        "end": 20,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6528,
    "created_at": "2024-08-16T08:02:11.523029Z",
    "updated_at": "2024-08-16T08:02:11.523029Z",
    "lead_time": 0.568
  },
  {
    "text": "内部总线宽度是外部总线宽度的两倍，从存储矩阵到IO缓冲区每个时钟周期传输n比特数据，从IO缓冲区到数据总线则在时钟触发沿的上、下沿都能进行数据传输",
    "id": 5105,
    "label": [
      {
        "start": 18,
        "end": 22,
        "text": "存储矩阵",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "外部总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "内部总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 49,
        "end": 53,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "比特数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6529,
    "created_at": "2024-08-16T08:02:13.488399Z",
    "updated_at": "2024-08-16T08:02:13.488399Z",
    "lead_time": 1.153
  },
  {
    "text": "解地址变换过程如下：由存储管理部件根据基号C找到段表基址寄存器表第c个表项，获得程序C的段表基址SC",
    "id": 5106,
    "label": [
      {
        "start": 28,
        "end": 31,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 17,
        "text": "存储管理部件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "地址变换",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "段表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "段表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6530,
    "created_at": "2024-08-16T08:02:22.615317Z",
    "updated_at": "2024-08-16T08:02:22.615317Z",
    "lead_time": 8.358
  },
  {
    "text": "在十进制运算时，当相加两数之和大于时，便产生进位",
    "id": 5107,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6531,
    "created_at": "2024-08-16T08:02:33.458183Z",
    "updated_at": "2024-08-16T08:02:39.556957Z",
    "lead_time": 13.518
  },
  {
    "text": "程序中使用的逻辑地址由一个位段选择器和一个位偏移量组成",
    "id": 5108,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "段选择器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "逻辑地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "偏移量",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 13,
        "end": 14,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 21,
        "end": 22,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6532,
    "created_at": "2024-08-16T08:03:03.659339Z",
    "updated_at": "2024-08-16T08:03:03.659339Z",
    "lead_time": 22.204
  },
  {
    "text": "记录在数字磁带上的遥感图像可以直接在磁带机上输入",
    "id": 5109,
    "label": [
      {
        "start": 5,
        "end": 7,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6533,
    "created_at": "2024-08-16T08:03:11.173475Z",
    "updated_at": "2024-08-16T08:03:11.173475Z",
    "lead_time": 6.73
  },
  {
    "text": "控制相关控制相关冲突是由转移指令引起的",
    "id": 5110,
    "label": [
      {
        "start": 12,
        "end": 16,
        "text": "转移指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6534,
    "created_at": "2024-08-16T08:03:21.769462Z",
    "updated_at": "2024-08-16T08:03:21.769975Z",
    "lead_time": 9.79
  },
  {
    "text": "不同极性的磁化元在铁芯里的方向是不同的",
    "id": 5111,
    "annotator": 1,
    "annotation_id": 6535,
    "created_at": "2024-08-16T08:03:27.419558Z",
    "updated_at": "2024-08-16T08:03:27.419558Z",
    "lead_time": 4.842
  },
  {
    "text": "第一条微指令为“取指”微指令，它是一条专门用来取机器指令的微指令，任务有三：从内存取出一条机器指令，并将指令放到指令寄存器IR",
    "id": 5112,
    "label": [
      {
        "start": 56,
        "end": 61,
        "text": "指令寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 45,
        "end": 49,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 61,
        "end": 63,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 52,
        "end": 54,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "取指",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6536,
    "created_at": "2024-08-16T08:03:46.311034Z",
    "updated_at": "2024-08-16T08:03:46.311034Z",
    "lead_time": 18.091
  },
  {
    "text": "但是读操作出现的时间不是固定的，因此必须对DRAM进行周期性的刷新，以保持其记忆的信息不丢失",
    "id": 5113,
    "label": [
      {
        "start": 21,
        "end": 25,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "读操作",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6537,
    "created_at": "2024-08-16T08:05:28.552352Z",
    "updated_at": "2024-08-16T08:05:28.552352Z",
    "lead_time": 101.66
  },
  {
    "text": "OE为读出使能信号，OE有效时低电平，门G开启，当写命令WE时高电平，门G关闭，存储器进行读操作",
    "id": 5114,
    "label": [
      {
        "start": 40,
        "end": 43,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "低电平",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "高电平",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "读操作",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6538,
    "created_at": "2024-08-16T08:05:34.394025Z",
    "updated_at": "2024-08-16T08:05:34.394025Z",
    "lead_time": 1.406
  },
  {
    "text": "根复合体RootComplex是PCIe的根控制器，将处理器内存子系统连接到PCIe交换结构",
    "id": 5115,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "根复合体",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "PCIe",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 42,
        "text": "PCIe",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6539,
    "created_at": "2024-08-16T08:05:37.888361Z",
    "updated_at": "2024-08-16T08:05:37.888361Z",
    "lead_time": 2.976
  },
  {
    "text": "这些寄存器是：数据缓冲寄存器DR，指令寄存器IR，程序计数器PC，数据地址寄存器AR，通用寄存器RR，程序状态字寄存器PSWR",
    "id": 5116,
    "label": [
      {
        "start": 7,
        "end": 14,
        "text": "数据缓冲寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 51,
        "end": 59,
        "text": "程序状态字寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 32,
        "text": "程序计数器PC",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 40,
        "text": "地址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 22,
        "text": "指令寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 48,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6540,
    "created_at": "2024-08-16T08:05:44.237497Z",
    "updated_at": "2024-08-16T08:05:44.237497Z",
    "lead_time": 5.712
  },
  {
    "text": "其中组相联方式是前二者的折中方案，适度地兼顾了二者的优点又尽量避免其缺点，从灵活性、命中率、硬件投资来说较为理想，因而得到了普遍采用",
    "id": 5117,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "组相联",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 42,
        "end": 45,
        "text": "命中率",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6541,
    "created_at": "2024-08-16T08:05:47.755533Z",
    "updated_at": "2024-08-16T08:05:47.755533Z",
    "lead_time": 2.655
  },
  {
    "text": "图a表示系统总线读周期时序图",
    "id": 5118,
    "label": [
      {
        "start": 4,
        "end": 8,
        "text": "系统总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "读周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6542,
    "created_at": "2024-08-16T08:05:51.739367Z",
    "updated_at": "2024-08-16T08:05:51.739367Z",
    "lead_time": 3.387
  },
  {
    "text": "因此，指令计数器的内容也必须相应改变，以便及时跟踪新的指令地址",
    "id": 5119,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "指令计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "指令地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6543,
    "created_at": "2024-08-16T08:06:18.344220Z",
    "updated_at": "2024-08-16T08:06:18.344220Z",
    "lead_time": 25.965
  },
  {
    "text": "编程命令需要四个写总线周期，依次送入AA、AA、A和欲编程地址欲编程数据后，芯片将转入“编程”状态",
    "id": 5120,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6544,
    "created_at": "2024-08-16T08:06:23.238254Z",
    "updated_at": "2024-08-16T08:06:23.238254Z",
    "lead_time": 4.333
  },
  {
    "text": "计算机的程序是由一系列的机器指令组成的",
    "id": 5121,
    "label": [
      {
        "start": 12,
        "end": 16,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6545,
    "created_at": "2024-08-16T08:06:30.478224Z",
    "updated_at": "2024-08-16T08:06:30.478224Z",
    "lead_time": 6.687
  },
  {
    "text": "表给出了字模式下SALJ使用的标准命令集中的部分命令",
    "id": 5122,
    "label": [
      {
        "start": 4,
        "end": 5,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6546,
    "created_at": "2024-08-16T08:06:34.910393Z",
    "updated_at": "2024-08-16T08:06:34.911400Z",
    "lead_time": 3.959
  },
  {
    "text": "每个存储单元的地址由高位的区块地址A以上和低位的区块内偏移地址两个字段组成，两个字段的长度与区块尺寸相关",
    "id": 5123,
    "label": [
      {
        "start": 27,
        "end": 31,
        "text": "偏移地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "存储单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "块地址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "区块",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "区块",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 23,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6547,
    "created_at": "2024-08-16T08:06:37.003310Z",
    "updated_at": "2024-08-16T08:06:37.003310Z",
    "lead_time": 1.562
  },
  {
    "text": "图是一个多路型DMA控制器的芯片内部逻辑结构，通过配合使用IO通用接口片子，它可以对个独立的DMA通路CH进行控制，使外围设备以周期挪用方式对内存进行存取",
    "id": 5124,
    "label": [
      {
        "start": 7,
        "end": 13,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 59,
        "end": 63,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 46,
        "end": 49,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 71,
        "end": 73,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6548,
    "created_at": "2024-08-16T08:06:38.512243Z",
    "updated_at": "2024-08-16T08:06:38.512243Z",
    "lead_time": 0.827
  },
  {
    "text": "在高优先级的中断服务程序执行完毕后，可以返回被打断的主程序“断点”继续执行",
    "id": 5125,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "优先级",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 6,
        "end": 12,
        "text": "中断服务程序",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6549,
    "created_at": "2024-08-16T08:06:48.271872Z",
    "updated_at": "2024-08-16T08:06:48.271872Z",
    "lead_time": 9.069
  },
  {
    "text": "如果规定用Br状态表示代码“”，Br状态表示代码“”，那么要使磁性材料记忆“”，就要加正向脉冲电流，使磁性材料正向磁化；要使磁性材料记忆“”，则要加负向脉冲电流，使磁性材料反向磁化",
    "id": 5126,
    "annotator": 1,
    "annotation_id": 6550,
    "created_at": "2024-08-16T08:06:52.208466Z",
    "updated_at": "2024-08-16T08:06:52.208466Z",
    "lead_time": 3.346
  },
  {
    "text": "偏移寻址一种强有力的寻址方式是直接寻址和寄存器间接寻址方式的结合，它有几种形式，我们称它为偏移寻址，如图g所示",
    "id": 5127,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 19,
        "text": "直接寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 45,
        "end": 49,
        "text": "偏移寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 27,
        "text": "寄存器间接寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "偏移寻址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6551,
    "created_at": "2024-08-16T08:07:18.709459Z",
    "updated_at": "2024-08-16T08:07:37.878113Z",
    "lead_time": 43.051
  },
  {
    "text": "如果找到匹配的页，则用表项中的物理页号取代逻辑页号；如果没有匹配表项，则说明该页不在主存中",
    "id": 5128,
    "label": [
      {
        "start": 21,
        "end": 25,
        "text": "逻辑页号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 19,
        "text": "物理页号",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 8,
        "text": "页",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 39,
        "end": 40,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6552,
    "created_at": "2024-08-16T08:07:44.130259Z",
    "updated_at": "2024-08-16T08:07:44.130259Z",
    "lead_time": 1.67
  },
  {
    "text": "由于乘法指令执行时间较长，此时IO访内与CPU访内没有冲突，即IO设备挪用一两个内存周期对CPU执行程序没有任何影响",
    "id": 5129,
    "label": [
      {
        "start": 40,
        "end": 42,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "执行时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 31,
        "end": 35,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6553,
    "created_at": "2024-08-16T08:07:50.454116Z",
    "updated_at": "2024-08-16T08:07:50.454116Z",
    "lead_time": 5.475
  },
  {
    "text": "因此旧机种上运行的各种软件可以不加任何修改便可在新机种上运行，大大减少了软件开发费用",
    "id": 5130,
    "label": [
      {
        "start": 11,
        "end": 13,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6554,
    "created_at": "2024-08-16T08:07:55.509429Z",
    "updated_at": "2024-08-16T08:07:55.509940Z",
    "lead_time": 4.37
  },
  {
    "text": "数值数据计算机中普遍使用的三种类型的数值数据是：定点整数或定点小数；浮点数；压缩十进制数，字节用位BCD码表示",
    "id": 5131,
    "label": [
      {
        "start": 29,
        "end": 33,
        "text": "定点小数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "定点整数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 49,
        "end": 53,
        "text": "BCD码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 48,
        "end": 49,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6555,
    "created_at": "2024-08-16T08:07:58.924307Z",
    "updated_at": "2024-08-16T08:07:58.924307Z",
    "lead_time": 2.547
  },
  {
    "text": "这意味着要用二维方式来设计中断排队逻辑",
    "id": 5132,
    "label": [
      {
        "start": 13,
        "end": 15,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6556,
    "created_at": "2024-08-16T08:08:01.247661Z",
    "updated_at": "2024-08-16T08:08:01.247661Z",
    "lead_time": 1.692
  },
  {
    "text": "对加减交替阵列除法器来说，在进行运算时，沿着每一行都有进位或借位传播，同时所有行在它们的进位链上都是串行连接",
    "id": 5133,
    "label": [
      {
        "start": 5,
        "end": 10,
        "text": "阵列除法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6557,
    "created_at": "2024-08-16T08:08:11.594316Z",
    "updated_at": "2024-08-16T08:08:11.594316Z",
    "lead_time": 9.85
  },
  {
    "text": "向SRAM写入时，个输入缓冲器被打开，而个输出缓冲器被关闭，因而条IO数据线上的数据写入存储阵列中",
    "id": 5134,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 44,
        "end": 48,
        "text": "存储阵列",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6558,
    "created_at": "2024-08-16T08:08:15.029913Z",
    "updated_at": "2024-08-16T08:08:15.029913Z",
    "lead_time": 2.793
  },
  {
    "text": "因此仲裁逻辑比较简单，而且在SCSI的总线选择阶段，启动设备和目标设备的设备号能同时出现在数据线上",
    "id": 5135,
    "label": [
      {
        "start": 45,
        "end": 48,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6559,
    "created_at": "2024-08-16T08:08:17.910297Z",
    "updated_at": "2024-08-16T08:08:17.910297Z",
    "lead_time": 2.157
  },
  {
    "text": "阶码上溢超过了阶码可能表示的最大值的正指数值，一般将其认为是和",
    "id": 5136,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6560,
    "created_at": "2024-08-16T08:08:19.403367Z",
    "updated_at": "2024-08-16T08:08:19.403367Z",
    "lead_time": 0.952
  },
  {
    "text": "按小数点位置不同，定点数有纯小数和纯整数两种表示方法",
    "id": 5137,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "定点数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6561,
    "created_at": "2024-08-16T08:08:23.479255Z",
    "updated_at": "2024-08-16T08:08:23.479255Z",
    "lead_time": 3.454
  },
  {
    "text": "有些IOP如IntelIOP，还提供数据的变换、搜索以及字装配拆卸能力",
    "id": 5138,
    "label": [
      {
        "start": 6,
        "end": 11,
        "text": "Intel",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 28,
        "end": 29,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6562,
    "created_at": "2024-08-16T08:08:29.025036Z",
    "updated_at": "2024-08-16T08:08:29.025036Z",
    "lead_time": 5.042
  },
  {
    "text": "而IS、IS、IS是与IR、IR、IR相对应的中断排队选中信号，若ISi，即表示该中断源被选中",
    "id": 5139,
    "label": [
      {
        "start": 41,
        "end": 44,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6563,
    "created_at": "2024-08-16T08:08:31.263206Z",
    "updated_at": "2024-08-16T08:08:31.263206Z",
    "lead_time": 1.75
  },
  {
    "text": "二是就行波进位加法器本身来说，它只能完成加法和减法两种操作而不能完成逻辑操作",
    "id": 5140,
    "label": [
      {
        "start": 3,
        "end": 10,
        "text": "行波进位加法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "逻辑操作",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6564,
    "created_at": "2024-08-16T08:08:34.395800Z",
    "updated_at": "2024-08-16T08:08:34.395800Z",
    "lead_time": 2.62
  },
  {
    "text": "与CPU的耦合程度根据存储器在计算机系统中所处的位置，可分为内部存储器和外部存储器",
    "id": 5141,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 15,
        "end": 20,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6565,
    "created_at": "2024-08-16T08:08:40.249188Z",
    "updated_at": "2024-08-16T08:08:40.249188Z",
    "lead_time": 5.332
  },
  {
    "text": "例如，位二进制位译码后可表示个微命令，位二进制位译码后可表示个微命令",
    "id": 5142,
    "label": [
      {
        "start": 15,
        "end": 18,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "二进制位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "二进制位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "译码",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "译码",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 3,
        "end": 4,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 19,
        "end": 20,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6566,
    "created_at": "2024-08-16T08:08:43.666358Z",
    "updated_at": "2024-08-16T08:08:43.666358Z",
    "lead_time": 2.867
  },
  {
    "text": "读操作时，端口的OE低电平有效打开输出驱动器，由存储矩阵读出的数据就出现在IO线上",
    "id": 5143,
    "label": [
      {
        "start": 24,
        "end": 28,
        "text": "存储矩阵",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "驱动器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "低电平",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "读操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6567,
    "created_at": "2024-08-16T08:08:46.948020Z",
    "updated_at": "2024-08-16T08:08:46.948020Z",
    "lead_time": 2.701
  },
  {
    "text": "这样可知指令的内容由两部分组成，即操作的性质和操作数的地址",
    "id": 5144,
    "label": [
      {
        "start": 23,
        "end": 26,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6568,
    "created_at": "2024-08-16T08:08:48.876480Z",
    "updated_at": "2024-08-16T08:08:48.876480Z",
    "lead_time": 1.431
  },
  {
    "text": "处理器能识别如下数据类型：无符号字节用于逻辑和整数算术运算",
    "id": 5145,
    "label": [
      {
        "start": 25,
        "end": 29,
        "text": "算术运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6569,
    "created_at": "2024-08-16T08:08:51.810101Z",
    "updated_at": "2024-08-16T08:08:51.810101Z",
    "lead_time": 2.428
  },
  {
    "text": "当执行不同的机器指令时，通过激活一系列彼此很不相同的控制信号来实现对指令的解释，其结果使得控制器往往很少有明确的结构而变得杂乱无章",
    "id": 5146,
    "label": [
      {
        "start": 45,
        "end": 48,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6570,
    "created_at": "2024-08-16T08:08:54.293254Z",
    "updated_at": "2024-08-16T08:08:54.293254Z",
    "lead_time": 1.986
  },
  {
    "text": "一是由于串行进位，它的运算时间很长",
    "id": 5147,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6571,
    "created_at": "2024-08-16T08:08:56.066748Z",
    "updated_at": "2024-08-16T08:08:59.986079Z",
    "lead_time": 2.924
  },
  {
    "text": "第二台处理机从该存储器中取出数据进行处理，然后传送给第三台处理机，如此串联下去",
    "id": 5148,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "处理机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "处理机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6572,
    "created_at": "2024-08-16T08:09:01.987088Z",
    "updated_at": "2024-08-16T08:09:01.987088Z",
    "lead_time": 1.081
  },
  {
    "text": "DMA控制器将向内存发出地址和控制信号，修改地址，对传送的字的个数计数，并且以中断方式向CPU报告传送操作的结束",
    "id": 5149,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 19,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 43,
        "text": "中断方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 44,
        "end": 47,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 30,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6573,
    "created_at": "2024-08-16T08:09:04.707768Z",
    "updated_at": "2024-08-16T08:09:04.707768Z",
    "lead_time": 2.191
  },
  {
    "text": "一般，主方先以一个总线周期发出命令和从方地址，经过一定的延时再开始数据传送总线周期",
    "id": 5150,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 37,
        "end": 41,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6574,
    "created_at": "2024-08-16T08:09:06.708810Z",
    "updated_at": "2024-08-16T08:09:06.708810Z",
    "lead_time": 1.466
  },
  {
    "text": "刷新计数器的宽度等于行地址锁存器的宽度",
    "id": 5151,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "锁存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "行地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6575,
    "created_at": "2024-08-16T08:09:10.433510Z",
    "updated_at": "2024-08-16T08:09:10.433510Z",
    "lead_time": 3.23
  },
  {
    "text": "图中的F部分为进行奇校验或偶校验的异或运算电路，如果存储器读写正确，那么写入存储器前与读出存储器后两部分的F运算结果应该一致，否则给出错误信号",
    "id": 5152,
    "label": [
      {
        "start": 26,
        "end": 30,
        "text": "存储器读",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "奇校验",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "偶校验",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6576,
    "created_at": "2024-08-16T08:10:10.761566Z",
    "updated_at": "2024-08-16T08:10:10.761566Z",
    "lead_time": 59.684
  },
  {
    "text": "所有的代码、数据和堆栈均包含在该地址空间内，该空间的字节地址范围为",
    "id": 5153,
    "label": [
      {
        "start": 26,
        "end": 30,
        "text": "字节地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "地址空间",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "堆栈",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6577,
    "created_at": "2024-08-16T08:10:17.286045Z",
    "updated_at": "2024-08-16T08:10:17.286045Z",
    "lead_time": 5.814
  },
  {
    "text": "数值部分的运算方法与普通的十进制小数乘法相类似，不过对于用二进制表达的数来说，其乘法规则更为简单一些",
    "id": 5154,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6578,
    "created_at": "2024-08-16T08:10:19.980150Z",
    "updated_at": "2024-08-16T08:10:19.980150Z",
    "lead_time": 1.856
  },
  {
    "text": "因此，对阶操作规定使尾数右移，尾数右移后使阶码作相应增加，其数值保持不变",
    "id": 5155,
    "label": [
      {
        "start": 21,
        "end": 23,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "右移",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "右移",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "对阶",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6579,
    "created_at": "2024-08-16T08:10:49.293397Z",
    "updated_at": "2024-08-16T08:10:49.293397Z",
    "lead_time": 28.35
  },
  {
    "text": "除了上述三种编码方法之外，为了加快输入速度，在上述方法基础上，发展了词组输入、联想输入等多种快速输入方法",
    "id": 5156,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6580,
    "created_at": "2024-08-16T08:11:13.133171Z",
    "updated_at": "2024-08-16T08:11:13.133171Z",
    "lead_time": 23.187
  },
  {
    "text": "ALU的X输入微操作、、与Y输入的、、这两组信号中，任意两个微操作也都是相容性的",
    "id": 5157,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "微操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "微操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6581,
    "created_at": "2024-08-16T08:11:15.395976Z",
    "updated_at": "2024-08-16T08:11:15.395976Z",
    "lead_time": 1.767
  },
  {
    "text": "再来考虑节中提出的一个问题：用二进制码表示的指令和数据都放在内存里，那么CPU是怎样识别出它们是数据还是指令呢事实上，通过节讲述指令周期后，就自然会得出如下结论：从时间上来说，取指令事件发生在指令周期的第一个CPU周期中，即发生在“取指令”阶段，而取数据事件发生在“执行指令”阶段",
    "id": 5158,
    "label": [
      {
        "start": 36,
        "end": 39,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 104,
        "end": 109,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 64,
        "end": 68,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 96,
        "end": 100,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 88,
        "end": 91,
        "text": "取指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 116,
        "end": 119,
        "text": "取指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 52,
        "end": 54,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 135,
        "end": 137,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6582,
    "created_at": "2024-08-16T08:11:18.552187Z",
    "updated_at": "2024-08-16T08:11:18.552187Z",
    "lead_time": 2.619
  },
  {
    "text": "因此执行转移微指令时，根据状态条件可转移到n个微地址中的一个",
    "id": 5159,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "微地址",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6583,
    "created_at": "2024-08-16T08:11:20.508342Z",
    "updated_at": "2024-08-16T08:11:20.508342Z",
    "lead_time": 1.401
  },
  {
    "text": "指数相减所得的差值控制着下面的三个多路开关；按从左到右的顺序，这三个多路开关分别挑选出较大的指数、较小加数的有效数位以及较大加数的有效数位",
    "id": 5160,
    "label": [
      {
        "start": 57,
        "end": 58,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 68,
        "end": 69,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6584,
    "created_at": "2024-08-16T08:11:25.432310Z",
    "updated_at": "2024-08-16T08:11:25.432310Z",
    "lead_time": 4.379
  },
  {
    "text": "当需要输入坐标数据建立显示文件时，要利用键盘",
    "id": 5161,
    "label": [
      {
        "start": 20,
        "end": 22,
        "text": "键盘",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6585,
    "created_at": "2024-08-16T08:11:27.819531Z",
    "updated_at": "2024-08-16T08:11:27.819531Z",
    "lead_time": 1.827
  },
  {
    "text": "因而上述指令的形式如下：操作码地址码其中操作码指出指令所进行的操作，如加、减、乘、除、取数、存数等；而地址码表示参加运算的数据应从存储器的哪个单元中取来，或运算的结果应该存到哪个单元中去",
    "id": 5162,
    "label": [
      {
        "start": 65,
        "end": 68,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 51,
        "end": 54,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6586,
    "created_at": "2024-08-16T08:12:00.703217Z",
    "updated_at": "2024-08-16T08:12:00.703217Z",
    "lead_time": 32.217
  },
  {
    "text": "还有没有更好的方法呢我们假定她给孩子们改作业是她的主要任务，那么她还可以采用第四种方法：权力下放，把发糖的事交给另一个人分管，只是必要时她才过问一下",
    "id": 5163,
    "annotator": 1,
    "annotation_id": 6587,
    "created_at": "2024-08-16T08:12:02.321667Z",
    "updated_at": "2024-08-16T08:12:02.321667Z",
    "lead_time": 0.991
  },
  {
    "text": "CDR实质上是WORM的一种，区别在于CDR允许多次分段写数据",
    "id": 5164,
    "label": [
      {
        "start": 26,
        "end": 28,
        "text": "分段",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6588,
    "created_at": "2024-08-16T08:12:03.465332Z",
    "updated_at": "2024-08-16T08:12:03.465332Z",
    "lead_time": 0.673
  },
  {
    "text": "DAT的存储容量最大达到GB",
    "id": 5165,
    "label": [
      {
        "start": 4,
        "end": 8,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "GB",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6589,
    "created_at": "2024-08-16T08:12:04.329406Z",
    "updated_at": "2024-08-16T08:12:04.329406Z",
    "lead_time": 0.403
  },
  {
    "text": "它具有两种类型的总线，一种是系统总线，它承担通道与存储器、CPU与存储器之间的数据传输任务",
    "id": 5166,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "系统总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6590,
    "created_at": "2024-08-16T08:12:06.053047Z",
    "updated_at": "2024-08-16T08:12:06.053047Z",
    "lead_time": 1.279
  },
  {
    "text": "在发出编程或擦除命令之后，对欲编程的存储单元地址或者欲擦除的任意存储单元的地址VA发出读命令，并检查数据线返回的状态值",
    "id": 5167,
    "label": [
      {
        "start": 18,
        "end": 22,
        "text": "存储单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "存储单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 50,
        "end": 53,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6591,
    "created_at": "2024-08-16T08:12:09.140785Z",
    "updated_at": "2024-08-16T08:12:09.140785Z",
    "lead_time": 2.583
  },
  {
    "text": "所谓磁表面存储，是用某些磁性材料薄薄地涂在金属铝或塑料表面作载磁体来存储信息",
    "id": 5168,
    "annotator": 1,
    "annotation_id": 6592,
    "created_at": "2024-08-16T08:12:10.606123Z",
    "updated_at": "2024-08-16T08:12:10.606123Z",
    "lead_time": 0.951
  },
  {
    "text": "由于软件的介入，虚存对设计存储管理软件的系统程序员而言是不透明的，但对应用程序员而言仍然是透明的",
    "id": 5169,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "虚存",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 35,
        "end": 39,
        "text": "应用程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "系统程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6593,
    "created_at": "2024-08-16T08:12:13.412500Z",
    "updated_at": "2024-08-16T08:12:13.412500Z",
    "lead_time": 2.356
  },
  {
    "text": "执行软件中断指令：如执行INT，INT，INTn等指令，执行时产生异常中断",
    "id": 5170,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6594,
    "created_at": "2024-08-16T08:12:15.725907Z",
    "updated_at": "2024-08-16T08:12:15.725907Z",
    "lead_time": 1.773
  },
  {
    "text": "组相联映射方式中的每组行数v一般取值较小，典型值是、、、",
    "id": 5171,
    "label": [
      {
        "start": 0,
        "end": 7,
        "text": "组相联映射方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6595,
    "created_at": "2024-08-16T08:12:16.970939Z",
    "updated_at": "2024-08-16T08:12:16.970939Z",
    "lead_time": 0.697
  },
  {
    "text": "计算机的并行处理技术可贯穿于信息加工的各个步骤和阶段，概括起来，主要有三种形式：时间并行；空间并行；时间并行空间并行",
    "id": 5172,
    "label": [
      {
        "start": 40,
        "end": 44,
        "text": "时间并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 10,
        "text": "并行处理技术",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 50,
        "end": 54,
        "text": "时间并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 45,
        "end": 49,
        "text": "空间并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 54,
        "end": 58,
        "text": "空间并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6596,
    "created_at": "2024-08-16T08:12:18.871095Z",
    "updated_at": "2024-08-16T08:12:18.871095Z",
    "lead_time": 1.385
  },
  {
    "text": "CPU访问一次内存所花的时间较长，因此通常用内存中读取一个指令字的最短时间来规定CPU周期",
    "id": 5173,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 45,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "指令字",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6597,
    "created_at": "2024-08-16T08:12:22.206288Z",
    "updated_at": "2024-08-16T08:12:22.206288Z",
    "lead_time": 2.801
  },
  {
    "text": "如果一个由外围设备指定的地址对应于一个主存单元，则主存予以响应，于是在主存和外设之间将进行直接存储器传送",
    "id": 5174,
    "label": [
      {
        "start": 19,
        "end": 23,
        "text": "主存单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 47,
        "end": 50,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6598,
    "created_at": "2024-08-16T08:14:32.733835Z",
    "updated_at": "2024-08-16T08:14:32.733835Z",
    "lead_time": 129.924
  },
  {
    "text": "立即寻址方式的特点是指令中包含的操作数立即可用，节省了访问内存的时间",
    "id": 5175,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "立即寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6599,
    "created_at": "2024-08-16T08:14:49.655062Z",
    "updated_at": "2024-08-16T08:14:49.655062Z",
    "lead_time": 16.364
  },
  {
    "text": "数的变形补码用同余式表示时为了得到两数变形补码之和等于两数和的变形补码，同样必须：两个符号位都看做数码一样参加运算；两数进行以n为模的加法，即最高符号位上产生的进位要丢掉",
    "id": 5176,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "变形补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "变形补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 31,
        "end": 35,
        "text": "变形补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 73,
        "end": 76,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "同余式",
        "labels": [
          "ALG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6600,
    "created_at": "2024-08-16T08:16:06.330390Z",
    "updated_at": "2024-08-16T08:16:06.331398Z",
    "lead_time": 76.115
  },
  {
    "text": "硬布线控制器中，时序信号往往采用主状态周期节拍电位节拍脉冲三级体制",
    "id": 5177,
    "label": [
      {
        "start": 23,
        "end": 27,
        "text": "电位节拍",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "硬布线控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "时序信号",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6601,
    "created_at": "2024-08-16T08:16:07.681378Z",
    "updated_at": "2024-08-16T08:16:07.681378Z",
    "lead_time": 0.752
  },
  {
    "text": "但分页方式的缺点是页长与程序的逻辑大小不相关",
    "id": 5178,
    "label": [
      {
        "start": 1,
        "end": 3,
        "text": "分页",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6602,
    "created_at": "2024-08-16T08:16:08.675217Z",
    "updated_at": "2024-08-16T08:16:08.675217Z",
    "lead_time": 0.468
  },
  {
    "text": "这是因为，CPU将部分权力下放给通道",
    "id": 5179,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6603,
    "created_at": "2024-08-16T08:16:09.750186Z",
    "updated_at": "2024-08-16T08:16:09.750186Z",
    "lead_time": 0.553
  },
  {
    "text": "只有两个操作数同时出现在ALU的两个输入端，ALU才执行加法",
    "id": 5180,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6604,
    "created_at": "2024-08-16T08:16:11.341737Z",
    "updated_at": "2024-08-16T08:16:11.341737Z",
    "lead_time": 1.073
  },
  {
    "text": "它的出现使图形学的研究从简单的线条图扩展到丰富多彩、形象逼真的各种立体及平面图形，从而成为目前流行的显示器",
    "id": 5181,
    "label": [
      {
        "start": 50,
        "end": 53,
        "text": "显示器",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6605,
    "created_at": "2024-08-16T08:16:14.376238Z",
    "updated_at": "2024-08-16T08:16:14.376238Z",
    "lead_time": 2.527
  },
  {
    "text": "PCI总线的升级版PCIe总线在许多方面进行了改进，其性能得到大幅度提升",
    "id": 5182,
    "label": [
      {
        "start": 9,
        "end": 15,
        "text": "PCIe总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6606,
    "created_at": "2024-08-16T08:16:16.854493Z",
    "updated_at": "2024-08-16T08:16:16.854493Z",
    "lead_time": 1.94
  },
  {
    "text": "即使CPU采用定期地由主程序转向查询设备状态的子程序进行扫描轮询polling的办法，CPU时间的消耗也是可观的",
    "id": 5183,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6607,
    "created_at": "2024-08-16T08:16:20.241601Z",
    "updated_at": "2024-08-16T08:16:20.241601Z",
    "lead_time": 2.857
  },
  {
    "text": "在指令执行过程中，操作数的来源一般有三个：由指令中的地址码部分直接给出操作数，虽然简便快捷，但是操作数是固定不变的；将操作数存放在CPU内的通用数据寄存器中，这样可以很快获取操作数，但是可以存储的操作数的数量有限；更一般化的方式是将操作数存放在内存的数据区中",
    "id": 5184,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 72,
        "end": 77,
        "text": "数据寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 48,
        "end": 51,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 59,
        "end": 62,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 87,
        "end": 90,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 98,
        "end": 101,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 116,
        "end": 119,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 65,
        "end": 68,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 122,
        "end": 124,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6608,
    "created_at": "2024-08-16T08:16:22.239551Z",
    "updated_at": "2024-08-16T08:16:22.239551Z",
    "lead_time": 1.434
  },
  {
    "text": "不同厂商生产的芯片支持的命令序列不同，常见的有AMDFujitsu的标准命令集和IntelSharp的扩展命令集",
    "id": 5185,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 45,
        "text": "Intel",
        "labels": [
          "CORP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6609,
    "created_at": "2024-08-16T08:16:25.112150Z",
    "updated_at": "2024-08-16T08:16:25.112150Z",
    "lead_time": 2.297
  },
  {
    "text": "第、两级编写程序所采用的语言是符号语言，用英文字母和符号来表示程序，因而便于大多数不了解硬件的人们使用计算机",
    "id": 5186,
    "label": [
      {
        "start": 51,
        "end": 54,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6610,
    "created_at": "2024-08-16T08:17:36.673750Z",
    "updated_at": "2024-08-16T08:17:36.673750Z",
    "lead_time": 70.828
  },
  {
    "text": "存储器模块识别地址码，经一个时钟周期延迟存取时间后，将数据和认可信息放到总线上，被CPU读取",
    "id": 5187,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "存取时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 41,
        "end": 44,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6611,
    "created_at": "2024-08-16T08:17:39.575415Z",
    "updated_at": "2024-08-16T08:17:39.575415Z",
    "lead_time": 1.959
  },
  {
    "text": "一个CPU周期为s，它包含四个等间隔的节拍脉冲TT，每个脉冲宽度为ns",
    "id": 5188,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "节拍脉冲",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6612,
    "created_at": "2024-08-16T08:17:42.037142Z",
    "updated_at": "2024-08-16T08:17:42.037142Z",
    "lead_time": 1.825
  },
  {
    "text": "否则查询链继续向下查询，直至找到发出中断请求信号IRi的中断源设备",
    "id": 5189,
    "label": [
      {
        "start": 28,
        "end": 31,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6613,
    "created_at": "2024-08-16T08:17:44.217083Z",
    "updated_at": "2024-08-16T08:17:44.217083Z",
    "lead_time": 1.651
  },
  {
    "text": "因此DLT磁带提供所有磁带类型的存储容量，最大可以达到GB",
    "id": 5190,
    "label": [
      {
        "start": 16,
        "end": 20,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "GB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6614,
    "created_at": "2024-08-16T08:17:46.984142Z",
    "updated_at": "2024-08-16T08:17:46.984142Z",
    "lead_time": 2.231
  },
  {
    "text": "汉字内码是用于汉字信息的存储、交换、检索等操作的机内代码，一般采用字节表示",
    "id": 5191,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "汉字内码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "汉字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6615,
    "created_at": "2024-08-16T08:18:17.899242Z",
    "updated_at": "2024-08-16T08:18:17.899242Z",
    "lead_time": 30.233
  },
  {
    "text": "全写法是写cache与写主存同步进行，优点是cache中每行无须设置一个修改位，以及相应的判断逻辑",
    "id": 5192,
    "label": [
      {
        "start": 12,
        "end": 14,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 10,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 22,
        "end": 27,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "修改位",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "全写法",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6616,
    "created_at": "2024-08-16T08:18:22.294391Z",
    "updated_at": "2024-08-16T08:18:22.294391Z",
    "lead_time": 3.784
  },
  {
    "text": "当今的显示适配器为支持视窗的API应用程序界面，几乎都安装图形加速器硬件，这样的适配器称为AVGA",
    "id": 5193,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "显示适配器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "应用程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "适配器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6617,
    "created_at": "2024-08-16T08:19:52.585188Z",
    "updated_at": "2024-08-16T08:19:52.585188Z",
    "lead_time": 89.519
  },
  {
    "text": "图表示使用磁盘阵列管理软件在逻辑磁盘和物理磁盘间进行映射",
    "id": 5194,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "逻辑磁盘",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6618,
    "created_at": "2024-08-16T08:19:55.431883Z",
    "updated_at": "2024-08-16T08:19:55.432134Z",
    "lead_time": 2.307
  },
  {
    "text": "图示出了中断处理示意图",
    "id": 5195,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6619,
    "created_at": "2024-08-16T08:19:56.720897Z",
    "updated_at": "2024-08-16T08:19:56.720897Z",
    "lead_time": 0.693
  },
  {
    "text": "独立请求方式的一个优点是响应时间快，即确定优先响应的设备所花费的时间少，用不着一个设备接一个设备地查询",
    "id": 5196,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "独立请求方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6620,
    "created_at": "2024-08-16T08:20:00.316093Z",
    "updated_at": "2024-08-16T08:20:00.316093Z",
    "lead_time": 3.076
  },
  {
    "text": "从指令与微指令，程序与微程序，地址与微地址的一一对应关系来看，前者与内存储器有关，后者与控制存储器有关",
    "id": 5197,
    "label": [
      {
        "start": 34,
        "end": 38,
        "text": "内存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 44,
        "end": 49,
        "text": "控制存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "微地址",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6621,
    "created_at": "2024-08-16T08:20:17.480215Z",
    "updated_at": "2024-08-16T08:20:17.480215Z",
    "lead_time": 16.651
  },
  {
    "text": "运算器只能完成加、减、乘、除四则运算及其他一些辅助操作",
    "id": 5198,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6622,
    "created_at": "2024-08-16T08:20:30.899940Z",
    "updated_at": "2024-08-16T08:20:30.899940Z",
    "lead_time": 12.884
  },
  {
    "text": "LAD指令的执行周期LAD指令的执行周期如图所示",
    "id": 5199,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "LAD",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "执行周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "执行周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "LAD",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6623,
    "created_at": "2024-08-16T08:20:35.136936Z",
    "updated_at": "2024-08-16T08:20:35.136936Z",
    "lead_time": 3.718
  },
  {
    "text": "对数据存储用的CDROM光盘来讲，这种坑点分布作为数字“”“”代码的写入或读出标志",
    "id": 5200,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6624,
    "created_at": "2024-08-16T08:20:44.828184Z",
    "updated_at": "2024-08-16T08:20:44.828184Z",
    "lead_time": 9.107
  },
  {
    "text": "如何选取就涉及替换策略，又称替换算法",
    "id": 5201,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "替换策略",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "算法",
        "labels": [
          "ALG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6625,
    "created_at": "2024-08-16T08:20:47.810028Z",
    "updated_at": "2024-08-16T08:20:47.811037Z",
    "lead_time": 2.504
  },
  {
    "text": "连接到总线上的功能模块有主动和被动两种形态",
    "id": 5202,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6626,
    "created_at": "2024-08-16T08:20:54.754350Z",
    "updated_at": "2024-08-16T08:20:54.754350Z",
    "lead_time": 6.362
  },
  {
    "text": "存储管理部件是存储器的控制部件，它的主要任务是根据事先确定的优先次序，决定下一周期由哪个部件使用系统总线访问存储器",
    "id": 5203,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "存储管理部件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 48,
        "end": 52,
        "text": "系统总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 54,
        "end": 57,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6627,
    "created_at": "2024-08-16T08:20:58.389448Z",
    "updated_at": "2024-08-16T08:20:58.389448Z",
    "lead_time": 3.124
  },
  {
    "text": "数据线，本例中有条，即IO、IO、IO和IO，说明存储器的字长是位，因此存储位元的总数是",
    "id": 5204,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 40,
        "text": "存储位元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "字长",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 32,
        "end": 33,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6628,
    "created_at": "2024-08-16T08:21:12.583118Z",
    "updated_at": "2024-08-16T08:21:12.583118Z",
    "lead_time": 13.636
  },
  {
    "text": "位的浮点数中，S是浮点数的符号位，占位，安排在最高位，S表示正数，S表示负数",
    "id": 5205,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "最高位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 1,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 19,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6629,
    "created_at": "2024-08-16T08:21:14.665363Z",
    "updated_at": "2024-08-16T08:21:14.665363Z",
    "lead_time": 1.457
  },
  {
    "text": "表列出了电子数字计算机与电子模拟计算机的主要区别",
    "id": 5206,
    "label": [
      {
        "start": 4,
        "end": 11,
        "text": "电子数字计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 12,
        "end": 19,
        "text": "电子模拟计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6630,
    "created_at": "2024-08-16T08:21:18.453204Z",
    "updated_at": "2024-08-16T08:21:18.453204Z",
    "lead_time": 3.202
  },
  {
    "text": "虚存机制要解决的关键问题虚存机制也要解决一些关键问题",
    "id": 5207,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "虚存",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "虚存",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6631,
    "created_at": "2024-08-16T08:21:22.721226Z",
    "updated_at": "2024-08-16T08:21:22.721226Z",
    "lead_time": 3.751
  },
  {
    "text": "读出的过程中可以完成刷新",
    "id": 5208,
    "annotator": 1,
    "annotation_id": 6632,
    "created_at": "2024-08-16T08:21:29.409598Z",
    "updated_at": "2024-08-16T08:21:29.409598Z",
    "lead_time": 6.176
  },
  {
    "text": "总线桥是一种具有缓冲、转换、控制功能的逻辑电路",
    "id": 5209,
    "label": [
      {
        "start": 19,
        "end": 23,
        "text": "逻辑电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 3,
        "text": "桥",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6633,
    "created_at": "2024-08-16T08:21:32.069863Z",
    "updated_at": "2024-08-16T08:21:32.069863Z",
    "lead_time": 2.187
  },
  {
    "text": "另外，一条指令的整个执行过程也受到时间的严格定时",
    "id": 5210,
    "label": [
      {
        "start": 5,
        "end": 7,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6634,
    "created_at": "2024-08-16T08:21:37.075194Z",
    "updated_at": "2024-08-16T08:21:37.075194Z",
    "lead_time": 4.499
  },
  {
    "text": "最后，当记录有信息的纸经过定影辊高温加热，碳粉被溶化，永久性地黏附在纸上，达到定影的效果",
    "id": 5211,
    "annotator": 1,
    "annotation_id": 6635,
    "created_at": "2024-08-16T08:23:14.107625Z",
    "updated_at": "2024-08-16T08:23:14.107625Z",
    "lead_time": 96.477
  },
  {
    "text": "流水技术中的主要问题是资源相关、数据相关和控制相关，为此需要采取相应的技术对策，才能保证流水线畅通而不断流",
    "id": 5212,
    "label": [
      {
        "start": 16,
        "end": 20,
        "text": "数据相关",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 44,
        "end": 47,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "流水",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6636,
    "created_at": "2024-08-16T08:23:22.383811Z",
    "updated_at": "2024-08-16T08:23:22.383811Z",
    "lead_time": 7.237
  },
  {
    "text": "它有微操作码，在一条微指令中只有个微操作命令，每条微指令的功能简单，因此，实现一条机器指令的微程序要比水平型微指令编写的微程序长得多",
    "id": 5213,
    "label": [
      {
        "start": 51,
        "end": 57,
        "text": "水平型微指令",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 45,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "微操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "微操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 46,
        "end": 49,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 60,
        "end": 63,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6637,
    "created_at": "2024-08-16T08:23:25.565658Z",
    "updated_at": "2024-08-16T08:23:25.565658Z",
    "lead_time": 2.147
  },
  {
    "text": "程序状态字寄存器PSWR程序状态字寄存器又称为状态条件寄存器，保存由算术运算指令和逻辑运算指令运算或测试结果建立的各种条件代码，如运算结果进位标志C，运算结果溢出标志V，运算结果为零标志Z，运算结果为负标志N，等等",
    "id": 5214,
    "label": [
      {
        "start": 0,
        "end": 8,
        "text": "程序状态字寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 20,
        "text": "程序状态字寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 30,
        "text": "状态条件寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 40,
        "text": "算术运算指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 77,
        "end": 83,
        "text": "结果溢出标志",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 45,
        "text": "逻辑运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 69,
        "end": 73,
        "text": "进位标志",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 100,
        "end": 103,
        "text": "负标志",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 90,
        "end": 93,
        "text": "零标志",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6638,
    "created_at": "2024-08-16T08:23:28.001697Z",
    "updated_at": "2024-08-16T08:23:28.001697Z",
    "lead_time": 0.897
  },
  {
    "text": "这样一来，表中指令的操作码部分就可以变成二进制代码",
    "id": 5215,
    "label": [
      {
        "start": 20,
        "end": 23,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6639,
    "created_at": "2024-08-16T08:23:31.242166Z",
    "updated_at": "2024-08-16T08:23:31.242166Z",
    "lead_time": 2.045
  },
  {
    "text": "常用的有同步控制、异步控制、联合控制三种方式，其实质反映了时序信号的定时方式",
    "id": 5216,
    "label": [
      {
        "start": 29,
        "end": 33,
        "text": "时序信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6640,
    "created_at": "2024-08-16T08:23:43.275854Z",
    "updated_at": "2024-08-16T08:23:43.276851Z",
    "lead_time": 10.833
  },
  {
    "text": "ASCII编码和个字符的对应关系如表所示",
    "id": 5217,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "ASCII",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6641,
    "created_at": "2024-08-16T08:24:04.425416Z",
    "updated_at": "2024-08-16T08:24:04.425416Z",
    "lead_time": 20.349
  },
  {
    "text": "如果该指令地址字段对应的是外围设备地址，则外围设备译码器予以响应，从而在CPU和与该地址相对应的外围设备之间发生数据传送，而数据传送的方向由指令操作码决定",
    "id": 5218,
    "label": [
      {
        "start": 25,
        "end": 28,
        "text": "译码器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 70,
        "end": 75,
        "text": "指令操作码",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 48,
        "end": 52,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "地址字段",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6642,
    "created_at": "2024-08-16T08:24:06.756520Z",
    "updated_at": "2024-08-16T08:24:06.756520Z",
    "lead_time": 1.467
  },
  {
    "text": "CPU执行时间表示CPU执行一般程序所占用的CPU时间，可用下式计算：CPU执行时间CPU时钟周期数CPU时钟周期CPl表示每条指令周期数，即执行一条指令所需的平均时钟周期数",
    "id": 5219,
    "label": [
      {
        "start": 42,
        "end": 49,
        "text": "CPU时钟周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 50,
        "end": 57,
        "text": "CPU时钟周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 64,
        "end": 68,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "执行时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 38,
        "end": 42,
        "text": "执行时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 82,
        "end": 86,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 75,
        "end": 77,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6643,
    "created_at": "2024-08-16T08:24:09.945376Z",
    "updated_at": "2024-08-16T08:24:09.945376Z",
    "lead_time": 1.815
  },
  {
    "text": "为求得数据结构最大的灵活性和最有效地使用存储器，单字不需要在偶数地址上对齐，双字也不需要在倍字节整数地址上对齐，四字不需要在倍字节整数地址上对齐",
    "id": 5220,
    "label": [
      {
        "start": 20,
        "end": 23,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 63,
        "end": 65,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 67,
        "end": 69,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 26,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 39,
        "end": 40,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 57,
        "end": 58,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6644,
    "created_at": "2024-08-16T08:24:24.140989Z",
    "updated_at": "2024-08-16T08:24:24.140989Z",
    "lead_time": 13.188
  },
  {
    "text": "机器执行这类指令过程中，需要多个通用寄存器或个别专用寄存器，从寄存器中取操作数，把操作结果放到另一寄存器",
    "id": 5221,
    "label": [
      {
        "start": 16,
        "end": 21,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 29,
        "text": "专用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 49,
        "end": 52,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6645,
    "created_at": "2024-08-16T08:25:46.022672Z",
    "updated_at": "2024-08-16T08:25:46.022672Z",
    "lead_time": 80.858
  },
  {
    "text": "字符串是指连续的一串字符，通常方式下，它们占用主存中连续的多字节，每字节存一个字符",
    "id": 5222,
    "label": [
      {
        "start": 30,
        "end": 32,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6646,
    "created_at": "2024-08-16T08:28:16.009979Z",
    "updated_at": "2024-08-16T08:28:16.009979Z",
    "lead_time": 148.961
  },
  {
    "text": "但是这部分时间实际上并不需要占用总线传输数据，因而宝贵的总线资源被浪费了",
    "id": 5223,
    "label": [
      {
        "start": 16,
        "end": 18,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6647,
    "created_at": "2024-08-16T08:29:53.730148Z",
    "updated_at": "2024-08-16T08:29:53.730148Z",
    "lead_time": 97.0
  },
  {
    "text": "指令周期常常用若干个CPU周期数来表示，CPU周期又称为机器周期",
    "id": 5224,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 25,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "机器周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6648,
    "created_at": "2024-08-16T08:30:04.454845Z",
    "updated_at": "2024-08-16T08:30:04.454845Z",
    "lead_time": 10.022
  },
  {
    "text": "计算机的程序，就是人们把需要用计算机解决的问题变换成计算机能够识别的一串指令或语句",
    "id": 5225,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6649,
    "created_at": "2024-08-16T08:31:26.576155Z",
    "updated_at": "2024-08-16T08:31:26.576155Z",
    "lead_time": 81.375
  },
  {
    "text": "这样，连续地址分布在相邻的不同模块内，而同一个模块内的地址都是不连续的",
    "id": 5226,
    "label": [
      {
        "start": 5,
        "end": 7,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6650,
    "created_at": "2024-08-16T08:31:32.442790Z",
    "updated_at": "2024-08-16T08:31:32.442790Z",
    "lead_time": 4.886
  },
  {
    "text": "LSI的采用，一块集成电路芯片上可以放置个元件，VLSI达到每个芯片万个元件，现在的ULSI芯片超过了万个元件",
    "id": 5227,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "集成电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6651,
    "created_at": "2024-08-16T08:32:19.208160Z",
    "updated_at": "2024-08-16T08:32:19.208160Z",
    "lead_time": 45.953
  },
  {
    "text": "我们已经看到，指令和数据统统放在内存中，从形式上看，它们都是二进制数码，似乎很难分清哪些是指令字，哪些是数据字",
    "id": 5228,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 52,
        "end": 55,
        "text": "数据字",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "指令字",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6652,
    "created_at": "2024-08-16T08:32:23.072452Z",
    "updated_at": "2024-08-16T08:32:23.072452Z",
    "lead_time": 2.859
  },
  {
    "text": "操作控制器利用这些时序信号进行定时，有条不紊地取出一条指令并执行这条指令",
    "id": 5229,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "操作控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "时序信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6653,
    "created_at": "2024-08-16T08:32:24.915989Z",
    "updated_at": "2024-08-16T08:32:24.915989Z",
    "lead_time": 0.989
  },
  {
    "text": "这种非固定长度的指令格式是典型的CISC结构特征",
    "id": 5230,
    "label": [
      {
        "start": 16,
        "end": 20,
        "text": "CISC",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6654,
    "created_at": "2024-08-16T08:32:27.144085Z",
    "updated_at": "2024-08-16T08:32:27.144085Z",
    "lead_time": 1.261
  },
  {
    "text": "图是无等待状态成块存取示意图",
    "id": 5231,
    "annotator": 1,
    "annotation_id": 6655,
    "created_at": "2024-08-16T08:32:28.726326Z",
    "updated_at": "2024-08-16T08:32:28.726326Z",
    "lead_time": 0.662
  },
  {
    "text": "竞争期的时间要足够，保证最慢的设备也能参与竞争",
    "id": 5232,
    "annotator": 1,
    "annotation_id": 6656,
    "created_at": "2024-08-16T08:32:30.141359Z",
    "updated_at": "2024-08-16T08:32:30.141359Z",
    "lead_time": 0.514
  },
  {
    "text": "按这个分辨率表示的图像具有较好的水平线性和垂直线性，否则看起来会失真变形，同样英寸的CRT显示像素也满足的比例",
    "id": 5233,
    "label": [
      {
        "start": 42,
        "end": 47,
        "text": "CRT显示",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6657,
    "created_at": "2024-08-16T08:32:31.427782Z",
    "updated_at": "2024-08-16T08:32:31.427782Z",
    "lead_time": 0.446
  },
  {
    "text": "执行所有的逻辑运算，并进行逻辑测试，如零值测试或两个值的比较",
    "id": 5234,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "逻辑运算",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6658,
    "created_at": "2024-08-16T08:32:33.975816Z",
    "updated_at": "2024-08-16T08:32:33.975816Z",
    "lead_time": 1.062
  },
  {
    "text": "还有一种叫“扫描仪”的专用设备，可以直接将纸上的图像转换成数字图像",
    "id": 5235,
    "annotator": 1,
    "annotation_id": 6659,
    "created_at": "2024-08-16T08:32:35.954976Z",
    "updated_at": "2024-08-16T08:32:42.860921Z",
    "lead_time": 4.369
  },
  {
    "text": "在介绍带符号的阵列乘法器基本原理以前，我们先来看看算术运算部件设计中经常用到的求补电路",
    "id": 5236,
    "label": [
      {
        "start": 7,
        "end": 12,
        "text": "阵列乘法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "算术运算",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6660,
    "created_at": "2024-08-16T08:32:45.731332Z",
    "updated_at": "2024-08-16T08:32:45.731976Z",
    "lead_time": 0.953
  },
  {
    "text": "这些情况大大限制了计算机的使用",
    "id": 5237,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6661,
    "created_at": "2024-08-16T08:32:50.155372Z",
    "updated_at": "2024-08-16T08:32:50.155372Z",
    "lead_time": 3.581
  },
  {
    "text": "一般而言，系统中所有的中断向量都按顺序存放在内存指定位置的一张中断向量表中，当CPU识别出某中断源时，由硬件直接产生一个与该中断源对应的中断向量地址，以便能快速在中断向量表中找到并转入中断服务程序入口",
    "id": 5238,
    "label": [
      {
        "start": 39,
        "end": 42,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 46,
        "end": 49,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 62,
        "end": 65,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 72,
        "end": 74,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 52,
        "end": 54,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 35,
        "text": "中断向量",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 68,
        "end": 72,
        "text": "中断向量",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 81,
        "end": 85,
        "text": "中断向量",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 92,
        "end": 98,
        "text": "中断服务程序",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6662,
    "created_at": "2024-08-16T08:33:35.205426Z",
    "updated_at": "2024-08-16T08:33:35.205426Z",
    "lead_time": 44.273
  },
  {
    "text": "启停控制逻辑的核心是一个运行标志触发器Cr",
    "id": 5239,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6663,
    "created_at": "2024-08-16T08:34:53.274252Z",
    "updated_at": "2024-08-16T08:34:53.274252Z",
    "lead_time": 77.262
  },
  {
    "text": "其中阶码E的值等于指数的真值e加上一个固定偏移值",
    "id": 5240,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "真值",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6664,
    "created_at": "2024-08-16T08:34:56.359905Z",
    "updated_at": "2024-08-16T08:34:56.359905Z",
    "lead_time": 2.515
  },
  {
    "text": "思考题你能说出段寻址方式的创新点吗？堆栈寻址堆栈有寄存器堆栈和存储器堆栈两种形式，它们都以先进后出的原理存储数据，如图h所示",
    "id": 5241,
    "label": [
      {
        "start": 31,
        "end": 36,
        "text": "存储器堆栈",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 25,
        "end": 30,
        "text": "寄存器堆栈",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "堆栈",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "堆栈寻址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6665,
    "created_at": "2024-08-16T08:35:13.333751Z",
    "updated_at": "2024-08-16T08:35:13.333751Z",
    "lead_time": 16.17
  },
  {
    "text": "一般的流水计算机因只有一条指令流水线，所以称为标量流水计算机",
    "id": 5242,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "流水计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 25,
        "end": 30,
        "text": "流水计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 13,
        "end": 18,
        "text": "指令流水线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6666,
    "created_at": "2024-08-16T08:35:15.625522Z",
    "updated_at": "2024-08-16T08:35:15.625522Z",
    "lead_time": 1.429
  },
  {
    "text": "然后，它将转移到处理该中断源的中断服务程序",
    "id": 5243,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 21,
        "text": "中断服务程序",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6667,
    "created_at": "2024-08-16T08:35:28.700139Z",
    "updated_at": "2024-08-16T08:35:28.700139Z",
    "lead_time": 6.525
  },
  {
    "text": "表中列出了VESA扩充的标准显示模式",
    "id": 5244,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "VESA",
        "labels": [
          "GRP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6668,
    "created_at": "2024-08-16T08:35:31.527087Z",
    "updated_at": "2024-08-16T08:35:31.527087Z",
    "lead_time": 2.102
  },
  {
    "text": "水平型微指令一次能定义并执行多个并行操作微命令的微指令，称为水平型微指令",
    "id": 5245,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "水平型微指令",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 36,
        "text": "水平型微指令",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6669,
    "created_at": "2024-08-16T08:35:38.109737Z",
    "updated_at": "2024-08-16T08:35:38.109737Z",
    "lead_time": 5.815
  },
  {
    "text": "OC发生操作控制命令，打开指令寄存器IR的输出三态门，将IR中的地址码发送到DBUS上；OC发出操作控制命令，将DBUS上的地址码打入到程序计数器PC中，PC中的原先内容被更换",
    "id": 5246,
    "label": [
      {
        "start": 15,
        "end": 18,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 68,
        "end": 73,
        "text": "程序计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "三态门",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 62,
        "end": 65,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6670,
    "created_at": "2024-08-16T08:36:01.988258Z",
    "updated_at": "2024-08-16T08:36:01.988258Z",
    "lead_time": 22.956
  },
  {
    "text": "通常，程序员把子程序、操作数和常数等不同类型的数据划分到不同的段中，并且每个程序可以有多个相同类型的段",
    "id": 5247,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6671,
    "created_at": "2024-08-16T08:36:12.066488Z",
    "updated_at": "2024-08-16T08:36:12.066488Z",
    "lead_time": 9.257
  },
  {
    "text": "存储器的功能是保存或“记忆”解题的原始数据和解题步骤",
    "id": 5248,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6672,
    "created_at": "2024-08-16T08:36:22.584653Z",
    "updated_at": "2024-08-16T08:36:22.584653Z",
    "lead_time": 1.719
  },
  {
    "text": "闪速存储器的存储密度高，工作速度快，擦除块尺寸较大通常在字节以上，可擦除的次数相对较少NOR闪存为一万到十万次",
    "id": 5249,
    "label": [
      {
        "start": 46,
        "end": 48,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "闪速存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "存储密度",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6673,
    "created_at": "2024-08-16T08:36:25.598020Z",
    "updated_at": "2024-08-16T08:36:25.598020Z",
    "lead_time": 2.472
  },
  {
    "text": "n代表若干片ALU组成更大字长的运算器时每片电路的进位输入，如当片组成位字长的运算器时，n",
    "id": 5250,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "字长",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "字长",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 27,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 35,
        "end": 36,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6674,
    "created_at": "2024-08-16T08:36:29.987468Z",
    "updated_at": "2024-08-16T08:36:29.987468Z",
    "lead_time": 3.716
  },
  {
    "text": "mm磁带与DAT磁带在结构上类似，但是最大存储容量可达GB",
    "id": 5251,
    "label": [
      {
        "start": 21,
        "end": 25,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "GB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6675,
    "created_at": "2024-08-16T08:36:43.771907Z",
    "updated_at": "2024-08-16T08:36:43.772422Z",
    "lead_time": 13.021
  },
  {
    "text": "为了解决数据相关冲突，EX段执行的结果一方面在WB段写回寄存器堆，另一方面经定向传送电路提前传送到ALU，可直接被当前进入EX的指令所使用",
    "id": 5252,
    "label": [
      {
        "start": 28,
        "end": 32,
        "text": "寄存器堆",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 10,
        "text": "数据相关冲突",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 49,
        "end": 52,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 64,
        "end": 66,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6676,
    "created_at": "2024-08-16T08:36:45.726060Z",
    "updated_at": "2024-08-16T08:36:45.726060Z",
    "lead_time": 1.162
  },
  {
    "text": "这样的高速特性特别适合于新型高速硬盘及多媒体数据传送",
    "id": 5253,
    "annotator": 1,
    "annotation_id": 6677,
    "created_at": "2024-08-16T08:36:48.661991Z",
    "updated_at": "2024-08-16T08:36:48.661991Z",
    "lead_time": 2.054
  },
  {
    "text": "注意，DBUS是单总线结构，先送地址，后送数据，必须分时传送",
    "id": 5254,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "单总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6678,
    "created_at": "2024-08-16T08:36:57.006013Z",
    "updated_at": "2024-08-16T08:36:57.006013Z",
    "lead_time": 7.688
  },
  {
    "text": "我们将在下面通过CPU取出一条指令并执行这条指令的分解动作，来具体认识每条指令的指令周期",
    "id": 5255,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 44,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6679,
    "created_at": "2024-08-16T08:37:00.474365Z",
    "updated_at": "2024-08-16T08:37:00.474365Z",
    "lead_time": 2.774
  },
  {
    "text": "思考题多总线结构中“桥”起着何种作用？你怎样看待北桥和南桥？表列出了PCI标准版的必有类信号名称及其功能描述",
    "id": 5256,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "多总线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "PCI",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "北桥",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "南桥",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 11,
        "text": "桥",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6680,
    "created_at": "2024-08-16T08:37:08.246978Z",
    "updated_at": "2024-08-16T08:37:08.246978Z",
    "lead_time": 6.946
  },
  {
    "text": "这台机器用了多个电子管，占地m，重量达吨，而运算速度只有次秒",
    "id": 5257,
    "annotator": 1,
    "annotation_id": 6681,
    "created_at": "2024-08-16T08:37:27.065878Z",
    "updated_at": "2024-08-16T08:37:27.065878Z",
    "lead_time": 18.097
  },
  {
    "text": "指令字长度分为：单字长、半字长、双字长三种形式",
    "id": 5258,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "指令字",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "字长",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "字长",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "字长",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6682,
    "created_at": "2024-08-16T08:37:30.691376Z",
    "updated_at": "2024-08-16T08:37:30.691376Z",
    "lead_time": 3.048
  },
  {
    "text": "存储器写和使无效周期与存储器写周期的区别在于，前者不仅保证一个完整的cache行被写入，而且在总线上广播“无效”信息，命令其他cache中的同一行地址变为无效",
    "id": 5259,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 34,
        "end": 40,
        "text": "cache行",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 63,
        "end": 68,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "存储器写",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 72,
        "end": 75,
        "text": "行地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "广播",
        "labels": [
          "PROT"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6683,
    "created_at": "2024-08-16T08:37:33.240151Z",
    "updated_at": "2024-08-16T08:37:33.240151Z",
    "lead_time": 1.871
  },
  {
    "text": "它是一种密封组合式的硬磁盘，即磁头、盘片、电机等驱动部件乃至读写电路等组装成一个不可随意拆卸的整体",
    "id": 5260,
    "label": [
      {
        "start": 30,
        "end": 34,
        "text": "读写电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "盘片",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6684,
    "created_at": "2024-08-16T08:37:35.019358Z",
    "updated_at": "2024-08-16T08:37:35.019358Z",
    "lead_time": 0.956
  },
  {
    "text": "任何数字计算机的用途很大程度上取决于它所能连接的外围设备的范围",
    "id": 5261,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "数字计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6685,
    "created_at": "2024-08-16T08:37:38.267138Z",
    "updated_at": "2024-08-16T08:37:38.267138Z",
    "lead_time": 2.594
  },
  {
    "text": "其功能是根据测试对象的状态决定是转移到D所指定的微地址单元，还是顺序执行下一条微指令",
    "id": 5262,
    "label": [
      {
        "start": 25,
        "end": 29,
        "text": "地址单元",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6686,
    "created_at": "2024-08-16T08:37:39.663617Z",
    "updated_at": "2024-08-16T08:37:39.663617Z",
    "lead_time": 0.709
  },
  {
    "text": "不同的显示标准所支持的最大分辨率和颜色数目是不同的",
    "id": 5263,
    "annotator": 1,
    "annotation_id": 6687,
    "created_at": "2024-08-16T08:37:41.123962Z",
    "updated_at": "2024-08-16T08:37:41.123962Z",
    "lead_time": 0.796
  },
  {
    "text": "然而在微程序设计的计算机中，节拍电位信号可由微程序控制器提供",
    "id": 5264,
    "label": [
      {
        "start": 22,
        "end": 28,
        "text": "微程序控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 20,
        "text": "节拍电位信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 8,
        "text": "微程序设计",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6688,
    "created_at": "2024-08-16T08:37:42.703347Z",
    "updated_at": "2024-08-16T08:37:42.703347Z",
    "lead_time": 0.819
  },
  {
    "text": "如果CE在地址匹配之前变低，片上的控制逻辑在左、右地址间进行判断来选择端口地址有效判断",
    "id": 5265,
    "label": [
      {
        "start": 5,
        "end": 7,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6689,
    "created_at": "2024-08-16T08:37:44.137654Z",
    "updated_at": "2024-08-16T08:37:44.137654Z",
    "lead_time": 0.797
  },
  {
    "text": "显然，流水技术的应用，使计算机的速度大大提高了",
    "id": 5266,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "流水",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6690,
    "created_at": "2024-08-16T08:37:46.897190Z",
    "updated_at": "2024-08-16T08:37:46.897190Z",
    "lead_time": 2.084
  },
  {
    "text": "指令字长度等于机器字长度的指令，称为单字长指令；指令字长度等于半个机器字长度的指令，称为半字长指令；指令字长度等于两个机器字长度的指令，称为双字长指令",
    "id": 5267,
    "label": [
      {
        "start": 18,
        "end": 23,
        "text": "单字长指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "指令字长度",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 24,
        "end": 29,
        "text": "指令字长度",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 50,
        "end": 55,
        "text": "指令字长度",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "机器字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "机器字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 59,
        "end": 62,
        "text": "机器字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 65,
        "end": 67,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 44,
        "end": 49,
        "text": "半字长指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 70,
        "end": 75,
        "text": "双字长指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6691,
    "created_at": "2024-08-16T08:38:24.854342Z",
    "updated_at": "2024-08-16T08:38:24.854342Z",
    "lead_time": 37.31
  },
  {
    "text": "平均存取时间存取访问时间是从读写指令发出到开始第一笔数据读写时所用的平均时间，包括寻道时间、等待时间及相关的内务操作时间",
    "id": 5268,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "存取时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6692,
    "created_at": "2024-08-16T08:38:27.221034Z",
    "updated_at": "2024-08-16T08:38:27.221034Z",
    "lead_time": 1.471
  },
  {
    "text": "采用直接寻址方式时，指令字中的形式地址A就是操作数的有效地址EA",
    "id": 5269,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "直接寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "有效地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "指令字",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6693,
    "created_at": "2024-08-16T08:38:30.528046Z",
    "updated_at": "2024-08-16T08:38:30.528046Z",
    "lead_time": 2.595
  },
  {
    "text": "监视器只包括扫描、视频放大等与显示有关的电路及显像管",
    "id": 5270,
    "annotator": 1,
    "annotation_id": 6694,
    "created_at": "2024-08-16T08:38:31.729615Z",
    "updated_at": "2024-08-16T08:38:31.729615Z",
    "lead_time": 0.706
  },
  {
    "text": "CPU和IO接口模块的数据交换一定是并行方式；二是和外设的接口",
    "id": 5271,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6695,
    "created_at": "2024-08-16T08:38:32.916977Z",
    "updated_at": "2024-08-16T08:38:32.916977Z",
    "lead_time": 0.65
  },
  {
    "text": "数据缓冲寄存器DR数据缓冲寄存器用来暂时存放ALU的运算结果，或由数据存储器读出的一个数据字，或来自外部接口的一个数据字",
    "id": 5272,
    "label": [
      {
        "start": 0,
        "end": 7,
        "text": "数据缓冲寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 16,
        "text": "数据缓冲寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 39,
        "text": "存储器读",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "数据字",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 57,
        "end": 60,
        "text": "数据字",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 52,
        "end": 54,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6696,
    "created_at": "2024-08-16T08:38:34.191463Z",
    "updated_at": "2024-08-16T08:38:34.191463Z",
    "lead_time": 0.559
  },
  {
    "text": "常用的温盘盘片直径有英寸、英寸、英寸、英寸等几种",
    "id": 5273,
    "label": [
      {
        "start": 5,
        "end": 7,
        "text": "盘片",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6697,
    "created_at": "2024-08-16T08:38:35.704938Z",
    "updated_at": "2024-08-16T08:38:35.704938Z",
    "lead_time": 0.68
  },
  {
    "text": "F说明指令类型，当需要时该字段允许设置不同的指令",
    "id": 5274,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6698,
    "created_at": "2024-08-16T08:38:43.174168Z",
    "updated_at": "2024-08-16T08:38:43.174168Z",
    "lead_time": 6.87
  },
  {
    "text": "如果这条机器指令是STO指令，那么经过P测试，就转向执行STO指令的微程序",
    "id": 5275,
    "label": [
      {
        "start": 9,
        "end": 14,
        "text": "STO指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 28,
        "end": 33,
        "text": "STO指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6699,
    "created_at": "2024-08-16T08:41:29.846242Z",
    "updated_at": "2024-08-16T08:41:29.846242Z",
    "lead_time": 165.997
  },
  {
    "text": "如果不采用这个选项，则在转移指令发射之后的转移延迟时间片内没有任何指令被发射",
    "id": 5276,
    "label": [
      {
        "start": 12,
        "end": 16,
        "text": "转移指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "时间片",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6700,
    "created_at": "2024-08-16T08:41:30.872324Z",
    "updated_at": "2024-08-16T08:41:30.872324Z",
    "lead_time": 0.563
  },
  {
    "text": "表列出了由条指令组成的一个简单程序",
    "id": 5277,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6701,
    "created_at": "2024-08-16T08:41:31.858080Z",
    "updated_at": "2024-08-16T08:41:31.858080Z",
    "lead_time": 0.553
  },
  {
    "text": "在形成位物理地址时，段寄存器中的位数会自动左移位，然后与位偏移量相加，即可形成所需的内存地址，如图所示",
    "id": 5278,
    "label": [
      {
        "start": 4,
        "end": 8,
        "text": "物理地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 46,
        "text": "内存地址",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "偏移量",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "移位",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 3,
        "end": 4,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 17,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 28,
        "end": 29,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6702,
    "created_at": "2024-08-16T08:41:34.308282Z",
    "updated_at": "2024-08-16T08:41:34.308282Z",
    "lead_time": 2.02
  },
  {
    "text": "如果仲裁总线上的号大，则它的总线请求不予响应，并撤销它的仲裁号",
    "id": 5279,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "仲裁总线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "总线请求",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6703,
    "created_at": "2024-08-16T08:41:35.325999Z",
    "updated_at": "2024-08-16T08:41:35.325999Z",
    "lead_time": 0.535
  },
  {
    "text": "这个符号表示一条指令已经执行完毕，转入公操作",
    "id": 5280,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6704,
    "created_at": "2024-08-16T08:41:36.265485Z",
    "updated_at": "2024-08-16T08:41:36.265485Z",
    "lead_time": 0.512
  },
  {
    "text": "在存储器工作过程中既能读出又能写入的半导体存储器称为读写存储器或随机存取存储器RAM",
    "id": 5281,
    "label": [
      {
        "start": 18,
        "end": 24,
        "text": "半导体存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "RAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 32,
        "end": 39,
        "text": "随机存取存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6705,
    "created_at": "2024-08-16T08:41:53.811209Z",
    "updated_at": "2024-08-16T08:41:53.811209Z",
    "lead_time": 17.143
  },
  {
    "text": "例如，RAS、CAS、WE、CS以及特定地址线的不同组合分别代表激活存储体active，所有存储体在读写之前都必须被激活、读、写、预充等不同的命令",
    "id": 5282,
    "label": [
      {
        "start": 34,
        "end": 37,
        "text": "存储体",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "RAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "CAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 46,
        "end": 49,
        "text": "存储体",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6706,
    "created_at": "2024-08-16T08:41:58.051995Z",
    "updated_at": "2024-08-16T08:41:58.051995Z",
    "lead_time": 3.756
  },
  {
    "text": "例如，如果一个进程的虚地址空间为GB，每页的大小为B，则总的虚页数为",
    "id": 5283,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "虚地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "进程",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "GB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 21,
        "text": "页",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "虚页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6707,
    "created_at": "2024-08-16T08:42:05.836235Z",
    "updated_at": "2024-08-16T08:42:05.836235Z",
    "lead_time": 7.319
  },
  {
    "text": "至于“会讲”即输出语言的设备，目前也有高级产品问世",
    "id": 5284,
    "annotator": 1,
    "annotation_id": 6708,
    "created_at": "2024-08-16T08:43:53.137194Z",
    "updated_at": "2024-08-16T08:43:53.137194Z",
    "lead_time": 106.828
  },
  {
    "text": "数字计算机是由若干系统功能部件构成的，这些系统功能部件在一起工作才能形成一个完整的计算机系统",
    "id": 5285,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "数字计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 41,
        "end": 46,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6709,
    "created_at": "2024-08-16T08:43:55.504223Z",
    "updated_at": "2024-08-16T08:43:55.504223Z",
    "lead_time": 1.846
  },
  {
    "text": "这是因为，外围设备传送两个数据之间的间隔一般总是大于内存存储周期，即使高速IO设备也是如此",
    "id": 5286,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "存储周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 37,
        "end": 41,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6710,
    "created_at": "2024-08-16T08:43:59.510975Z",
    "updated_at": "2024-08-16T08:43:59.510975Z",
    "lead_time": 3.42
  },
  {
    "text": "图a表示直接映射方式的示意图，cache假设为行，主存假设为块，故以为模进行映射",
    "id": 5287,
    "label": [
      {
        "start": 25,
        "end": 27,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 10,
        "text": "直接映射方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 20,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6711,
    "created_at": "2024-08-16T08:44:04.387166Z",
    "updated_at": "2024-08-16T08:44:04.387166Z",
    "lead_time": 4.107
  },
  {
    "text": "因此直接映射方式适合于需要大容量cache的场合，更多的行数可以减小冲突的机会",
    "id": 5288,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "直接映射",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 16,
        "end": 21,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6712,
    "created_at": "2024-08-16T08:44:06.581642Z",
    "updated_at": "2024-08-16T08:44:06.581642Z",
    "lead_time": 1.674
  },
  {
    "text": "每次总线操作，只能有一个主方占用总线控制权，但同一时间里可以有一个或多个从方",
    "id": 5289,
    "label": [
      {
        "start": 16,
        "end": 21,
        "text": "总线控制权",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6713,
    "created_at": "2024-08-16T08:44:09.676079Z",
    "updated_at": "2024-08-16T08:44:09.676079Z",
    "lead_time": 2.507
  },
  {
    "text": "计算机系统中，根据应用条件和硬件资源不同，信息的传输方式可采用：并行传送；串行传送；复用传送",
    "id": 5290,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 41,
        "text": "串行传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "并行传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6714,
    "created_at": "2024-08-16T08:44:24.144236Z",
    "updated_at": "2024-08-16T08:44:24.144236Z",
    "lead_time": 13.948
  },
  {
    "text": "因此，现代的许多同步总线都已扩展为半同步总线",
    "id": 5291,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "同步总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "同步总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6715,
    "created_at": "2024-08-16T08:44:30.164680Z",
    "updated_at": "2024-08-16T08:44:30.164680Z",
    "lead_time": 5.469
  },
  {
    "text": "为了避免对主存访问次数增多，可以对页表本身实行二级缓存，把页表中的最活跃部分存放在转换后援缓冲器TLB中",
    "id": 5292,
    "label": [
      {
        "start": 41,
        "end": 48,
        "text": "转换后援缓冲器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 48,
        "end": 51,
        "text": "TLB",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "缓存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6716,
    "created_at": "2024-08-16T08:44:32.889875Z",
    "updated_at": "2024-08-16T08:44:32.889875Z",
    "lead_time": 2.131
  },
  {
    "text": "测试条件字段有位，可规定种测试条件",
    "id": 5293,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 8,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6717,
    "created_at": "2024-08-16T08:44:37.392033Z",
    "updated_at": "2024-08-16T08:44:37.392033Z",
    "lead_time": 3.901
  },
  {
    "text": "如果所有的外设都接在一个通道上，那么通道将成为限制系统效能的瓶颈",
    "id": 5294,
    "label": [
      {
        "start": 5,
        "end": 7,
        "text": "外设",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6718,
    "created_at": "2024-08-16T08:44:41.099354Z",
    "updated_at": "2024-08-16T08:44:41.099354Z",
    "lead_time": 3.21
  },
  {
    "text": "对应异步DRAM的CAS有效低",
    "id": 5295,
    "label": [
      {
        "start": 2,
        "end": 8,
        "text": "异步DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "CAS",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6719,
    "created_at": "2024-08-16T08:44:45.087268Z",
    "updated_at": "2024-08-16T08:44:45.087268Z",
    "lead_time": 3.526
  },
  {
    "text": "以上是中断处理的大致过程，但是有一些问题需要进一步加以说明",
    "id": 5296,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6720,
    "created_at": "2024-08-16T08:44:46.794267Z",
    "updated_at": "2024-08-16T08:44:46.794267Z",
    "lead_time": 1.173
  },
  {
    "text": "硬布线控制器是计算机中最复杂的逻辑部件之一",
    "id": 5297,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "硬布线控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6721,
    "created_at": "2024-08-16T08:44:52.263091Z",
    "updated_at": "2024-08-16T08:44:52.263091Z",
    "lead_time": 4.905
  },
  {
    "text": "因此对子任务的划分，是决定流水线性能的一个关键因素，它取决于操作部分的效率、所期望的处理速度，以及成本价格等",
    "id": 5298,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6722,
    "created_at": "2024-08-16T08:45:19.787989Z",
    "updated_at": "2024-08-16T08:45:19.787989Z",
    "lead_time": 26.969
  },
  {
    "text": "在独立请求方式中，每一个共享总线的设备均有一对总线请求线BRi和总线授权线BGi",
    "id": 5299,
    "label": [
      {
        "start": 1,
        "end": 7,
        "text": "独立请求方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "总线请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6723,
    "created_at": "2024-08-16T08:45:26.834039Z",
    "updated_at": "2024-08-16T08:45:26.834039Z",
    "lead_time": 6.473
  },
  {
    "text": "因此，对端口的连续访问必须确保信息的有效性",
    "id": 5300,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6724,
    "created_at": "2024-08-16T08:45:28.232506Z",
    "updated_at": "2024-08-16T08:45:28.232506Z",
    "lead_time": 0.838
  },
  {
    "text": "只有前面的所有指令执行完，这条指令才到达队首",
    "id": 5301,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6725,
    "created_at": "2024-08-16T08:45:31.238296Z",
    "updated_at": "2024-08-16T08:45:31.238296Z",
    "lead_time": 2.485
  },
  {
    "text": "顺序控制部分由于判别字段中P为，表明进行P测试，测试的“状态条件”为进位标志Cy",
    "id": 5302,
    "label": [
      {
        "start": 34,
        "end": 38,
        "text": "进位标志",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6726,
    "created_at": "2024-08-16T08:45:38.456488Z",
    "updated_at": "2024-08-16T08:45:38.456488Z",
    "lead_time": 6.672
  },
  {
    "text": "为了减少内部数据传送线并便于控制，通常将一些寄存器之间数据传送的通路加以归并，组成总线结构，使不同来源的信息在此传输线上分时传送",
    "id": 5303,
    "label": [
      {
        "start": 22,
        "end": 25,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6727,
    "created_at": "2024-08-16T08:45:40.086522Z",
    "updated_at": "2024-08-16T08:45:40.086522Z",
    "lead_time": 1.093
  },
  {
    "text": "状态信息包括数据“准备就绪”“忙”“错误”等，供CPU询问外围设备时进行分析之用",
    "id": 5304,
    "label": [
      {
        "start": 24,
        "end": 27,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6728,
    "created_at": "2024-08-16T08:45:41.494245Z",
    "updated_at": "2024-08-16T08:45:41.494245Z",
    "lead_time": 0.865
  },
  {
    "text": "而该物理地址所在的主存空间可能已经被调入cache中，也可能还在主存中，甚至还有可能在辅存中",
    "id": 5305,
    "label": [
      {
        "start": 20,
        "end": 25,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "主存空间",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "物理地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6729,
    "created_at": "2024-08-16T08:45:43.613361Z",
    "updated_at": "2024-08-16T08:45:43.613361Z",
    "lead_time": 1.489
  },
  {
    "text": "时间并行指时间重叠，在并行性概念中引入时间因素，让多个处理过程在时间上相互错开，轮流重叠地使用同一套硬件设备的各个部分，以加快硬件周转而赢得速度",
    "id": 5306,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "时间并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "并行性",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 63,
        "end": 65,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6730,
    "created_at": "2024-08-16T08:45:44.807044Z",
    "updated_at": "2024-08-16T08:45:44.807044Z",
    "lead_time": 0.465
  },
  {
    "text": "磁盘和光盘的共同特点是存储容量大，储存的信息不易丢失",
    "id": 5307,
    "label": [
      {
        "start": 11,
        "end": 15,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6731,
    "created_at": "2024-08-16T08:45:45.666027Z",
    "updated_at": "2024-08-16T08:45:45.666027Z",
    "lead_time": 0.289
  },
  {
    "text": "假定“十进制加法”指令的操作码为，那么指令寄存器的OP字段现在是",
    "id": 5308,
    "label": [
      {
        "start": 21,
        "end": 24,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "OP",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6732,
    "created_at": "2024-08-16T08:45:46.606189Z",
    "updated_at": "2024-08-16T08:45:46.606189Z",
    "lead_time": 0.326
  },
  {
    "text": "然而CPU却能识别这些二进制代码：它能准确地判别出哪些是指令字，哪些是数据字，并将它们送往相应的部件",
    "id": 5309,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "数据字",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "指令字",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6733,
    "created_at": "2024-08-16T08:45:48.398359Z",
    "updated_at": "2024-08-16T08:45:48.398359Z",
    "lead_time": 1.151
  },
  {
    "text": "微指令是微程序级的命令，它属于硬件；宏指令是由若干条机器指令组成的软件指令，它属于软件；而机器指令则介于微指令与宏指令之间，通常简称为指令，每一条指令可完成一个独立的算术运算或逻辑运算操作",
    "id": 5310,
    "label": [
      {
        "start": 15,
        "end": 17,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "软件指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 83,
        "end": 87,
        "text": "算术运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 45,
        "end": 49,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 88,
        "end": 92,
        "text": "逻辑运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 52,
        "end": 55,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 57,
        "end": 59,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 67,
        "end": 69,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 73,
        "end": 75,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6734,
    "created_at": "2024-08-16T08:45:53.316001Z",
    "updated_at": "2024-08-16T08:45:53.316001Z",
    "lead_time": 4.313
  },
  {
    "text": "图中用虚线围住的阵列中最后一行构成了一个行波进位加法器，其求和时间延迟为nTT异或门",
    "id": 5311,
    "label": [
      {
        "start": 39,
        "end": 42,
        "text": "异或门",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 27,
        "text": "行波进位加法器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6735,
    "created_at": "2024-08-16T08:45:56.881685Z",
    "updated_at": "2024-08-16T08:45:56.881685Z",
    "lead_time": 2.856
  },
  {
    "text": "总线周期的长度是可变的",
    "id": 5312,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "总线周期",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6736,
    "created_at": "2024-08-16T08:45:58.926560Z",
    "updated_at": "2024-08-16T08:46:07.300294Z",
    "lead_time": 7.767
  },
  {
    "text": "因此，当某个操作数或某条指令存放在某个存储单元时，其存储单元的编号，就是该操作数或指令在存储器中的地址",
    "id": 5313,
    "label": [
      {
        "start": 19,
        "end": 23,
        "text": "存储单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "存储单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 44,
        "end": 47,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6737,
    "created_at": "2024-08-16T08:46:19.283018Z",
    "updated_at": "2024-08-16T08:46:19.283018Z",
    "lead_time": 9.935
  },
  {
    "text": "行与块是等长的，每个块行由kw个连续的字组成，字是CPU每次访问存储器时可存取的最小单位",
    "id": 5314,
    "label": [
      {
        "start": 32,
        "end": 35,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 20,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6738,
    "created_at": "2024-08-16T08:46:27.889286Z",
    "updated_at": "2024-08-16T08:46:27.889286Z",
    "lead_time": 7.982
  },
  {
    "text": "一般来说，超级计算机主要用于科学计算，其运算速度在每秒万亿次以上，数据存储容量很大，结构复杂，价格昂贵",
    "id": 5315,
    "label": [
      {
        "start": 5,
        "end": 10,
        "text": "超级计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 35,
        "end": 39,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6739,
    "created_at": "2024-08-16T08:47:14.063152Z",
    "updated_at": "2024-08-16T08:47:14.063152Z",
    "lead_time": 45.576
  },
  {
    "text": "第章存储系统在T时钟的上升沿处，读命令和列地址被锁存，表明当前是一次读操作",
    "id": 5316,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "存储系统",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "读操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "列地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6740,
    "created_at": "2024-08-16T08:47:17.299224Z",
    "updated_at": "2024-08-16T08:47:17.300233Z",
    "lead_time": 2.612
  },
  {
    "text": "但此时是否将修改过的主存块取到cache，有两种选择方法：一种称为WTWA法，取主存块到cache并为它分配一个行位置；另一种称为WTNWA法，不取主存块到cache",
    "id": 5317,
    "label": [
      {
        "start": 15,
        "end": 20,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 44,
        "end": 49,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 78,
        "end": 83,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "主存块",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "主存块",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 74,
        "end": 77,
        "text": "主存块",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6741,
    "created_at": "2024-08-16T08:47:25.555136Z",
    "updated_at": "2024-08-16T08:47:25.555136Z",
    "lead_time": 7.606
  },
  {
    "text": "RESET信号为低时为硬件复位",
    "id": 5318,
    "label": [
      {
        "start": 11,
        "end": 13,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6742,
    "created_at": "2024-08-16T08:47:29.640021Z",
    "updated_at": "2024-08-16T08:47:29.640021Z",
    "lead_time": 3.472
  },
  {
    "text": "通道的基本功能是执行通道指令，组织外围设备和内存进行数据传输，按IO指令要求启动外围设备，向CPU报告中断等，具体有以下五项任务",
    "id": 5319,
    "label": [
      {
        "start": 17,
        "end": 21,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 40,
        "end": 44,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 46,
        "end": 49,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 51,
        "end": 53,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6743,
    "created_at": "2024-08-16T08:47:39.634905Z",
    "updated_at": "2024-08-16T08:47:39.634905Z",
    "lead_time": 9.389
  },
  {
    "text": "为了使存储器的存取时间能与流水线的其他各过程段的速度相匹配，一般都采用多体交叉存储器",
    "id": 5320,
    "label": [
      {
        "start": 35,
        "end": 42,
        "text": "多体交叉存储器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "存取时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6744,
    "created_at": "2024-08-16T08:48:40.477225Z",
    "updated_at": "2024-08-16T08:48:40.477225Z",
    "lead_time": 60.241
  },
  {
    "text": "而机器字长是指计算机能直接处理的二进制数据的位数，它决定了计算机的运算精度",
    "id": 5321,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "机器字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 23,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6745,
    "created_at": "2024-08-16T08:48:44.053450Z",
    "updated_at": "2024-08-16T08:48:44.053450Z",
    "lead_time": 2.956
  },
  {
    "text": "时序信号产生器提供CPU周期也称机器周期所需的时序信号",
    "id": 5322,
    "label": [
      {
        "start": 0,
        "end": 7,
        "text": "时序信号产生器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 14,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "时序信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "机器周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6746,
    "created_at": "2024-08-16T08:48:47.558082Z",
    "updated_at": "2024-08-16T08:48:47.558082Z",
    "lead_time": 2.89
  },
  {
    "text": "图示出了一种语音输入输出设备的原理方框图",
    "id": 5323,
    "label": [
      {
        "start": 8,
        "end": 14,
        "text": "输入输出设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6747,
    "created_at": "2024-08-16T08:48:49.681423Z",
    "updated_at": "2024-08-16T08:48:49.681423Z",
    "lead_time": 1.549
  },
  {
    "text": "新行调入后从开始计数，每访问一次，被访行的计数器增",
    "id": 5324,
    "label": [
      {
        "start": 21,
        "end": 24,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6748,
    "created_at": "2024-08-16T08:48:51.138250Z",
    "updated_at": "2024-08-16T08:48:51.138250Z",
    "lead_time": 0.93
  },
  {
    "text": "最高符号位永远表示结果的正确符号",
    "id": 5325,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6749,
    "created_at": "2024-08-16T08:49:13.597161Z",
    "updated_at": "2024-08-16T08:49:13.597161Z",
    "lead_time": 21.898
  },
  {
    "text": "数组多路通道不仅在物理上可以连接多个设备，而且在一段时间内能交替执行多个设备的通道程序，换句话说在逻辑上可以连接多个设备，这些设备应是高速设备",
    "id": 5326,
    "label": [
      {
        "start": 41,
        "end": 43,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6750,
    "created_at": "2024-08-16T08:49:15.529873Z",
    "updated_at": "2024-08-16T08:49:15.529873Z",
    "lead_time": 1.428
  },
  {
    "text": "进入过程如图a所示",
    "id": 5327,
    "annotator": 1,
    "annotation_id": 6751,
    "created_at": "2024-08-16T08:49:17.207603Z",
    "updated_at": "2024-08-16T08:49:17.207603Z",
    "lead_time": 1.178
  },
  {
    "text": "CPU在适当的时刻响应DMA请求",
    "id": 5328,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6752,
    "created_at": "2024-08-16T08:49:27.359139Z",
    "updated_at": "2024-08-16T08:49:27.359139Z",
    "lead_time": 9.655
  },
  {
    "text": "例如，奔腾CPU采用了超标量流水技术，在一个机器周期中同时执行两条指令，因而既具有时间并行性，又具有空间并行性",
    "id": 5329,
    "label": [
      {
        "start": 11,
        "end": 18,
        "text": "超标量流水技术",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 41,
        "end": 45,
        "text": "时间并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "机器周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 50,
        "end": 54,
        "text": "空间并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6753,
    "created_at": "2024-08-16T08:49:29.356042Z",
    "updated_at": "2024-08-16T08:49:29.356042Z",
    "lead_time": 1.433
  },
  {
    "text": "对直接映射的cache来说，因一个主存块只有一个特定的行位置可存放，所以解决问题很简单，只要把此特定位置上的原主存块换出cache即可",
    "id": 5330,
    "label": [
      {
        "start": 17,
        "end": 20,
        "text": "主存块",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 11,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 60,
        "end": 65,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "直接映射",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 55,
        "end": 58,
        "text": "主存块",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6754,
    "created_at": "2024-08-16T08:50:03.470155Z",
    "updated_at": "2024-08-16T08:50:03.470155Z",
    "lead_time": 33.363
  },
  {
    "text": "清除以后的鼓表面又继续重复上述的充电、曝光、显影、转印、定影等一系列过程",
    "id": 5331,
    "annotator": 1,
    "annotation_id": 6755,
    "created_at": "2024-08-16T08:50:05.068410Z",
    "updated_at": "2024-08-16T08:50:05.068410Z",
    "lead_time": 0.967
  },
  {
    "text": "汇编语言依赖于计算机的硬件结构和指令系统",
    "id": 5332,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "汇编语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6756,
    "created_at": "2024-08-16T08:50:06.946211Z",
    "updated_at": "2024-08-16T08:50:06.946211Z",
    "lead_time": 1.329
  },
  {
    "text": "总线周期长度由周期类型和nFRAME帧、nIRDY主就绪、nTRDY目标就绪、nSTOP停止等信号控制",
    "id": 5333,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "总线周期",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6757,
    "created_at": "2024-08-16T08:50:14.237670Z",
    "updated_at": "2024-08-16T08:50:20.580299Z",
    "lead_time": 11.368
  },
  {
    "text": "它通过采用优先级策略或公平策略，选择其中一个主设备作为总线的下一次主方，接管总线控制权",
    "id": 5334,
    "label": [
      {
        "start": 22,
        "end": 25,
        "text": "主设备",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 43,
        "text": "总线控制权",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "优先级",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6758,
    "created_at": "2024-08-16T08:50:29.823260Z",
    "updated_at": "2024-08-16T08:50:29.823260Z",
    "lead_time": 7.71
  },
  {
    "text": "因此，当流水线满载时，每一个时钟周期就可以输出一个结果",
    "id": 5335,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6759,
    "created_at": "2024-08-16T08:50:43.882050Z",
    "updated_at": "2024-08-16T08:50:43.882050Z",
    "lead_time": 13.503
  },
  {
    "text": "由于多条指令的重叠处理，当后继指令所需的操作数，刚好是前一指令的运算结果时，便发生“先读后写”的数据相关冲突",
    "id": 5336,
    "label": [
      {
        "start": 48,
        "end": 54,
        "text": "数据相关冲突",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6760,
    "created_at": "2024-08-16T08:50:51.765759Z",
    "updated_at": "2024-08-16T08:50:51.765759Z",
    "lead_time": 7.357
  },
  {
    "text": "例如，规定一组中的A行复制进新数据可将此位置“”，B行复制进新数据可将此位置“”",
    "id": 5337,
    "annotator": 1,
    "annotation_id": 6761,
    "created_at": "2024-08-16T08:50:57.616519Z",
    "updated_at": "2024-08-16T08:50:57.616519Z",
    "lead_time": 5.305
  },
  {
    "text": "二模块交叉存储器举例图表示二模块交叉存储器方框图",
    "id": 5338,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "交叉存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 21,
        "text": "交叉存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6762,
    "created_at": "2024-08-16T08:54:35.767195Z",
    "updated_at": "2024-08-16T08:54:35.767195Z",
    "lead_time": 217.505
  },
  {
    "text": "多数情况下，对指令中操作数的引用必须完成某种计算，才能确定它们在主存中的有效地址",
    "id": 5339,
    "label": [
      {
        "start": 36,
        "end": 40,
        "text": "有效地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6763,
    "created_at": "2024-08-16T08:54:38.608503Z",
    "updated_at": "2024-08-16T08:54:38.608503Z",
    "lead_time": 1.895
  },
  {
    "text": "一般说来，优先权高的中断级可以打断优先权低的中断服务程序，以程序嵌套方式进行工作",
    "id": 5340,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6764,
    "created_at": "2024-08-16T08:54:43.621106Z",
    "updated_at": "2024-08-16T08:54:43.621106Z",
    "lead_time": 3.682
  },
  {
    "text": "动态微程序设计微程序设计技术还有静态微程序设计和动态微程序设计之分",
    "id": 5341,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 24,
        "end": 29,
        "text": "动态微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 7,
        "end": 12,
        "text": "微程序设计",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 18,
        "end": 23,
        "text": "微程序设计",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6765,
    "created_at": "2024-08-16T08:55:16.589423Z",
    "updated_at": "2024-08-16T08:55:16.589423Z",
    "lead_time": 31.979
  },
  {
    "text": "为此，操作的控制要分两步来完成：第一步，在ALU的两个输入端输入操作数，形成结果并送入缓冲寄存器；第二步，把结果送入目的寄存器",
    "id": 5342,
    "label": [
      {
        "start": 43,
        "end": 48,
        "text": "缓冲寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 60,
        "end": 63,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6766,
    "created_at": "2024-08-16T08:55:27.502962Z",
    "updated_at": "2024-08-16T08:55:27.503185Z",
    "lead_time": 10.045
  },
  {
    "text": "用汇编语言编写的程序，可作为高级语言的一个外部过程或函数，利用堆栈来传递参数或参数的地址",
    "id": 5343,
    "label": [
      {
        "start": 31,
        "end": 33,
        "text": "堆栈",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "汇编语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "高级语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6767,
    "created_at": "2024-08-16T08:55:44.443176Z",
    "updated_at": "2024-08-16T08:55:44.443176Z",
    "lead_time": 16.199
  },
  {
    "text": "目标方采样到nFRAME信号已变为无效时，即知道下一数据传送是最后一个数据期",
    "id": 5344,
    "label": [
      {
        "start": 35,
        "end": 38,
        "text": "数据期",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6768,
    "created_at": "2024-08-16T08:56:01.681237Z",
    "updated_at": "2024-08-16T08:56:01.681237Z",
    "lead_time": 16.433
  },
  {
    "text": "传统的DRAM是异步工作的，处理器送地址和控制信号到存储器后，等待存储器进行内部操作选择行线和列线读出信号放大并送输出缓冲器等，处理器需等待一段存取延时时间后才能存取数据，因而必须消耗较长时间以确保数据传输可靠，影响了系统性能",
    "id": 5345,
    "label": [
      {
        "start": 59,
        "end": 62,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 64,
        "end": 67,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6769,
    "created_at": "2024-08-16T08:56:29.965644Z",
    "updated_at": "2024-08-16T08:56:29.965644Z",
    "lead_time": 27.38
  },
  {
    "text": "EI为“”时，某设备可以向CPU发出中断请求；EI为“”时，不能向CPU发出中断请求，这意味着某中断源的中断请求被禁止",
    "id": 5346,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 48,
        "end": 51,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 38,
        "end": 42,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 52,
        "end": 56,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6770,
    "created_at": "2024-08-16T08:56:48.860766Z",
    "updated_at": "2024-08-16T08:56:48.860766Z",
    "lead_time": 17.547
  },
  {
    "text": "指令功能简单，控制器多采用硬布线方式，以期更快的执行速度",
    "id": 5347,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6771,
    "created_at": "2024-08-16T08:57:31.435045Z",
    "updated_at": "2024-08-16T08:57:31.435045Z",
    "lead_time": 41.66
  },
  {
    "text": "每个微命令的编号同图所示的数据通路相对应，具体功能示于微指令格式的左上部",
    "id": 5348,
    "label": [
      {
        "start": 27,
        "end": 30,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "数据通路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6772,
    "created_at": "2024-08-16T08:57:52.956543Z",
    "updated_at": "2024-08-16T08:57:52.956543Z",
    "lead_time": 20.754
  },
  {
    "text": "这里被除数x是一个位的小数双倍长数值：xxxxxxx它是由顶部一行和最右边的对角线上的垂直输入线来提供的",
    "id": 5349,
    "label": [
      {
        "start": 9,
        "end": 10,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6773,
    "created_at": "2024-08-16T08:58:21.571042Z",
    "updated_at": "2024-08-16T08:58:21.571042Z",
    "lead_time": 27.933
  },
  {
    "text": "还有的计算机在中断向量表中存放的不是中断服务程序入口地址，而是一条转移到中断服务程序入口地址的转移指令的指令字",
    "id": 5350,
    "label": [
      {
        "start": 47,
        "end": 51,
        "text": "转移指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 52,
        "end": 55,
        "text": "指令字",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "中断向量",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 36,
        "end": 42,
        "text": "中断服务程序",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6774,
    "created_at": "2024-08-16T09:00:08.716716Z",
    "updated_at": "2024-08-16T09:00:08.716716Z",
    "lead_time": 106.346
  },
  {
    "text": "这样，ai以右的每一个输入位，包括ai自己，都保持不变，而ai以左的每一个输入位都求反，即变，变",
    "id": 5351,
    "label": [
      {
        "start": 13,
        "end": 14,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 39,
        "end": 40,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6775,
    "created_at": "2024-08-16T09:00:12.472755Z",
    "updated_at": "2024-08-16T09:00:12.473766Z",
    "lead_time": 2.957
  },
  {
    "text": "这种原理和调用子程序相仿，不过，这里要求转移到中断服务程序的请求是由外部设备发出的",
    "id": 5352,
    "label": [
      {
        "start": 34,
        "end": 38,
        "text": "外部设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6776,
    "created_at": "2024-08-16T09:00:16.489942Z",
    "updated_at": "2024-08-16T09:00:16.489942Z",
    "lead_time": 3.29
  },
  {
    "text": "该标志置位后向“控制状态”逻辑发出DMA请求，后者又向CPU发出总线使用权的请求HOLD，CPU响应此请求后发回响应信号HLDA，“控制状态”逻辑接收此信号后发出DMA响应信号，使“DMA请求”标志复位，为交换下一个字做好准备",
    "id": 5353,
    "label": [
      {
        "start": 32,
        "end": 37,
        "text": "总线使用权",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 81,
        "end": 84,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 91,
        "end": 94,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 5,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 108,
        "end": 109,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6777,
    "created_at": "2024-08-16T09:00:25.708334Z",
    "updated_at": "2024-08-16T09:00:25.708334Z",
    "lead_time": 8.592
  },
  {
    "text": "在这种逻辑结构中，共使用了三个求补器",
    "id": 5354,
    "label": [
      {
        "start": 15,
        "end": 18,
        "text": "求补器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6778,
    "created_at": "2024-08-16T09:00:29.028812Z",
    "updated_at": "2024-08-16T09:00:29.028812Z",
    "lead_time": 2.193
  },
  {
    "text": "上述IO指令如用汇编语言写出，指令“DOAS”表示把CPU中R的内容输出到号设备的A数据缓冲寄存器中，同时启动号设备工作",
    "id": 5355,
    "label": [
      {
        "start": 42,
        "end": 49,
        "text": "数据缓冲寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "汇编语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6779,
    "created_at": "2024-08-16T09:01:30.302543Z",
    "updated_at": "2024-08-16T09:01:30.302543Z",
    "lead_time": 60.578
  },
  {
    "text": "与中断方式相比，需要更多的硬件",
    "id": 5356,
    "label": [
      {
        "start": 13,
        "end": 15,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "中断方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6780,
    "created_at": "2024-08-16T09:01:33.322692Z",
    "updated_at": "2024-08-16T09:01:33.322692Z",
    "lead_time": 2.38
  },
  {
    "text": "总线宽度一般指CPU中运算器与存储器之间进行互连的内部总线二进制位数",
    "id": 5357,
    "label": [
      {
        "start": 29,
        "end": 33,
        "text": "二进制位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "内部总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "总线宽度",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6781,
    "created_at": "2024-08-16T09:01:35.873296Z",
    "updated_at": "2024-08-16T09:01:35.873756Z",
    "lead_time": 1.868
  },
  {
    "text": "最后一条指令返回主程序断点m",
    "id": 5358,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6782,
    "created_at": "2024-08-16T09:01:39.570812Z",
    "updated_at": "2024-08-16T09:01:39.570812Z",
    "lead_time": 2.941
  },
  {
    "text": "一个节拍电位表示一个CPU周期的时间，它表示了一个较大的时间单位；在一个节拍电位中又包含若干个节拍脉冲，以表示较小的时间单位；而主状态周期可包含若干个节拍电位，所以它是最大的时间单位",
    "id": 5359,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "节拍电位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 15,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 47,
        "end": 51,
        "text": "节拍脉冲",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 36,
        "end": 40,
        "text": "节拍电位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 75,
        "end": 79,
        "text": "节拍电位",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6783,
    "created_at": "2024-08-16T09:01:46.226107Z",
    "updated_at": "2024-08-16T09:01:46.226107Z",
    "lead_time": 5.888
  },
  {
    "text": "这种子系统可以单独使用，也可以联到通用计算机系统",
    "id": 5360,
    "label": [
      {
        "start": 19,
        "end": 24,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6784,
    "created_at": "2024-08-16T09:02:00.583689Z",
    "updated_at": "2024-08-16T09:02:00.583689Z",
    "lead_time": 13.543
  },
  {
    "text": "但是高级语言程序“看不见”机器的硬件结构，因而不能用它来编写直接访问机器硬件资源如某个寄存器或存储器单元的系统软件或设备控制软件",
    "id": 5361,
    "label": [
      {
        "start": 2,
        "end": 8,
        "text": "高级语言程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 53,
        "end": 57,
        "text": "系统软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 47,
        "end": 50,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 62,
        "end": 64,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6785,
    "created_at": "2024-08-16T09:02:11.755769Z",
    "updated_at": "2024-08-16T09:02:11.755769Z",
    "lead_time": 10.528
  },
  {
    "text": "为便于理解，先讲一个例子，假设幼儿园一个阿姨带个孩子，要给每个孩子分块水果糖",
    "id": 5362,
    "annotator": 1,
    "annotation_id": 6786,
    "created_at": "2024-08-16T09:02:14.016763Z",
    "updated_at": "2024-08-16T09:02:14.016763Z",
    "lead_time": 1.649
  },
  {
    "text": "因此，存储器存储的也全是或表示的二进制代码",
    "id": 5363,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6787,
    "created_at": "2024-08-16T09:02:16.251897Z",
    "updated_at": "2024-08-16T09:02:16.251897Z",
    "lead_time": 1.529
  },
  {
    "text": "多路型DMA控制器选择型DMA控制器不适用于慢速设备",
    "id": 5364,
    "label": [
      {
        "start": 3,
        "end": 9,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 18,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6788,
    "created_at": "2024-08-16T09:02:18.277323Z",
    "updated_at": "2024-08-16T09:02:18.277323Z",
    "lead_time": 1.305
  },
  {
    "text": "EX段对于大多数指令只需一个时钟周期，某些指令可能多于一个时钟周期",
    "id": 5365,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6789,
    "created_at": "2024-08-16T09:02:20.908731Z",
    "updated_at": "2024-08-16T09:02:20.908731Z",
    "lead_time": 1.857
  },
  {
    "text": "先进的显示控制器具有图形加速能力",
    "id": 5366,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "显示控制器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6790,
    "created_at": "2024-08-16T09:02:22.755122Z",
    "updated_at": "2024-08-16T09:02:22.756104Z",
    "lead_time": 1.177
  },
  {
    "text": "数字照相机的出现，更容易组成一个图像处理系统",
    "id": 5367,
    "label": [
      {
        "start": 16,
        "end": 20,
        "text": "图像处理",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6791,
    "created_at": "2024-08-16T09:02:34.459027Z",
    "updated_at": "2024-08-16T09:02:34.459027Z",
    "lead_time": 10.95
  },
  {
    "text": "所谓相斥性的微操作，是指不能在同时或不能在同一个CPU周期内并行执行的微操作",
    "id": 5368,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "微操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "微操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 29,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6792,
    "created_at": "2024-08-16T09:02:38.236265Z",
    "updated_at": "2024-08-16T09:03:46.340979Z",
    "lead_time": 68.27499999999999
  },
  {
    "text": "图所示为存储器的结构示意图",
    "id": 5369,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6793,
    "created_at": "2024-08-16T09:03:52.458022Z",
    "updated_at": "2024-08-16T09:03:52.458022Z",
    "lead_time": 2.827
  },
  {
    "text": "二进制数和十进制数一样，在运算中，当数的位数越多时，计算的精度就越高",
    "id": 5370,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 21,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6794,
    "created_at": "2024-08-16T09:04:02.899935Z",
    "updated_at": "2024-08-16T09:04:02.899935Z",
    "lead_time": 9.085
  },
  {
    "text": "向量中断向量中断是指CPU响应中断后，由中断机构自动将相应中断源的中断向量地址送入CPU，由其指明中断服务程序入口地址并实现程序切换的中断方式",
    "id": 5371,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 67,
        "end": 71,
        "text": "中断方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 41,
        "end": 44,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 62,
        "end": 64,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 57,
        "end": 59,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "向量中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "向量中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "中断向量",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 49,
        "end": 55,
        "text": "中断服务程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6795,
    "created_at": "2024-08-16T09:04:24.157937Z",
    "updated_at": "2024-08-16T09:04:24.157937Z",
    "lead_time": 20.384
  },
  {
    "text": "被查询设备的先后次序由查询程序决定，图中以、、、为序",
    "id": 5372,
    "label": [
      {
        "start": 13,
        "end": 15,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6796,
    "created_at": "2024-08-16T09:04:26.710753Z",
    "updated_at": "2024-08-16T09:04:26.710753Z",
    "lead_time": 1.733
  },
  {
    "text": "对非流水计算机来说，上一条指令的四个子过程全部执行完毕后才能开始下一条指令",
    "id": 5373,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "流水计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6797,
    "created_at": "2024-08-16T09:04:29.448628Z",
    "updated_at": "2024-08-16T09:04:29.448628Z",
    "lead_time": 2.121
  },
  {
    "text": "另外，DRAM芯片的读出是一种破坏性读出，因此在读取之后要立即按读出信息予以充电再生",
    "id": 5374,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6798,
    "created_at": "2024-08-16T09:07:23.117828Z",
    "updated_at": "2024-08-16T09:07:23.117828Z",
    "lead_time": 172.89
  },
  {
    "text": "非击打式的设备速度快，噪声低，印字质量高，但价格较贵，有的设备还需要专用纸张",
    "id": 5375,
    "label": [
      {
        "start": 11,
        "end": 13,
        "text": "噪声",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6799,
    "created_at": "2024-08-16T09:07:33.815569Z",
    "updated_at": "2024-08-16T09:07:33.815569Z",
    "lead_time": 3.044
  },
  {
    "text": "存储容量一个磁盘存储器所能存储的字节总数，称为磁盘存储器的存储容量",
    "id": 5376,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 6,
        "end": 11,
        "text": "磁盘存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 23,
        "end": 28,
        "text": "磁盘存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6800,
    "created_at": "2024-08-16T09:07:57.460832Z",
    "updated_at": "2024-08-16T09:07:57.460832Z",
    "lead_time": 22.992
  },
  {
    "text": "x补nx，y补ny所以x补y补nxnynnxyxy补modn式说明，在模n意义下，任意两数的补码之和等于该两数之和的补码",
    "id": 5377,
    "label": [
      {
        "start": 46,
        "end": 48,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 58,
        "end": 60,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6801,
    "created_at": "2024-08-16T09:08:00.468778Z",
    "updated_at": "2024-08-16T09:08:00.468778Z",
    "lead_time": 2.242
  },
  {
    "text": "指令系统是表征一台计算机性能的重要因素，它的格式与功能不仅直接影响到机器的硬件结构，而且影响到系统软件",
    "id": 5378,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 47,
        "end": 51,
        "text": "系统软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6802,
    "created_at": "2024-08-16T09:08:04.321928Z",
    "updated_at": "2024-08-16T09:08:04.321928Z",
    "lead_time": 3.174
  },
  {
    "text": "由于指令和数据放在同一个存储器，称为冯诺依曼结构；如果指令和数据分别放在两个存储器，称为哈佛结构",
    "id": 5379,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6803,
    "created_at": "2024-08-16T09:09:44.743970Z",
    "updated_at": "2024-08-16T09:09:44.743970Z",
    "lead_time": 99.79
  },
  {
    "text": "例如，通用寄存器Ri中的数存入主存；通用寄存器Ri中的数送到另一通用寄存器Rj；从主存中取数至通用寄存器Ri；寄存器清零或主存单元清零等",
    "id": 5380,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 23,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 37,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 47,
        "end": 52,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 61,
        "end": 65,
        "text": "主存单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 55,
        "end": 58,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6804,
    "created_at": "2024-08-16T09:09:47.279016Z",
    "updated_at": "2024-08-16T09:09:47.279016Z",
    "lead_time": 1.884
  },
  {
    "text": "基于三要素的RISC机器的特征如下",
    "id": 5381,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "RISC",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6805,
    "created_at": "2024-08-16T09:09:49.373988Z",
    "updated_at": "2024-08-16T09:09:49.373988Z",
    "lead_time": 1.369
  },
  {
    "text": "NOR闪存可在线“写入”数据，又具有ROM的非易失性，因而可以取代全部的UVEPROM和大部分的EPROM，存储监控程序、引导加载程序等不经常改变的程序代码，或者储存在掉电时需要保持的系统配置等不常改变的数据",
    "id": 5382,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 38,
        "end": 43,
        "text": "EPROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 48,
        "end": 53,
        "text": "EPROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "非易失性",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 58,
        "end": 60,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 65,
        "end": 67,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 74,
        "end": 76,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6806,
    "created_at": "2024-08-16T09:09:54.847669Z",
    "updated_at": "2024-08-16T09:09:54.848670Z",
    "lead_time": 4.886
  },
  {
    "text": "CPU对整个计算机系统的运行是极其重要的，它具有如下四方面的基本功能",
    "id": 5383,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6807,
    "created_at": "2024-08-16T09:09:57.065703Z",
    "updated_at": "2024-08-16T09:09:57.065703Z",
    "lead_time": 1.572
  },
  {
    "text": "正是由于二进制数运算规律简单，在电子器件中比较容易实现，因此，在电子数字计算机中广泛采用二进制数",
    "id": 5384,
    "label": [
      {
        "start": 32,
        "end": 39,
        "text": "电子数字计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "电子器件",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 44,
        "end": 47,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6808,
    "created_at": "2024-08-16T09:09:59.286935Z",
    "updated_at": "2024-08-16T09:09:59.286935Z",
    "lead_time": 1.641
  },
  {
    "text": "字符数据也称为文本数据或字符串，目前广泛使用ASCII码",
    "id": 5385,
    "label": [
      {
        "start": 22,
        "end": 27,
        "text": "ASCII",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 1,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 13,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6809,
    "created_at": "2024-08-16T09:10:00.878032Z",
    "updated_at": "2024-08-16T09:10:00.878032Z",
    "lead_time": 0.979
  },
  {
    "text": "年代末期，计算机硬件结构随着VLSI技术的飞速发展而越来越复杂化，大多数计算机的指令系统多达几百条",
    "id": 5386,
    "label": [
      {
        "start": 5,
        "end": 10,
        "text": "计算机硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 20,
        "text": "VLSI技术",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 40,
        "end": 44,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6810,
    "created_at": "2024-08-16T09:10:20.648451Z",
    "updated_at": "2024-08-16T09:10:20.648451Z",
    "lead_time": 19.157
  },
  {
    "text": "MMU的工作流程大致如下：CPU发出访存的虚拟地址后，MMU通过页表查找机制访问主存页表，获得映射关系；如果主存命中，MMU将虚页号变换为物理页号，产生物理地址访存；如果主存缺页，CPU将转到操作系统的页面失效程序入口，由操作系统进行调页操作",
    "id": 5387,
    "label": [
      {
        "start": 21,
        "end": 25,
        "text": "虚拟地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 69,
        "end": 73,
        "text": "物理页号",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 76,
        "end": 80,
        "text": "物理地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 96,
        "end": 100,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 111,
        "end": 115,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 63,
        "end": 66,
        "text": "虚页号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 90,
        "end": 93,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 87,
        "end": 89,
        "text": "缺页",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 105,
        "end": 107,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 54,
        "end": 56,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 85,
        "end": 87,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 101,
        "end": 103,
        "text": "页面",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 118,
        "end": 119,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6811,
    "created_at": "2024-08-16T09:10:29.198764Z",
    "updated_at": "2024-08-16T09:10:29.198764Z",
    "lead_time": 7.899
  },
  {
    "text": "并行传送一般采用电位传送",
    "id": 5388,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "并行传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "电位",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6812,
    "created_at": "2024-08-16T09:10:30.626507Z",
    "updated_at": "2024-08-16T09:10:30.626507Z",
    "lead_time": 0.696
  },
  {
    "text": "操作数检查浮点加减运算过程比定点运算过程复杂",
    "id": 5389,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "定点",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6813,
    "created_at": "2024-08-16T09:10:31.717755Z",
    "updated_at": "2024-08-16T09:10:31.717755Z",
    "lead_time": 0.485
  },
  {
    "text": "然而信息怎样才能在各寄存器之间传送呢也就是说，数据的流动是由什么部件控制的呢通常把许多寄存器之间传送信息的通路，称为数据通路",
    "id": 5390,
    "label": [
      {
        "start": 58,
        "end": 62,
        "text": "数据通路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6814,
    "created_at": "2024-08-16T09:10:32.667629Z",
    "updated_at": "2024-08-16T09:10:32.667629Z",
    "lead_time": 0.378
  },
  {
    "text": "从信息传输速率来讲，相差也很悬殊",
    "id": 5391,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "传输速率",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6815,
    "created_at": "2024-08-16T09:10:34.001404Z",
    "updated_at": "2024-08-16T09:10:34.001404Z",
    "lead_time": 0.718
  },
  {
    "text": "双端口存储器读写时序可以看出，在顺序方式中某个模块进行存取时，其他模块不工作",
    "id": 5392,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6816,
    "created_at": "2024-08-16T09:10:36.886763Z",
    "updated_at": "2024-08-16T09:10:36.886763Z",
    "lead_time": 2.285
  },
  {
    "text": "如图所示，当流水线满载时，每一个时钟周期可以执行条指令",
    "id": 5393,
    "label": [
      {
        "start": 16,
        "end": 20,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6817,
    "created_at": "2024-08-16T09:10:39.022900Z",
    "updated_at": "2024-08-16T09:10:39.022900Z",
    "lead_time": 1.551
  },
  {
    "text": "其存储容量取决于设定的显示工作方式",
    "id": 5394,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6818,
    "created_at": "2024-08-16T09:10:41.605777Z",
    "updated_at": "2024-08-16T09:10:41.605777Z",
    "lead_time": 1.972
  },
  {
    "text": "作为思考题，读者不妨画出链式查询电路的逻辑结构图",
    "id": 5395,
    "annotator": 1,
    "annotation_id": 6819,
    "created_at": "2024-08-16T09:10:42.727907Z",
    "updated_at": "2024-08-16T09:10:42.727907Z",
    "lead_time": 0.375
  },
  {
    "text": "如图a所示",
    "id": 5396,
    "annotator": 1,
    "annotation_id": 6820,
    "created_at": "2024-08-16T09:10:43.662888Z",
    "updated_at": "2024-08-16T09:10:43.662888Z",
    "lead_time": 0.431
  },
  {
    "text": "还有一种常用的判定编程和写入的状态的方法称为datapolling，如图所示",
    "id": 5397,
    "annotator": 1,
    "annotation_id": 6821,
    "created_at": "2024-08-16T09:10:44.589730Z",
    "updated_at": "2024-08-16T09:10:44.589730Z",
    "lead_time": 0.408
  },
  {
    "text": "寄存器的引用可以是显式的，也可以是隐式的",
    "id": 5398,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6822,
    "created_at": "2024-08-16T09:10:45.764666Z",
    "updated_at": "2024-08-16T09:10:45.764666Z",
    "lead_time": 0.621
  },
  {
    "text": "而在组相联映射方式中，每个区第i块可以映射到第i组的v行中图中v，而且在v行中可以自由选择空余的行",
    "id": 5399,
    "label": [
      {
        "start": 2,
        "end": 9,
        "text": "组相联映射方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6823,
    "created_at": "2024-08-16T09:10:46.877954Z",
    "updated_at": "2024-08-16T09:10:46.877954Z",
    "lead_time": 0.494
  },
  {
    "text": "注意，输入缓冲器与输出缓冲器总是互锁的",
    "id": 5400,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6824,
    "created_at": "2024-08-16T09:10:48.059830Z",
    "updated_at": "2024-08-16T09:10:48.059830Z",
    "lead_time": 0.644
  },
  {
    "text": "缓冲接口模块在外围设备和计算机系统其他部件之间用作为一个缓冲器，以补偿各种设备在速度上的差异",
    "id": 5401,
    "label": [
      {
        "start": 12,
        "end": 17,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6825,
    "created_at": "2024-08-16T09:10:51.703700Z",
    "updated_at": "2024-08-16T09:10:51.703700Z",
    "lead_time": 3.051
  },
  {
    "text": "这些操作称为保存现场",
    "id": 5402,
    "annotator": 1,
    "annotation_id": 6826,
    "created_at": "2024-08-16T09:10:52.739642Z",
    "updated_at": "2024-08-16T09:10:52.739642Z",
    "lead_time": 0.448
  },
  {
    "text": "定点数的表示方法所谓定点格式，即约定机器中所有数据的小数点位置是固定不变的",
    "id": 5403,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "定点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "定点",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6827,
    "created_at": "2024-08-16T09:10:56.112989Z",
    "updated_at": "2024-08-16T09:11:00.015067Z",
    "lead_time": 4.747
  },
  {
    "text": "单级中断源的识别如何确定中断源，并转入被响应的中断服务程序入口地址，是中断处理首先要解决的问题",
    "id": 5404,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 29,
        "text": "中断服务程序",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6828,
    "created_at": "2024-08-16T09:11:08.432888Z",
    "updated_at": "2024-08-16T09:11:08.432888Z",
    "lead_time": 7.041
  },
  {
    "text": "也可以接入电视机的视频输入端来代替监视器",
    "id": 5405,
    "annotator": 1,
    "annotation_id": 6829,
    "created_at": "2024-08-16T09:11:09.758849Z",
    "updated_at": "2024-08-16T09:11:09.758849Z",
    "lead_time": 0.649
  },
  {
    "text": "图中虚线左边结构为一维多级中断，如果去掉虚线则成为二维多级中断结构",
    "id": 5406,
    "label": [
      {
        "start": 13,
        "end": 15,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6830,
    "created_at": "2024-08-16T09:11:11.292451Z",
    "updated_at": "2024-08-16T09:11:11.292451Z",
    "lead_time": 0.966
  },
  {
    "text": "段选择器中的最低两位用于存储保护，其余位选择一个特定的段",
    "id": 5407,
    "label": [
      {
        "start": 12,
        "end": 16,
        "text": "存储保护",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "段选择器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 20,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6831,
    "created_at": "2024-08-16T09:11:14.690847Z",
    "updated_at": "2024-08-16T09:11:20.194783Z",
    "lead_time": 6.047
  },
  {
    "text": "这些小磁芯处在计算机内用三条细导线穿过网格板上",
    "id": 5408,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "磁芯",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6832,
    "created_at": "2024-08-16T09:11:25.453650Z",
    "updated_at": "2024-08-16T09:11:25.453650Z",
    "lead_time": 3.751
  },
  {
    "text": "而图像所处理的对象多半来自客观世界，即由摄像机摄取下来存入计算机的数字图像，这种图像称为客观图像",
    "id": 5409,
    "label": [
      {
        "start": 29,
        "end": 32,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6833,
    "created_at": "2024-08-16T09:11:30.829660Z",
    "updated_at": "2024-08-16T09:11:30.829660Z",
    "lead_time": 4.78
  },
  {
    "text": "WP时，最外区块保持保护状态；WP时，最外区块的保护状态由先前的保护去保护状态决定",
    "id": 5410,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "区块",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "区块",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6834,
    "created_at": "2024-08-16T09:11:33.584088Z",
    "updated_at": "2024-08-16T09:11:33.584088Z",
    "lead_time": 2.115
  },
  {
    "text": "这种中断结构与第章讲的链式总线仲裁相对应，中断请求信号IR相当于总线请求信号BR",
    "id": 5411,
    "label": [
      {
        "start": 13,
        "end": 17,
        "text": "总线仲裁",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "总线请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6835,
    "created_at": "2024-08-16T09:11:45.088008Z",
    "updated_at": "2024-08-16T09:11:45.088008Z",
    "lead_time": 10.894
  },
  {
    "text": "表中列出一位全加器FA进行加法运算的输入输出真值表",
    "id": 5412,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "全加器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "真值",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 5,
        "end": 6,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6836,
    "created_at": "2024-08-16T09:11:57.405663Z",
    "updated_at": "2024-08-16T09:11:57.405663Z",
    "lead_time": 11.649
  },
  {
    "text": "ROMBIOS含有少量的固化软件，用于支持显示控制器建立所要求的显示环境",
    "id": 5413,
    "label": [
      {
        "start": 21,
        "end": 26,
        "text": "显示控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 7,
        "text": "ROMBIOS",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6837,
    "created_at": "2024-08-16T09:12:13.162002Z",
    "updated_at": "2024-08-16T09:12:13.162002Z",
    "lead_time": 15.121
  },
  {
    "text": "二进制数的运算规律非常简单",
    "id": 5414,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6838,
    "created_at": "2024-08-16T09:13:01.507170Z",
    "updated_at": "2024-08-16T09:13:01.507170Z",
    "lead_time": 47.203
  },
  {
    "text": "专用计算机是最有效、最经济和最快速的计算机，但是它的适应性很差",
    "id": 5415,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "专用计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6839,
    "created_at": "2024-08-16T09:13:06.979993Z",
    "updated_at": "2024-08-16T09:13:06.979993Z",
    "lead_time": 3.022
  },
  {
    "text": "第二个问题，为了在中断服务程序执行完毕以后，能够正确地返回到原来主程序被中断的断点而继续执行主程序，必须把程序计数器PC的内容，以及当前指令执行结束后CPU的状态包括寄存器的内容和一些状态标志位都保存到堆栈中",
    "id": 5416,
    "label": [
      {
        "start": 83,
        "end": 86,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 75,
        "end": 78,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 68,
        "end": 70,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 101,
        "end": 103,
        "text": "堆栈",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 96,
        "end": 97,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 9,
        "end": 15,
        "text": "中断服务程序",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 53,
        "end": 58,
        "text": "程序计数器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6840,
    "created_at": "2024-08-16T09:14:47.919553Z",
    "updated_at": "2024-08-16T09:14:47.919553Z",
    "lead_time": 98.64
  },
  {
    "text": "同时，操作系统修改页表和TLB，而试图访问该页上的任何数据可能将导致缺页",
    "id": 5417,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "TLB",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "缺页",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 23,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6841,
    "created_at": "2024-08-16T09:15:03.697103Z",
    "updated_at": "2024-08-16T09:15:03.697103Z",
    "lead_time": 14.488
  },
  {
    "text": "因此，一条机器指令对应着一个微程序，而微程序的总和便可实现整个的指令系统",
    "id": 5418,
    "label": [
      {
        "start": 14,
        "end": 17,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6842,
    "created_at": "2024-08-16T09:15:06.947751Z",
    "updated_at": "2024-08-16T09:15:06.947751Z",
    "lead_time": 2.135
  },
  {
    "text": "CPU在保存现场信息，设备服务如交换数据以后，将恢复现场信息",
    "id": 5419,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6843,
    "created_at": "2024-08-16T09:15:11.638356Z",
    "updated_at": "2024-08-16T09:15:11.638356Z",
    "lead_time": 3.273
  },
  {
    "text": "于是用位字段可以存储位有效数",
    "id": 5420,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 4,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 11,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6844,
    "created_at": "2024-08-16T09:15:17.455605Z",
    "updated_at": "2024-08-16T09:15:17.455605Z",
    "lead_time": 4.429
  },
  {
    "text": "世纪年代，所有计算机存储器都是由微小的铁磁体环磁芯做成，每个磁芯直径约mm",
    "id": 5421,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "磁芯",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "磁芯",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6845,
    "created_at": "2024-08-16T09:16:02.134821Z",
    "updated_at": "2024-08-16T09:16:02.134821Z",
    "lead_time": 43.735
  },
  {
    "text": "DMA控制器接到CPU的响应信号后，进行以下工作：对现有DMA请求中优先权最高的请求给予DMA响应；选择相应的地址寄存器的内容驱动地址总线；根据所选设备操作寄存器的内容，向总线发读、写信号；外围设备向数据总线传送数据，或从数据总线接收数据；每字节传送完毕后，DMA控制器使相应的地址寄存器和长度寄存器加“”或减“”",
    "id": 5422,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 57,
        "end": 60,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 129,
        "end": 135,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 139,
        "end": 144,
        "text": "地址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 95,
        "end": 99,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 65,
        "end": 69,
        "text": "地址总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 100,
        "end": 104,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 111,
        "end": 115,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 44,
        "end": 47,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 78,
        "end": 81,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 147,
        "end": 150,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 121,
        "end": 123,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 86,
        "end": 88,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6846,
    "created_at": "2024-08-16T09:16:08.014981Z",
    "updated_at": "2024-08-16T09:16:08.014981Z",
    "lead_time": 4.917
  },
  {
    "text": "WORM、CDR光盘WORM表示一次写多次读，它是一种只能写一次的光盘",
    "id": 5423,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6847,
    "created_at": "2024-08-16T09:16:10.112398Z",
    "updated_at": "2024-08-16T09:16:10.112398Z",
    "lead_time": 1.083
  },
  {
    "text": "至此，取指周期结束",
    "id": 5424,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "取指",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6848,
    "created_at": "2024-08-16T09:16:11.502417Z",
    "updated_at": "2024-08-16T09:16:11.502417Z",
    "lead_time": 0.555
  },
  {
    "text": "激光印字机是非击打式硬拷贝输出设备，输出速度快，印字质量高，可使用普通纸张",
    "id": 5425,
    "label": [
      {
        "start": 10,
        "end": 17,
        "text": "硬拷贝输出设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "激光印字机",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 25,
        "end": 26,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6849,
    "created_at": "2024-08-16T09:16:12.856734Z",
    "updated_at": "2024-08-16T09:16:12.856734Z",
    "lead_time": 0.47
  },
  {
    "text": "偏移量长度达位，能用于访问全局",
    "id": 5426,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "偏移量",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 7,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6850,
    "created_at": "2024-08-16T09:16:14.051884Z",
    "updated_at": "2024-08-16T09:16:14.051884Z",
    "lead_time": 0.12
  },
  {
    "text": "广义地讲，并行性有着两种含义：一是同时性，指两个以上事件在同一时刻发生；二是并发性，指两个以上事件在同一时间间隔内发生",
    "id": 5427,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "并行性",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "并发性",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6851,
    "created_at": "2024-08-16T09:16:15.481993Z",
    "updated_at": "2024-08-16T09:16:15.481993Z",
    "lead_time": 0.155
  },
  {
    "text": "机器字长通常与主存单元的位数一致",
    "id": 5428,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "主存单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 13,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "机器字长",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6852,
    "created_at": "2024-08-16T09:16:22.280091Z",
    "updated_at": "2024-08-16T09:16:22.280091Z",
    "lead_time": 5.65
  },
  {
    "text": "另一种是光电式的鼠标器，需要一块画满小方格的长方形金属板配合使用",
    "id": 5429,
    "annotator": 1,
    "annotation_id": 6853,
    "created_at": "2024-08-16T09:16:24.306011Z",
    "updated_at": "2024-08-16T09:16:24.306011Z",
    "lead_time": 1.005
  },
  {
    "text": "竞争时CN与AB逐位比较，从最高位b至最低位b以一维菊花链方式进行，只有上一位竞争得胜者Wi位为",
    "id": 5430,
    "label": [
      {
        "start": 14,
        "end": 17,
        "text": "最高位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 21,
        "end": 22,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 38,
        "end": 39,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 46,
        "end": 47,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6854,
    "created_at": "2024-08-16T09:16:28.353956Z",
    "updated_at": "2024-08-16T09:16:28.354956Z",
    "lead_time": 3.214
  },
  {
    "text": "这对短指令来讲，在时间的利用上是浪费的，因而也降低了CPU的指令执行速度，影响到机器的速度指标",
    "id": 5431,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "短指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6855,
    "created_at": "2024-08-16T09:16:31.978912Z",
    "updated_at": "2024-08-16T09:16:31.978912Z",
    "lead_time": 2.829
  },
  {
    "text": "除去用E为全和全即十进制表示零和无穷大的特殊情况，指数的偏移值不选，而选",
    "id": 5432,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6856,
    "created_at": "2024-08-16T09:16:34.791432Z",
    "updated_at": "2024-08-16T09:16:34.791432Z",
    "lead_time": 1.953
  },
  {
    "text": "图是典型的具有通道的计算机系统结构图",
    "id": 5433,
    "label": [
      {
        "start": 10,
        "end": 15,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6857,
    "created_at": "2024-08-16T09:16:36.921239Z",
    "updated_at": "2024-08-16T09:16:36.921239Z",
    "lead_time": 1.347
  },
  {
    "text": "此图中未反映出寻址机构，而仅仅表示了存取功能的逻辑结构，它主要由磁记录介质、磁盘控制器、磁盘驱动器三大部分组成",
    "id": 5434,
    "label": [
      {
        "start": 38,
        "end": 43,
        "text": "磁盘控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 44,
        "end": 49,
        "text": "磁盘驱动器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "磁记录",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6858,
    "created_at": "2024-08-16T09:16:39.748720Z",
    "updated_at": "2024-08-16T09:16:39.748720Z",
    "lead_time": 1.946
  },
  {
    "text": "吞吐量表征一台计算机在某一时间间隔内能够处理的信息量",
    "id": 5435,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6859,
    "created_at": "2024-08-16T09:16:44.300039Z",
    "updated_at": "2024-08-16T09:16:44.300039Z",
    "lead_time": 3.797
  },
  {
    "text": "如果把直接寻址和间接寻址结合起来，指令有如下形式：操作码IA若寻址特征位I，表示直接寻址，这时有效地址EAA；若I，则表示间接寻址，这时有效地址EAA",
    "id": 5436,
    "label": [
      {
        "start": 17,
        "end": 19,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 36,
        "text": "寻址特征位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 47,
        "end": 51,
        "text": "有效地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 68,
        "end": 72,
        "text": "有效地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "间接寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 61,
        "end": 65,
        "text": "间接寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "直接寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 40,
        "end": 44,
        "text": "直接寻址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6860,
    "created_at": "2024-08-16T09:16:50.468856Z",
    "updated_at": "2024-08-16T09:16:50.468856Z",
    "lead_time": 5.411
  },
  {
    "text": "多总线结构单总线系统中，由于所有的高速设备和低速设备都挂在同一总线上，且总线只能分时工作，即某一时间只能允许在一对儿设备之间传送数据，这就使信息传送的效率和吞吐量受到极大限制",
    "id": 5437,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "单总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 70,
        "end": 74,
        "text": "信息传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "多总线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "高速设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "低速设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6861,
    "created_at": "2024-08-16T09:17:00.640863Z",
    "updated_at": "2024-08-16T09:17:00.640863Z",
    "lead_time": 9.113
  },
  {
    "text": "图给出了n位n位带求补器的阵列乘法器逻辑方框图",
    "id": 5438,
    "label": [
      {
        "start": 15,
        "end": 18,
        "text": "乘法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "求补器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 6,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 8,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6862,
    "created_at": "2024-08-16T09:19:15.919987Z",
    "updated_at": "2024-08-16T09:19:15.919987Z",
    "lead_time": 133.941
  },
  {
    "text": "这不利于编程时的独立性，并给换入换出处理、存储保护和存储共享等操作造成麻烦",
    "id": 5439,
    "label": [
      {
        "start": 21,
        "end": 25,
        "text": "存储保护",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6863,
    "created_at": "2024-08-16T09:19:24.030874Z",
    "updated_at": "2024-08-16T09:19:24.030874Z",
    "lead_time": 1.665
  },
  {
    "text": "很显然，对一个位来说，CLA部件构成了第二级的先行进位逻辑，即实现四个小组位片之间的先行进位，从而使全字长ALU的运算时间大大缩短",
    "id": 5440,
    "label": [
      {
        "start": 53,
        "end": 56,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 51,
        "end": 53,
        "text": "字长",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 8,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 27,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 37,
        "end": 38,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 45,
        "end": 46,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6864,
    "created_at": "2024-08-16T09:19:29.497075Z",
    "updated_at": "2024-08-16T09:19:29.497075Z",
    "lead_time": 4.776
  },
  {
    "text": "利用该字段，可和ModRM字段一起，对操作数来源进行完整的说明",
    "id": 5441,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6865,
    "created_at": "2024-08-16T09:19:31.585619Z",
    "updated_at": "2024-08-16T09:19:31.585619Z",
    "lead_time": 1.227
  },
  {
    "text": "读、写操作读操作是由从方到主方的数据传送；写操作是由主方到从方的数据传送",
    "id": 5442,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "读操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6866,
    "created_at": "2024-08-16T09:19:33.758019Z",
    "updated_at": "2024-08-16T09:19:33.758019Z",
    "lead_time": 1.409
  },
  {
    "text": "例如，乘除运算指令、浮点运算指令可直接用硬件来实现，也可用基本指令编写的程序来实现",
    "id": 5443,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6867,
    "created_at": "2024-08-16T09:19:36.047738Z",
    "updated_at": "2024-08-16T09:19:36.047738Z",
    "lead_time": 1.531
  },
  {
    "text": "这种方法是把控制部件看作产生专门固定时序控制信号的逻辑电路，而此逻辑电路以使用最少元件和取得最高操作速度为设计目标",
    "id": 5444,
    "label": [
      {
        "start": 25,
        "end": 29,
        "text": "逻辑电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "逻辑电路",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6868,
    "created_at": "2024-08-16T09:19:38.464123Z",
    "updated_at": "2024-08-16T09:19:38.464123Z",
    "lead_time": 1.58
  },
  {
    "text": "总线时钟频率为MHz，异步方式数据传输率是MBs，同步方式数据传输率是MBs",
    "id": 5445,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "MBs",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "MBs",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "MHz",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6869,
    "created_at": "2024-08-16T09:19:48.396963Z",
    "updated_at": "2024-08-16T09:19:48.396963Z",
    "lead_time": 9.045
  },
  {
    "text": "在电路中多加这两个进位输出的目的，是为了便于实现多片组ALU之间的先行进位，为此还需一个配合电路，称为先行进位发生器CLA，将在下面介绍",
    "id": 5446,
    "label": [
      {
        "start": 27,
        "end": 30,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6870,
    "created_at": "2024-08-16T09:19:55.900043Z",
    "updated_at": "2024-08-16T09:19:55.900043Z",
    "lead_time": 6.714
  },
  {
    "text": "图中的中断优先级排队电路，就是用于决定优先响应中断级的硬件逻辑",
    "id": 5447,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "优先级",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6871,
    "created_at": "2024-08-16T09:20:01.493766Z",
    "updated_at": "2024-08-16T09:20:01.493766Z",
    "lead_time": 4.866
  },
  {
    "text": "正在执行的程序的指令和数据存储在CPU能直接访问的存储器中，这种狭义的存储器就是内存储器",
    "id": 5448,
    "label": [
      {
        "start": 40,
        "end": 44,
        "text": "内存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6872,
    "created_at": "2024-08-16T09:20:05.191752Z",
    "updated_at": "2024-08-16T09:20:05.191752Z",
    "lead_time": 2.817
  },
  {
    "text": "位的浮点数中符号位位，阶码域位，尾数域位，指数偏移值是",
    "id": 5449,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 1,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 15,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 19,
        "end": 20,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6873,
    "created_at": "2024-08-16T09:20:09.411114Z",
    "updated_at": "2024-08-16T09:20:09.411114Z",
    "lead_time": 3.202
  },
  {
    "text": "针对每个虚地址，存储管理部件首先以段号s为索引访问段表的第s个表项",
    "id": 5450,
    "label": [
      {
        "start": 8,
        "end": 14,
        "text": "存储管理部件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "虚地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "段号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "索引",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "段表",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6874,
    "created_at": "2024-08-16T09:20:45.071446Z",
    "updated_at": "2024-08-16T09:20:45.071954Z",
    "lead_time": 34.739
  },
  {
    "text": "另一种划分可寻址的存储空间的方法称为分段",
    "id": 5451,
    "label": [
      {
        "start": 18,
        "end": 20,
        "text": "分段",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "存储空间",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6875,
    "created_at": "2024-08-16T09:20:49.321771Z",
    "updated_at": "2024-08-16T09:20:49.321771Z",
    "lead_time": 3.658
  },
  {
    "text": "CDROM和DVDROM的主要区别是：CD光盘是单面使用，而DVD光盘两面都可以写数据",
    "id": 5452,
    "label": [
      {
        "start": 6,
        "end": 12,
        "text": "DVDROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "DVD",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6876,
    "created_at": "2024-08-16T09:21:03.006772Z",
    "updated_at": "2024-08-16T09:21:03.006772Z",
    "lead_time": 12.809
  },
  {
    "text": "中断向量的产生当CPU识别出某中断源时，由硬件直接产生一个与该中断源对应的向量地址，很快便引入中断服务程序",
    "id": 5453,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 47,
        "end": 53,
        "text": "中断服务程序",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "中断向量",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6877,
    "created_at": "2024-08-16T09:21:24.568750Z",
    "updated_at": "2024-08-16T09:21:24.568750Z",
    "lead_time": 20.775
  },
  {
    "text": "物理页号与页内地址偏移量拼接即得物理地址",
    "id": 5454,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "物理页号",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "物理地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "偏移量",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "页内地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6878,
    "created_at": "2024-08-16T09:21:40.699977Z",
    "updated_at": "2024-08-16T09:21:40.699977Z",
    "lead_time": 15.385
  },
  {
    "text": "同样，对于负逻辑输入与输出而言，也有种算术运算功能和种逻辑运算功能",
    "id": 5455,
    "label": [
      {
        "start": 19,
        "end": 23,
        "text": "算术运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "逻辑运算",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6879,
    "created_at": "2024-08-16T09:21:43.282616Z",
    "updated_at": "2024-08-16T09:21:43.282616Z",
    "lead_time": 1.789
  },
  {
    "text": "由于ALU本身有时间延迟，所以打入输出结果的选通脉冲必须考虑到这个延迟",
    "id": 5456,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6880,
    "created_at": "2024-08-16T09:21:47.356389Z",
    "updated_at": "2024-08-16T09:21:47.356389Z",
    "lead_time": 3.34
  },
  {
    "text": "选择通道选择通道又称高速通道，在物理上它可以连接多个设备，但是这些设备不能同时工作，在某一段时间内通道只能选择一个设备进行工作",
    "id": 5457,
    "annotator": 1,
    "annotation_id": 6881,
    "created_at": "2024-08-16T09:22:04.533985Z",
    "updated_at": "2024-08-16T09:22:04.533985Z",
    "lead_time": 16.493
  },
  {
    "text": "地址转移逻辑在一般情况下，微指令由控制存储器读出后直接给出下一条微指令的地址，通常我们简称微地址，这个微地址信息就存放在微地址寄存器中",
    "id": 5458,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "地址转移逻辑",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 60,
        "end": 66,
        "text": "微地址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 22,
        "text": "控制存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "微地址",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 51,
        "end": 54,
        "text": "微地址",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6882,
    "created_at": "2024-08-16T09:22:27.761581Z",
    "updated_at": "2024-08-16T09:22:27.761581Z",
    "lead_time": 22.475
  },
  {
    "text": "程序中断方式的基本接口示意图如图所示",
    "id": 5459,
    "label": [
      {
        "start": 9,
        "end": 11,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "程序中断方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6883,
    "created_at": "2024-08-16T09:22:38.709068Z",
    "updated_at": "2024-08-16T09:22:38.709068Z",
    "lead_time": 10.209
  },
  {
    "text": "因为段的长度不固定，段式虚拟存储器也有一些缺点：主存空间分配比较麻烦",
    "id": 5460,
    "label": [
      {
        "start": 12,
        "end": 17,
        "text": "虚拟存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6884,
    "created_at": "2024-08-16T09:22:41.266873Z",
    "updated_at": "2024-08-16T09:22:41.266873Z",
    "lead_time": 1.783
  },
  {
    "text": "集中式仲裁中每个功能模块有两条线连到总线控制器：一条是送往仲裁器的总线请求信号线BR，一条是仲裁器送出的总线授权信号线BG",
    "id": 5461,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "集中式仲裁",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "总线请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "仲裁器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 46,
        "end": 49,
        "text": "仲裁器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 52,
        "end": 54,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6885,
    "created_at": "2024-08-16T09:22:59.572910Z",
    "updated_at": "2024-08-16T09:22:59.572910Z",
    "lead_time": 17.441
  },
  {
    "text": "但是IO设备每一次周期挪用都有申请总线控制权、建立总线控制权和归还总线控制权的过程，所以传送一个字对内存来说要占用一个周期，但对DMA控制器来说一般要个内存周期视逻辑线路的延迟而定",
    "id": 5462,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 64,
        "end": 70,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 22,
        "text": "总线控制权",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 30,
        "text": "总线控制权",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 38,
        "text": "总线控制权",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 76,
        "end": 78,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 48,
        "end": 49,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6886,
    "created_at": "2024-08-16T09:23:05.039058Z",
    "updated_at": "2024-08-16T09:23:05.039058Z",
    "lead_time": 4.64
  },
  {
    "text": "一个负整数，当用原码、反码、补码表示时，符号位都固定为，用二进制表示的数位值都不相同",
    "id": 5463,
    "label": [
      {
        "start": 29,
        "end": 32,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "反码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "原码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 37,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6887,
    "created_at": "2024-08-16T09:23:10.938764Z",
    "updated_at": "2024-08-16T09:23:10.939764Z",
    "lead_time": 4.704
  },
  {
    "text": "P测试的“状态条件”是指令寄存器的操作码字段，即用OP字段作为形成下一条微指令的地址，于是微地址寄存器的内容修改成",
    "id": 5464,
    "label": [
      {
        "start": 11,
        "end": 16,
        "text": "指令寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "OP",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 45,
        "end": 51,
        "text": "微地址寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6888,
    "created_at": "2024-08-16T09:23:44.444768Z",
    "updated_at": "2024-08-16T09:23:44.444768Z",
    "lead_time": 32.44
  },
  {
    "text": "一次数据传送是在挂钩信号nIRDY和nTRDY都有效情况下完成，任一信号无效在时钟上跳沿被对方采样到，都将加入等待状态",
    "id": 5465,
    "label": [
      {
        "start": 41,
        "end": 44,
        "text": "上跳沿",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6889,
    "created_at": "2024-08-16T09:23:49.718741Z",
    "updated_at": "2024-08-16T09:23:49.718741Z",
    "lead_time": 4.232
  },
  {
    "text": "图d表示擦除操作：高功率激光束照射记录点，外加磁场改变方向，使磁性粒子恢复到原始极性",
    "id": 5466,
    "annotator": 1,
    "annotation_id": 6890,
    "created_at": "2024-08-16T09:23:51.602976Z",
    "updated_at": "2024-08-16T09:23:51.602976Z",
    "lead_time": 0.922
  },
  {
    "text": "理想的输入方式是利用语音或图像识别技术“自动”将拼音或文本输入到计算机内，使计算机能认识汉字，听懂汉语，并将其自动转换为机内代码表示",
    "id": 5467,
    "label": [
      {
        "start": 32,
        "end": 35,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "汉字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6891,
    "created_at": "2024-08-16T09:23:54.468789Z",
    "updated_at": "2024-08-16T09:23:54.468789Z",
    "lead_time": 2.124
  },
  {
    "text": "通常在总线和每个外围设备的设备控制器之间使用一个适配器接口电路来解决这个问题，以保证外围设备用计算机系统特性所要求的形式发送和接收信息",
    "id": 5468,
    "label": [
      {
        "start": 47,
        "end": 52,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 13,
        "end": 18,
        "text": "设备控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 42,
        "end": 46,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "适配器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6892,
    "created_at": "2024-08-16T09:24:01.788803Z",
    "updated_at": "2024-08-16T09:24:01.788803Z",
    "lead_time": 6.471
  },
  {
    "text": "例如，当微指令字第位信息为“”时，表示发出LDR的微命令，那么运算器将执行ALUR的微操作，把公共总线上的信息打入到寄存器R",
    "id": 5469,
    "label": [
      {
        "start": 58,
        "end": 61,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 45,
        "text": "微操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "微指令字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6893,
    "created_at": "2024-08-16T09:24:54.351309Z",
    "updated_at": "2024-08-16T09:24:54.351309Z",
    "lead_time": 51.53
  },
  {
    "text": "在这个电路中使用了八个ALU和两个CLA器件",
    "id": 5470,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6894,
    "created_at": "2024-08-16T09:24:57.220830Z",
    "updated_at": "2024-08-16T09:24:57.220830Z",
    "lead_time": 1.922
  },
  {
    "text": "链式查询方式为减少总线授权线数量，采用了图a所示的菊花链查询方式，其中A表示地址线，D表示数据线",
    "id": 5471,
    "label": [
      {
        "start": 45,
        "end": 48,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6895,
    "created_at": "2024-08-16T09:25:17.194678Z",
    "updated_at": "2024-08-16T09:25:17.194678Z",
    "lead_time": 19.35
  },
  {
    "text": "如地址总线的宽度指明了总线能够直接访问存储器的地址空间范围；数据总线的宽度指明了访问一次存储器或外设时能够交换数据的位数；控制总线包括CPU发出的各种控制命令如存储器读写、IO读写，请求信号与仲裁信号，外设与CPU的时序同步信号，中断信号，DMA控制信号等",
    "id": 5472,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 44,
        "end": 47,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 61,
        "end": 65,
        "text": "控制总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 123,
        "end": 127,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 80,
        "end": 84,
        "text": "存储器读",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "地址空间",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "地址总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 120,
        "end": 123,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 86,
        "end": 89,
        "text": "IO读",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 67,
        "end": 70,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 104,
        "end": 107,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 115,
        "end": 117,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 48,
        "end": 50,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 101,
        "end": 103,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 110,
        "end": 112,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 58,
        "end": 59,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6896,
    "created_at": "2024-08-16T09:25:26.489011Z",
    "updated_at": "2024-08-16T09:25:26.489011Z",
    "lead_time": 8.642
  },
  {
    "text": "存储器的技术指标有存储容量、存取时间、存储周期、存储器带宽",
    "id": 5473,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "存取时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "存储周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "带宽",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6897,
    "created_at": "2024-08-16T09:25:29.319154Z",
    "updated_at": "2024-08-16T09:25:29.319154Z",
    "lead_time": 1.856
  },
  {
    "text": "于一条存数指令，可以用助记符STO表示操作码",
    "id": 5474,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "存数指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6898,
    "created_at": "2024-08-16T09:25:31.734023Z",
    "updated_at": "2024-08-16T09:25:31.734023Z",
    "lead_time": 1.514
  },
  {
    "text": "指令动态调度策略采用按序发射、按序完成的指令动态调度策略",
    "id": 5475,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6899,
    "created_at": "2024-08-16T09:27:58.768712Z",
    "updated_at": "2024-08-16T09:27:58.768712Z",
    "lead_time": 146.176
  },
  {
    "text": "它首先应用于Macintosh和Sun平台上，后来发展到工作站、网络服务器和Pentium系统中，并成为ANSI美国国家标准局标准",
    "id": 5476,
    "annotator": 1,
    "annotation_id": 6900,
    "created_at": "2024-08-16T09:28:33.529757Z",
    "updated_at": "2024-08-16T09:28:33.529757Z",
    "lead_time": 34.2
  },
  {
    "text": "随着软件的进一步发展，将开发更高级的计算机语言",
    "id": 5477,
    "label": [
      {
        "start": 18,
        "end": 21,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6901,
    "created_at": "2024-08-16T09:29:53.895992Z",
    "updated_at": "2024-08-16T09:29:53.895992Z",
    "lead_time": 79.743
  },
  {
    "text": "字计数器用于记录传送数据块的长度多少字数",
    "id": 5478,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 1,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 19,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6902,
    "created_at": "2024-08-16T09:29:56.923896Z",
    "updated_at": "2024-08-16T09:29:56.923896Z",
    "lead_time": 2.259
  },
  {
    "text": "为了减少引脚数量，位数据的低位数据线常常和地址线采用多路复用方式",
    "id": 5479,
    "label": [
      {
        "start": 21,
        "end": 24,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "引脚",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 15,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6903,
    "created_at": "2024-08-16T09:30:00.903952Z",
    "updated_at": "2024-08-16T09:30:00.903952Z",
    "lead_time": 3.257
  },
  {
    "text": "在此节拍中，操作控制器发出微操作控制信号，完成从指令存储器取出一条机器指令",
    "id": 5480,
    "label": [
      {
        "start": 13,
        "end": 20,
        "text": "微操作控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 11,
        "text": "操作控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 24,
        "end": 29,
        "text": "指令存储器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6904,
    "created_at": "2024-08-16T09:30:12.228718Z",
    "updated_at": "2024-08-16T09:30:12.228718Z",
    "lead_time": 10.609
  },
  {
    "text": "盘片每面只有一个磁头，存取数据时磁头沿盘面径向移动",
    "id": 5481,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "盘片",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "盘面",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6905,
    "created_at": "2024-08-16T09:30:15.389834Z",
    "updated_at": "2024-08-16T09:30:15.389834Z",
    "lead_time": 2.482
  },
  {
    "text": "为了进一步实现程序自动化和便于程序交流，使不熟悉具体计算机的人也能很方便地使用计算机，人们又创造了各种接近于数学语言的算法语言",
    "id": 5482,
    "label": [
      {
        "start": 26,
        "end": 29,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 59,
        "end": 61,
        "text": "算法",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6906,
    "created_at": "2024-08-16T09:30:21.682748Z",
    "updated_at": "2024-08-16T09:30:21.682748Z",
    "lead_time": 5.645
  },
  {
    "text": "地址寄存器的结构和数据缓冲寄存器、指令寄存器一样，通常使用单纯的寄存器结构",
    "id": 5483,
    "label": [
      {
        "start": 11,
        "end": 16,
        "text": "缓冲寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "地址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 22,
        "text": "指令寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6907,
    "created_at": "2024-08-16T09:30:24.311241Z",
    "updated_at": "2024-08-16T09:30:24.311241Z",
    "lead_time": 1.92
  },
  {
    "text": "所谓动态流水线调度，是对指令进行重新排序以避免处理器阻塞的硬件支持",
    "id": 5484,
    "label": [
      {
        "start": 23,
        "end": 26,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6908,
    "created_at": "2024-08-16T09:30:31.157760Z",
    "updated_at": "2024-08-16T09:30:31.157760Z",
    "lead_time": 6.155
  },
  {
    "text": "只有在“中断屏蔽”标志为“”时，CPU才可以受理中断",
    "id": 5485,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 9,
        "text": "中断屏蔽”",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6909,
    "created_at": "2024-08-16T09:30:46.588824Z",
    "updated_at": "2024-08-16T09:30:46.588824Z",
    "lead_time": 14.747
  },
  {
    "text": "一个模块内所有芯片的RAS引脚连接到一起，模块由RAS驱动，模块由RAS驱动",
    "id": 5486,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "RAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "RAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "RAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "引脚",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6910,
    "created_at": "2024-08-16T09:31:00.570822Z",
    "updated_at": "2024-08-16T09:31:00.570822Z",
    "lead_time": 13.346
  },
  {
    "text": "在这种方式中，DMA控制器从CPU完全接管对总线的控制，数据交换不经过CPU，而直接在内存和IO设备之间进行",
    "id": 5487,
    "label": [
      {
        "start": 7,
        "end": 13,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 46,
        "end": 50,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6911,
    "created_at": "2024-08-16T09:31:39.998013Z",
    "updated_at": "2024-08-16T09:31:39.998013Z",
    "lead_time": 38.593
  },
  {
    "text": "CPU中除了上述组成部分外，还有中断系统、总线接口等其他功能部件，这些内容将在以后各章中陆续展开",
    "id": 5488,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6912,
    "created_at": "2024-08-16T09:31:42.755678Z",
    "updated_at": "2024-08-16T09:31:42.755678Z",
    "lead_time": 1.98
  },
  {
    "text": "前者用于校验目的，后者用于多道程序系统中对共享存储资源的保护",
    "id": 5489,
    "label": [
      {
        "start": 13,
        "end": 19,
        "text": "多道程序系统",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6913,
    "created_at": "2024-08-16T09:31:44.167651Z",
    "updated_at": "2024-08-16T09:32:09.669930Z",
    "lead_time": 22.913
  },
  {
    "text": "语音识别器作为输入设备，可以将人的语言声音转换成计算机能够识别的信息，并将这些信息送入计算机",
    "id": 5490,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "语音识别器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "输入设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6914,
    "created_at": "2024-08-16T09:32:13.582042Z",
    "updated_at": "2024-08-16T09:32:13.582042Z",
    "lead_time": 1.711
  },
  {
    "text": "若没有更高优先级的中断请求时，INTI，门输出高电平，即IS，若此时中断请求IR有中断请求，当CPU发来中断识别信号INTA时，发出IR请求的中断源被选中，选中信号经门送入编码电路，产生一个唯一对应的设备地址，并经数据总线送往CPU的主存地址寄存器，然后执行该中断源设备的中断服务程序",
    "id": 5491,
    "label": [
      {
        "start": 121,
        "end": 124,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 117,
        "end": 121,
        "text": "主存地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 107,
        "end": 111,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 100,
        "end": 104,
        "text": "设备地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "优先级",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 47,
        "end": 50,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 113,
        "end": 116,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "高电平",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 71,
        "end": 74,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 130,
        "end": 133,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 52,
        "end": 54,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 66,
        "end": 68,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 86,
        "end": 88,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 41,
        "end": 45,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 136,
        "end": 142,
        "text": "中断服务程序",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6915,
    "created_at": "2024-08-16T09:32:45.805987Z",
    "updated_at": "2024-08-16T09:32:45.805987Z",
    "lead_time": 31.446
  },
  {
    "text": "DDRSDRAM沿袭了SDRSDRAM内存的制造体系，又能够提供更快的操作速度和更低的功耗",
    "id": 5492,
    "label": [
      {
        "start": 0,
        "end": 8,
        "text": "DDRSDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 19,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6916,
    "created_at": "2024-08-16T09:34:47.263824Z",
    "updated_at": "2024-08-16T09:34:47.263824Z",
    "lead_time": 120.652
  },
  {
    "text": "只要外加的正向脉冲电流即外加磁场幅度足够大，那么在电流消失后磁感应强度B并不等于零，而是处在Br状态正剩磁状态",
    "id": 5493,
    "annotator": 1,
    "annotation_id": 6917,
    "created_at": "2024-08-16T09:34:50.907922Z",
    "updated_at": "2024-08-16T09:34:50.907922Z",
    "lead_time": 2.991
  },
  {
    "text": "若CPU不需要占用总线则继续执行指令；若CPU需要占用总线，则CPU进入等待状态",
    "id": 5494,
    "label": [
      {
        "start": 16,
        "end": 18,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6918,
    "created_at": "2024-08-16T09:34:54.588655Z",
    "updated_at": "2024-08-16T09:34:54.588655Z",
    "lead_time": 2.995
  },
  {
    "text": "磁性材料的物理特性在计算机中，用于存储设备的磁性材料，是一种具有矩形磁滞回线的磁性材料",
    "id": 5495,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "物理特性",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6919,
    "created_at": "2024-08-16T09:34:57.549002Z",
    "updated_at": "2024-08-16T09:34:57.549002Z",
    "lead_time": 2.27
  },
  {
    "text": "为避免这种情况，模块由RAS驱动，模块由RAS驱动",
    "id": 5496,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "RAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "RAS",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6920,
    "created_at": "2024-08-16T09:34:59.538735Z",
    "updated_at": "2024-08-16T09:34:59.538735Z",
    "lead_time": 1.392
  },
  {
    "text": "设置多级中断的系统一般都希望有较快的中断响应时间，因此首先响应哪一级中断和哪一个中断源，由硬件逻辑实现，而不是用程序实现",
    "id": 5497,
    "label": [
      {
        "start": 40,
        "end": 43,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 56,
        "end": 58,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6921,
    "created_at": "2024-08-16T09:35:04.848931Z",
    "updated_at": "2024-08-16T09:35:04.848931Z",
    "lead_time": 4.662
  },
  {
    "text": "通道对设备控制器的管理通道通过使用通道指令来控制IO模块进行数据传送操作，并以通道状态字接收IO模块反映的外围设备的状态",
    "id": 5498,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "设备控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 53,
        "end": 57,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "IO模块",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 46,
        "end": 50,
        "text": "IO模块",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 43,
        "end": 44,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6922,
    "created_at": "2024-08-16T09:35:24.156789Z",
    "updated_at": "2024-08-16T09:35:24.156789Z",
    "lead_time": 18.602
  },
  {
    "text": "为了清楚地表示其组织结构，存储容量也可表示为：存储字数存储单元数存储字长每单元的比特数",
    "id": 5499,
    "label": [
      {
        "start": 32,
        "end": 36,
        "text": "存储字长",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "存储单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "存储字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "比特数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6923,
    "created_at": "2024-08-16T09:35:36.857375Z",
    "updated_at": "2024-08-16T09:35:36.857375Z",
    "lead_time": 11.98
  },
  {
    "text": "例如，当一个存储体正在刷新时，另一个存储体可以进行正常的读写操作，从而提高存取速度",
    "id": 5500,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "存储体",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 37,
        "end": 41,
        "text": "存取速度",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "存储体",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6924,
    "created_at": "2024-08-16T09:35:55.241833Z",
    "updated_at": "2024-08-16T09:35:55.241833Z",
    "lead_time": 17.684
  },
  {
    "text": "其工作过程是：每读出一条微指令，则执行这条微指令；接着又读出下一条微指令，又执行这一条微指令读出一条微指令并执行微指令的时间总和称为一个微指令周期",
    "id": 5501,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 68,
        "end": 73,
        "text": "微指令周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 50,
        "end": 53,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 56,
        "end": 59,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6925,
    "created_at": "2024-08-16T09:35:59.056789Z",
    "updated_at": "2024-08-16T09:35:59.056789Z",
    "lead_time": 3.101
  },
  {
    "text": "容易在段间留下许多外碎片，造成存储空间利用率降低",
    "id": 5502,
    "label": [
      {
        "start": 15,
        "end": 19,
        "text": "存储空间",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6926,
    "created_at": "2024-08-16T09:36:00.609749Z",
    "updated_at": "2024-08-16T09:36:00.609749Z",
    "lead_time": 0.807
  },
  {
    "text": "存储器编址是指按规定的寻址方式进行编址",
    "id": 5503,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "编址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "编址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6927,
    "created_at": "2024-08-16T09:36:03.935960Z",
    "updated_at": "2024-08-16T09:36:03.936951Z",
    "lead_time": 2.674
  },
  {
    "text": "由于采用了公共时钟，每个功能模块什么时候发送或接收信息都由统一时钟规定，因此，同步定时具有较高的传输频率",
    "id": 5504,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 39,
        "end": 43,
        "text": "同步定时",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6928,
    "created_at": "2024-08-16T09:36:07.252985Z",
    "updated_at": "2024-08-16T09:36:15.209620Z",
    "lead_time": 7.7
  },
  {
    "text": "根据反射光的光强变化并进行光电转换，即可读出记录信息",
    "id": 5505,
    "annotator": 1,
    "annotation_id": 6929,
    "created_at": "2024-08-16T09:36:22.807933Z",
    "updated_at": "2024-08-16T09:36:22.807933Z",
    "lead_time": 0.566
  },
  {
    "text": "而数据宽度有位、位、位，甚至有更多的字节",
    "id": 5506,
    "label": [
      {
        "start": 18,
        "end": 20,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 7,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 9,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 11,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6930,
    "created_at": "2024-08-16T09:36:24.461208Z",
    "updated_at": "2024-08-16T09:36:24.461208Z",
    "lead_time": 1.055
  },
  {
    "text": "这种传送方式称为“透明的DMA”方式，其来由是这种DMA传送对CPU来说，如同透明的玻璃一般，没有任何感觉或影响",
    "id": 5507,
    "label": [
      {
        "start": 25,
        "end": 30,
        "text": "DMA传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6931,
    "created_at": "2024-08-16T09:36:31.797620Z",
    "updated_at": "2024-08-16T09:36:31.797620Z",
    "lead_time": 6.704
  },
  {
    "text": "桥起着重要的作用，它连接两条总线，使彼此间相互通信",
    "id": 5508,
    "label": [
      {
        "start": 14,
        "end": 16,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 1,
        "text": "桥",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6932,
    "created_at": "2024-08-16T09:36:35.428069Z",
    "updated_at": "2024-08-16T09:36:35.428069Z",
    "lead_time": 3.005
  },
  {
    "text": "为此，首先给出第一条微指令的地址，经地址译码，控制存储器选中所对应的“取指”微指令，并将其读到微指令寄存器中",
    "id": 5509,
    "label": [
      {
        "start": 25,
        "end": 28,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 47,
        "end": 53,
        "text": "微指令寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "地址译码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "取指",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6933,
    "created_at": "2024-08-16T09:36:41.549694Z",
    "updated_at": "2024-08-16T09:36:41.549694Z",
    "lead_time": 5.49
  },
  {
    "text": "内存储器和外存储器构成了两级存储系统",
    "id": 5510,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "内存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "存储系统",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "外存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6934,
    "created_at": "2024-08-16T09:36:49.593694Z",
    "updated_at": "2024-08-16T09:36:49.593694Z",
    "lead_time": 7.194
  },
  {
    "text": "表中只列出了正逻辑的种算术运算和种逻辑运算功能",
    "id": 5511,
    "label": [
      {
        "start": 11,
        "end": 15,
        "text": "算术运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "逻辑运算",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6935,
    "created_at": "2024-08-16T09:36:51.459650Z",
    "updated_at": "2024-08-16T09:36:51.459650Z",
    "lead_time": 1.224
  },
  {
    "text": "图c表示组相联cache的检索过程",
    "id": 5512,
    "label": [
      {
        "start": 7,
        "end": 12,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "组相联",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6936,
    "created_at": "2024-08-16T09:36:52.924704Z",
    "updated_at": "2024-08-16T09:36:52.924704Z",
    "lead_time": 0.825
  },
  {
    "text": "通过支持突发模式、快速页模式和扩展数据输出等方式，可以允许重复存取DRAM存储矩阵的行缓冲区而无须增加另外的行存取时间，以提升等效数据访问速度",
    "id": 5513,
    "label": [
      {
        "start": 33,
        "end": 37,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 55,
        "end": 59,
        "text": "存取时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 37,
        "end": 41,
        "text": "存储矩阵",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6937,
    "created_at": "2024-08-16T09:36:55.932538Z",
    "updated_at": "2024-08-16T09:36:55.932538Z",
    "lead_time": 2.351
  },
  {
    "text": "另一个优点是对优先次序的控制相当灵活",
    "id": 5514,
    "annotator": 1,
    "annotation_id": 6938,
    "created_at": "2024-08-16T09:36:57.453843Z",
    "updated_at": "2024-08-16T09:36:57.454842Z",
    "lead_time": 0.871
  },
  {
    "text": "基址寻址：基址寄存器B可以是上述通用寄存器中任何一个",
    "id": 5515,
    "label": [
      {
        "start": 5,
        "end": 10,
        "text": "基址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 21,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "基址寻址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6939,
    "created_at": "2024-08-16T09:36:59.585785Z",
    "updated_at": "2024-08-16T09:36:59.585785Z",
    "lead_time": 1.51
  },
  {
    "text": "图b为DRAM的写周期波形",
    "id": 5516,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "写周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6940,
    "created_at": "2024-08-16T09:37:02.813866Z",
    "updated_at": "2024-08-16T09:37:02.813866Z",
    "lead_time": 2.553
  },
  {
    "text": "与PCI总线使用的单端信号对地传输方式相比，PCIe总线改用差分信号进行数据传送，一个信号由D和D两根信号线传输，信号接收端通过比较这两个信号的差值判断发送端发送的是逻辑“”还是逻辑“”",
    "id": 5517,
    "label": [
      {
        "start": 22,
        "end": 28,
        "text": "PCIe总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 6,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6941,
    "created_at": "2024-08-16T09:37:07.979656Z",
    "updated_at": "2024-08-16T09:37:07.979656Z",
    "lead_time": 4.475
  },
  {
    "text": "具有多种灰度级的黑白显示器称为多灰度级黑白显示器",
    "id": 5518,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "灰度级",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "灰度级",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6942,
    "created_at": "2024-08-16T09:38:39.704804Z",
    "updated_at": "2024-08-16T09:38:39.704804Z",
    "lead_time": 91.061
  },
  {
    "text": "操作控制器产生的控制信号必须定时，为此必须有时序产生器",
    "id": 5519,
    "label": [
      {
        "start": 22,
        "end": 27,
        "text": "时序产生器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "操作控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6943,
    "created_at": "2024-08-16T09:38:58.335929Z",
    "updated_at": "2024-08-16T09:38:58.335929Z",
    "lead_time": 17.909
  },
  {
    "text": "例如，以运算器中累加寄存器AC中的数据为隐含的被操作数，指令字的地址码字段所指明的数为操作数，操作结果又放回累加寄存器AC中，而累加寄存器中原来的数即被覆盖掉了，其数学含义为ACACOPA式中，OP表示操作性质，如加、减、乘、除等；AC表示累加寄存器AC中的数；A表示内存中地址为A的存储单元中的数，或者是运算器中地址为A的通用寄存器中的数；表示把操作运算结果传送到指定的地方",
    "id": 5520,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 162,
        "end": 167,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 142,
        "end": 146,
        "text": "存储单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 56,
        "end": 59,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 66,
        "end": 69,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 122,
        "end": 125,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 153,
        "end": 156,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "指令字",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 134,
        "end": 136,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 137,
        "end": 139,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 157,
        "end": 159,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 91,
        "end": 93,
        "text": "OP",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 97,
        "end": 99,
        "text": "OP",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6944,
    "created_at": "2024-08-16T09:39:14.603713Z",
    "updated_at": "2024-08-16T09:39:14.603713Z",
    "lead_time": 15.35
  },
  {
    "text": "LAD指令的取指周期在LAD指令的取指周期中，CPU的动作完全与MOV指令取指周期中一样图，只是PC提供的指令地址为，按此地址从指令存储器读出“LDAR”指令放入IR中，然后将PC，使PC内容变成，为取下条ADD指令做好准备",
    "id": 5521,
    "label": [
      {
        "start": 32,
        "end": 35,
        "text": "MOV",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 66,
        "end": 69,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 103,
        "end": 108,
        "text": "ADD指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "取指周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "取指周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 37,
        "end": 41,
        "text": "取指周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 53,
        "end": 57,
        "text": "指令地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "LAD",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "LAD",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 81,
        "end": 83,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 64,
        "end": 66,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 77,
        "end": 79,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 61,
        "end": 63,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6945,
    "created_at": "2024-08-16T09:39:18.294155Z",
    "updated_at": "2024-08-16T09:39:18.294155Z",
    "lead_time": 2.028
  },
  {
    "text": "程序控制指令程序控制指令也称转移指令",
    "id": 5522,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "转移指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6946,
    "created_at": "2024-08-16T09:39:23.255762Z",
    "updated_at": "2024-08-16T09:39:23.255762Z",
    "lead_time": 2.876
  },
  {
    "text": "ALU的输出不能直接加到总线上去",
    "id": 5523,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6947,
    "created_at": "2024-08-16T09:39:28.461488Z",
    "updated_at": "2024-08-16T09:39:28.461488Z",
    "lead_time": 2.817
  },
  {
    "text": "写命令通过在时钟上升沿发出下列信号组合发出：CS、RAS、CAS、WE",
    "id": 5524,
    "label": [
      {
        "start": 25,
        "end": 28,
        "text": "RAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "CAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6948,
    "created_at": "2024-08-16T09:39:33.512465Z",
    "updated_at": "2024-08-16T09:39:33.512465Z",
    "lead_time": 3.332
  },
  {
    "text": "在用硬布线实现的操作控制器中，通常，时序产生器除了产生节拍脉冲信号外，还应当产生节拍电位信号",
    "id": 5525,
    "label": [
      {
        "start": 18,
        "end": 23,
        "text": "时序产生器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 33,
        "text": "节拍脉冲信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 40,
        "end": 46,
        "text": "节拍电位信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 13,
        "text": "操作控制器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6949,
    "created_at": "2024-08-16T09:39:37.588028Z",
    "updated_at": "2024-08-16T09:39:37.589031Z",
    "lead_time": 1.85
  },
  {
    "text": "中断请求触发器IR它暂存中断请求线上由设备发出的中断请求信号",
    "id": 5526,
    "label": [
      {
        "start": 12,
        "end": 17,
        "text": "中断请求线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6950,
    "created_at": "2024-08-16T09:39:53.891936Z",
    "updated_at": "2024-08-16T09:39:53.891936Z",
    "lead_time": 14.093
  },
  {
    "text": "操作控制一条指令的功能往往是由若干个操作信号的组合来实现的，因此，CPU管理并产生由内存取出的每条指令的操作信号，把各种操作信号送往相应的部件，从而控制这些部件按指令的要求进行动作",
    "id": 5527,
    "label": [
      {
        "start": 33,
        "end": 36,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 81,
        "end": 83,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6951,
    "created_at": "2024-08-16T09:40:32.729964Z",
    "updated_at": "2024-08-16T09:40:32.729964Z",
    "lead_time": 36.204
  },
  {
    "text": "虚存的访问过程虚存空间的用户程序按照虚地址编程并存放在辅存中",
    "id": 5528,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "虚存空间",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "用户程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "虚地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "虚存",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6952,
    "created_at": "2024-08-16T09:40:38.898854Z",
    "updated_at": "2024-08-16T09:40:38.898854Z",
    "lead_time": 4.513
  },
  {
    "text": "对多个主设备提出的占用总线请求，一般采用优先级或公平策略进行仲裁",
    "id": 5529,
    "label": [
      {
        "start": 11,
        "end": 15,
        "text": "总线请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "优先级",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "主设备",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6953,
    "created_at": "2024-08-16T09:40:46.257654Z",
    "updated_at": "2024-08-16T09:40:46.257654Z",
    "lead_time": 5.594
  },
  {
    "text": "这种用机器语言书写的程序，计算机完全可以“识别”并能执行，所以又叫做目的程序",
    "id": 5530,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "机器语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6954,
    "created_at": "2024-08-16T09:40:50.662279Z",
    "updated_at": "2024-08-16T09:40:50.662279Z",
    "lead_time": 2.678
  },
  {
    "text": "存储管理部件首先用虚地址中的虚页号部分检索TLB：匹配成功时则通过实页号与偏移量拼接出物理地址；TLB匹配不成功则需查询主存中的页表，然后通过实页号与偏移量拼接出物理地址",
    "id": 5531,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "存储管理部件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 47,
        "text": "物理地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 81,
        "end": 85,
        "text": "物理地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "虚地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "偏移量",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 75,
        "end": 78,
        "text": "偏移量",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "虚页号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "TLB",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 48,
        "end": 51,
        "text": "TLB",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 72,
        "end": 74,
        "text": "页号",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 64,
        "end": 66,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 60,
        "end": 62,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "实页号",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6955,
    "created_at": "2024-08-16T09:41:31.522396Z",
    "updated_at": "2024-08-16T09:41:31.522396Z",
    "lead_time": 39.224
  },
  {
    "text": "在汉明码校验中，F电路的运算要比奇偶校验复杂，如位数据时，F部分有位，所以有个异或运算表达式",
    "id": 5532,
    "label": [
      {
        "start": 16,
        "end": 20,
        "text": "奇偶校验",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "汉明码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 24,
        "end": 25,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 33,
        "end": 34,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6956,
    "created_at": "2024-08-16T09:41:34.829826Z",
    "updated_at": "2024-08-16T09:41:34.829826Z",
    "lead_time": 1.995
  },
  {
    "text": "字符显示器只用“”，“”两级灰度就可表示字符的有无，故这种只有两级灰度的显示器称为单色显示器",
    "id": 5533,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "显示器",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6957,
    "created_at": "2024-08-16T09:41:40.788905Z",
    "updated_at": "2024-08-16T09:41:40.788905Z",
    "lead_time": 4.35
  },
  {
    "text": "这种内部组织结构可以支持流水线方式的并行操作",
    "id": 5534,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6958,
    "created_at": "2024-08-16T09:41:43.098872Z",
    "updated_at": "2024-08-16T09:41:43.098872Z",
    "lead_time": 1.087
  },
  {
    "text": "程序查询方式的接口由于主机和外部设备之间进行数据传送的方式不同，因而接口的逻辑结构也相应有所不同",
    "id": 5535,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "外部设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6959,
    "created_at": "2024-08-16T09:41:46.726713Z",
    "updated_at": "2024-08-16T09:41:46.726713Z",
    "lead_time": 2.155
  },
  {
    "text": "所以数组多路通道很像一个多道程序的处理器",
    "id": 5536,
    "label": [
      {
        "start": 17,
        "end": 20,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6960,
    "created_at": "2024-08-16T09:41:51.237812Z",
    "updated_at": "2024-08-16T09:41:51.237812Z",
    "lead_time": 3.111
  },
  {
    "text": "在最坏的情况下，一次访问会在存储器层次结构的三个组成部分都产生缺失：TLB、页表和cache",
    "id": 5537,
    "label": [
      {
        "start": 14,
        "end": 17,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 41,
        "end": 46,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "TLB",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6961,
    "created_at": "2024-08-16T09:42:00.195012Z",
    "updated_at": "2024-08-16T09:42:00.195012Z",
    "lead_time": 7.387
  },
  {
    "text": "然而，只有与出现在总线上的地址相对应的设备，才执行数据传送操作",
    "id": 5538,
    "label": [
      {
        "start": 9,
        "end": 11,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6962,
    "created_at": "2024-08-16T09:42:04.251434Z",
    "updated_at": "2024-08-16T09:42:04.251434Z",
    "lead_time": 2.987
  },
  {
    "text": "然而，随着大规模集成电路技术的发展和软件硬化的趋势，计算机系统的软、硬件界限已经变得模糊了",
    "id": 5539,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "集成电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 31,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6963,
    "created_at": "2024-08-16T09:44:31.701276Z",
    "updated_at": "2024-08-16T09:44:31.701276Z",
    "lead_time": 146.435
  },
  {
    "text": "另一方面，由于此时IR为，封锁门，使IS、IS全为低电平，即排队识别工作不再向下进行",
    "id": 5540,
    "label": [
      {
        "start": 25,
        "end": 28,
        "text": "低电平",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6964,
    "created_at": "2024-08-16T09:44:36.292304Z",
    "updated_at": "2024-08-16T09:44:36.292304Z",
    "lead_time": 3.22
  },
  {
    "text": "这种方法并不需要很多器件",
    "id": 5541,
    "annotator": 1,
    "annotation_id": 6965,
    "created_at": "2024-08-16T09:44:38.588610Z",
    "updated_at": "2024-08-16T09:44:38.589605Z",
    "lead_time": 0.818
  },
  {
    "text": "CPU由数据线上读取数据后，立即撤销读状态信号，从而引起存储器模块撤销数据和确认信号",
    "id": 5542,
    "label": [
      {
        "start": 28,
        "end": 31,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6966,
    "created_at": "2024-08-16T09:44:41.696302Z",
    "updated_at": "2024-08-16T09:44:41.696302Z",
    "lead_time": 1.46
  },
  {
    "text": "当前，随着半导体器件集成度的进一步提高，可以将小容量的cache与CPU集成到同一芯片中，其工作速度接近于CPU的速度，从而组成两级以上的cache系统",
    "id": 5543,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "半导体",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 27,
        "end": 32,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 69,
        "end": 74,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 53,
        "end": 56,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6967,
    "created_at": "2024-08-16T09:44:45.311629Z",
    "updated_at": "2024-08-16T09:44:45.311629Z",
    "lead_time": 1.83
  },
  {
    "text": "在某些情况下在其他部分有此操作码的扩展，用于指定操作的细节也用网点表示",
    "id": 5544,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6968,
    "created_at": "2024-08-16T09:44:47.986164Z",
    "updated_at": "2024-08-16T09:44:47.986164Z",
    "lead_time": 0.954
  },
  {
    "text": "实地址与虚地址在早期的单用户单任务操作系统如DOS中，每台计算机只有一个用户，每次运行一计算机组成原理个程序，且程序不是很大，单个程序完全可以存放在实际内存中",
    "id": 5545,
    "label": [
      {
        "start": 44,
        "end": 51,
        "text": "计算机组成原理",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "虚地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "实地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 76,
        "end": 78,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 52,
        "end": 54,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 56,
        "end": 58,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 65,
        "end": 67,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6969,
    "created_at": "2024-08-16T09:44:51.197393Z",
    "updated_at": "2024-08-16T09:44:51.197393Z",
    "lead_time": 1.139
  },
  {
    "text": "在多级中断之间可以实现中断嵌套，但是同一级内有不同中断源的中断是不能嵌套的，必须是处理完一个中断后再响应和处理同一级内其他中断源",
    "id": 5546,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 61,
        "end": 64,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6970,
    "created_at": "2024-08-16T09:44:57.207227Z",
    "updated_at": "2024-08-16T09:44:57.207227Z",
    "lead_time": 3.988
  },
  {
    "text": "在这种情况下，片上的判断逻辑可以决定对哪个端口优先进行写操作，而对另一个被延迟的端口置BUSY标志BUSY变为低电平，即暂时关闭此端口",
    "id": 5547,
    "label": [
      {
        "start": 43,
        "end": 49,
        "text": "BUSY标志",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 55,
        "end": 58,
        "text": "低电平",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 65,
        "end": 67,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6971,
    "created_at": "2024-08-16T09:45:18.912102Z",
    "updated_at": "2024-08-16T09:45:18.912102Z",
    "lead_time": 7.565
  },
  {
    "text": "另一方面，微指令的顺序控制字段指明下一条微指令的地址是，但是由于判别字段中第位为，表明是P测试，因此不是下一条微指令的真正的地址",
    "id": 5548,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 55,
        "end": 58,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 62,
        "end": 64,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 39,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6972,
    "created_at": "2024-08-16T09:45:35.478938Z",
    "updated_at": "2024-08-16T09:45:35.478938Z",
    "lead_time": 15.176
  },
  {
    "text": "计数器方式这种方法同用程序器计数来产生机器指令地址的方法相类似",
    "id": 5549,
    "label": [
      {
        "start": 19,
        "end": 23,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 16,
        "text": "程序器计数",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6973,
    "created_at": "2024-08-16T09:45:44.901305Z",
    "updated_at": "2024-08-16T09:45:44.901305Z",
    "lead_time": 7.965
  },
  {
    "text": "中断方式特别适合于随机出现的服务",
    "id": 5550,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "中断方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6974,
    "created_at": "2024-08-16T09:45:47.596333Z",
    "updated_at": "2024-08-16T09:45:47.597359Z",
    "lead_time": 1.502
  },
  {
    "text": "假如这个设备没有准备就绪，则第、第步重复进行，一直到这个设备准备好交换数据，发出准备就绪信号“Ready”",
    "id": 5551,
    "annotator": 1,
    "annotation_id": 6975,
    "created_at": "2024-08-16T09:45:49.922021Z",
    "updated_at": "2024-08-16T09:45:49.922021Z",
    "lead_time": 1.109
  },
  {
    "text": "相加两数都是正数，故其和也一定是正数",
    "id": 5552,
    "annotator": 1,
    "annotation_id": 6976,
    "created_at": "2024-08-16T09:45:51.782551Z",
    "updated_at": "2024-08-16T09:45:51.782551Z",
    "lead_time": 1.081
  },
  {
    "text": "图是带有缓冲驱动器的位双向数据总线",
    "id": 5553,
    "label": [
      {
        "start": 13,
        "end": 17,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "驱动器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 11,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6977,
    "created_at": "2024-08-16T09:45:54.809404Z",
    "updated_at": "2024-08-16T09:45:54.809404Z",
    "lead_time": 2.177
  },
  {
    "text": "各个过程段之间设有高速缓冲寄存器，以暂时保存上一过程段子任务处理的结果",
    "id": 5554,
    "label": [
      {
        "start": 11,
        "end": 16,
        "text": "缓冲寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6978,
    "created_at": "2024-08-16T09:45:56.612373Z",
    "updated_at": "2024-08-16T09:45:56.612373Z",
    "lead_time": 0.9
  },
  {
    "text": "例如，如果接收设备在第一个位时间和第三个位时间接收到一个脉冲，而其余的个位时间没有收到脉冲，那么就会知道所收到的二进制信息是",
    "id": 5555,
    "label": [
      {
        "start": 56,
        "end": 59,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 14,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 21,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 37,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6979,
    "created_at": "2024-08-16T09:46:01.386859Z",
    "updated_at": "2024-08-16T09:46:01.386859Z",
    "lead_time": 3.58
  },
  {
    "text": "图示出了一个简单运算器模型，其中ALU为算术逻辑单元，R、R、R为三个寄存器",
    "id": 5556,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 26,
        "text": "算术逻辑单元",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6980,
    "created_at": "2024-08-16T09:46:04.541568Z",
    "updated_at": "2024-08-16T09:46:04.541568Z",
    "lead_time": 2.104
  },
  {
    "text": "电子计算机从总体上来说分为两大类",
    "id": 5557,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "电子计算机",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6981,
    "created_at": "2024-08-16T09:46:06.536542Z",
    "updated_at": "2024-08-16T09:46:06.536542Z",
    "lead_time": 0.818
  },
  {
    "text": "运算器是数据的加工处理部件，是CPU的重要组成部分",
    "id": 5558,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6982,
    "created_at": "2024-08-16T09:46:09.211728Z",
    "updated_at": "2024-08-16T09:46:09.211728Z",
    "lead_time": 1.532
  },
  {
    "text": "当下一个CPU周期开始时，“取指”微指令又从内存读出第二条机器指令",
    "id": 5559,
    "label": [
      {
        "start": 4,
        "end": 9,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "取指",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6983,
    "created_at": "2024-08-16T09:46:13.380397Z",
    "updated_at": "2024-08-16T09:46:13.380397Z",
    "lead_time": 2.714
  },
  {
    "text": "逻辑网络的输入信号来源有三个：来自指令操作码译码器的输出Im；来自执行部件的反馈信息Bj；来自时序产生器的时序信号，包括节拍电位信号M和节拍脉冲信号T",
    "id": 5560,
    "label": [
      {
        "start": 17,
        "end": 22,
        "text": "指令操作码",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 68,
        "end": 74,
        "text": "节拍脉冲信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 60,
        "end": 66,
        "text": "节拍电位信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 47,
        "end": 52,
        "text": "时序产生器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 53,
        "end": 57,
        "text": "时序信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "译码器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6984,
    "created_at": "2024-08-16T09:46:41.677047Z",
    "updated_at": "2024-08-16T09:46:41.678061Z",
    "lead_time": 27.207
  },
  {
    "text": "这样，CPU不能再受理另外的新的中断源发来的中断请求",
    "id": 5561,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6985,
    "created_at": "2024-08-16T09:46:44.222217Z",
    "updated_at": "2024-08-16T09:46:44.222217Z",
    "lead_time": 1.64
  },
  {
    "text": "PCI设备可以是主设备，也可以是从设备，或兼而有之",
    "id": 5562,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "主设备",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "从设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "PCI",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6986,
    "created_at": "2024-08-16T09:46:46.962489Z",
    "updated_at": "2024-08-16T09:46:46.962489Z",
    "lead_time": 1.846
  },
  {
    "text": "溢出处理浮点数的溢出是以其阶码溢出表现出来的",
    "id": 5563,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6987,
    "created_at": "2024-08-16T09:46:50.420512Z",
    "updated_at": "2024-08-16T09:46:50.420652Z",
    "lead_time": 2.596
  },
  {
    "text": "对多级中断，着重说明如下几点",
    "id": 5564,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6988,
    "created_at": "2024-08-16T09:46:52.324110Z",
    "updated_at": "2024-08-16T09:46:52.324110Z",
    "lead_time": 0.957
  },
  {
    "text": "中断可以保证在事件出现的实际时间内及时地进行处理",
    "id": 5565,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6989,
    "created_at": "2024-08-16T09:46:55.197181Z",
    "updated_at": "2024-08-16T09:46:55.197181Z",
    "lead_time": 1.961
  },
  {
    "text": "这是存储器内部准备数据的操作时间，占用的时钟周期数取决于存储器自身的速度",
    "id": 5566,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6990,
    "created_at": "2024-08-16T09:46:57.431358Z",
    "updated_at": "2024-08-16T09:46:57.431358Z",
    "lead_time": 1.346
  },
  {
    "text": "显然这种结构就是独立请求方式的逻辑结构",
    "id": 5567,
    "label": [
      {
        "start": 8,
        "end": 14,
        "text": "独立请求方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6991,
    "created_at": "2024-08-16T09:46:59.379148Z",
    "updated_at": "2024-08-16T09:46:59.379148Z",
    "lead_time": 1.064
  },
  {
    "text": "当某模块被选中并完成位存取时，此模块的个CDRAM芯片同时动作",
    "id": 5568,
    "label": [
      {
        "start": 20,
        "end": 25,
        "text": "CDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 11,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6992,
    "created_at": "2024-08-16T09:47:01.711344Z",
    "updated_at": "2024-08-16T09:47:01.711344Z",
    "lead_time": 1.548
  },
  {
    "text": "在这种情况下，控制器最后发给运算器的个控制信号中，个是节拍脉冲信号LDR，LDR，LDR，其他个都是节拍电位信号，从而保证运算器在前ns时间内进行运算",
    "id": 5569,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 33,
        "text": "节拍脉冲信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 50,
        "end": 56,
        "text": "节拍电位信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 61,
        "end": 64,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6993,
    "created_at": "2024-08-16T09:47:07.231515Z",
    "updated_at": "2024-08-16T09:47:07.231515Z",
    "lead_time": 4.498
  },
  {
    "text": "刷存容量和存取周期是刷新存储器的重要技术指标",
    "id": 5570,
    "label": [
      {
        "start": 10,
        "end": 15,
        "text": "刷新存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "存取周期",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6994,
    "created_at": "2024-08-16T09:47:09.206923Z",
    "updated_at": "2024-08-16T09:47:09.206923Z",
    "lead_time": 1.083
  },
  {
    "text": "思考题三种集中式仲裁方式中，哪种方式效率最高？为什么？分布式仲裁不需要集中的总线仲裁器，每个潜在的主方功能模块都有自己的仲裁号和仲裁器",
    "id": 5571,
    "label": [
      {
        "start": 5,
        "end": 10,
        "text": "集中式仲裁",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 27,
        "end": 32,
        "text": "分布式仲裁",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "仲裁器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 64,
        "end": 67,
        "text": "仲裁器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6995,
    "created_at": "2024-08-16T09:47:12.724426Z",
    "updated_at": "2024-08-16T09:47:12.724426Z",
    "lead_time": 2.591
  },
  {
    "text": "的数据传输率分为Mbs、Mbs、Mbs三档",
    "id": 5572,
    "annotator": 1,
    "annotation_id": 6996,
    "created_at": "2024-08-16T09:47:14.324308Z",
    "updated_at": "2024-08-16T09:47:14.324308Z",
    "lead_time": 0.631
  },
  {
    "text": "图像的概念与图形的概念不同",
    "id": 5573,
    "annotator": 1,
    "annotation_id": 6997,
    "created_at": "2024-08-16T09:47:15.722174Z",
    "updated_at": "2024-08-16T09:47:15.722174Z",
    "lead_time": 0.562
  },
  {
    "text": "为此必须采用激光作为光源，并采用良好的光学系统才能实现",
    "id": 5574,
    "annotator": 1,
    "annotation_id": 6998,
    "created_at": "2024-08-16T09:47:17.177389Z",
    "updated_at": "2024-08-16T09:47:17.177389Z",
    "lead_time": 0.734
  },
  {
    "text": "多级中断源的识别在多级中断中，每一级均有一根中断请求线送往CPU的中断优先级排队电路，对每一级赋予了不同的优先级",
    "id": 5575,
    "label": [
      {
        "start": 22,
        "end": 27,
        "text": "中断请求线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "优先级",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 53,
        "end": 56,
        "text": "优先级",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 6999,
    "created_at": "2024-08-16T09:47:22.396206Z",
    "updated_at": "2024-08-16T09:47:22.396206Z",
    "lead_time": 4.389
  },
  {
    "text": "RISC技术的复杂性在它的编译程序，因此软件系统开发时间比CISC机器长",
    "id": 5576,
    "label": [
      {
        "start": 29,
        "end": 33,
        "text": "CISC",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "RISC",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "编译程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7000,
    "created_at": "2024-08-16T09:47:23.935767Z",
    "updated_at": "2024-08-16T09:47:23.935767Z",
    "lead_time": 0.749
  },
  {
    "text": "PCI总线周期类型由主设备在CBE线上送出的位总线命令代码指明，被目标设备译码确认，然后主从双方协调配合完成指定的总线周期操作",
    "id": 5577,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 57,
        "end": 61,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "主设备",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "译码",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 23,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7001,
    "created_at": "2024-08-16T09:47:26.279009Z",
    "updated_at": "2024-08-16T09:47:26.279009Z",
    "lead_time": 1.625
  },
  {
    "text": "对RAID，用户和系统数据分布在阵列中的所有磁盘上",
    "id": 5578,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "RAID",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7002,
    "created_at": "2024-08-16T09:47:28.059636Z",
    "updated_at": "2024-08-16T09:47:28.059636Z",
    "lead_time": 0.966
  },
  {
    "text": "尾数加减运算对阶结束后，即可进行尾数的加减运算",
    "id": 5579,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "对阶",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7003,
    "created_at": "2024-08-16T09:47:29.883496Z",
    "updated_at": "2024-08-16T09:47:29.883496Z",
    "lead_time": 1.174
  },
  {
    "text": "如果详细分类，Pentium共有种中断和异常",
    "id": 5580,
    "label": [
      {
        "start": 17,
        "end": 19,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7004,
    "created_at": "2024-08-16T09:47:37.151238Z",
    "updated_at": "2024-08-16T09:47:37.151238Z",
    "lead_time": 6.415
  },
  {
    "text": "两个寄存器堆：一个是通用寄存器堆，用于整数和地址指针，其中有RR共个寄存器位长；另一个是扩展寄存器堆，用于浮点数，其中有XX共个寄存器长度可以是位、位或位",
    "id": 5581,
    "label": [
      {
        "start": 10,
        "end": 15,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "寄存器堆",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 46,
        "end": 50,
        "text": "寄存器堆",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 53,
        "end": 56,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 64,
        "end": 67,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "指针",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 38,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 72,
        "end": 73,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 74,
        "end": 75,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 76,
        "end": 77,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7005,
    "created_at": "2024-08-16T09:47:40.653044Z",
    "updated_at": "2024-08-16T09:47:40.653256Z",
    "lead_time": 1.929
  },
  {
    "text": "Pentium还包含一个Lcache，其容量是KB，每行B，采用路组相联结构",
    "id": 5582,
    "label": [
      {
        "start": 13,
        "end": 18,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "组相联",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "KB",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7006,
    "created_at": "2024-08-16T09:47:46.881665Z",
    "updated_at": "2024-08-16T09:47:46.881665Z",
    "lead_time": 5.164
  },
  {
    "text": "其逻辑结构如图所示",
    "id": 5583,
    "annotator": 1,
    "annotation_id": 7007,
    "created_at": "2024-08-16T09:47:48.347216Z",
    "updated_at": "2024-08-16T09:47:48.347216Z",
    "lead_time": 0.684
  },
  {
    "text": "音圈电机是线性电机，可以直接驱动磁头作直线运动，整个驱动定位系统是一个带有速度和位置反馈的闭环控制系统，驱动速度快，定位精度高，因此用于较先进的磁盘驱动器",
    "id": 5584,
    "label": [
      {
        "start": 72,
        "end": 77,
        "text": "磁盘驱动器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7008,
    "created_at": "2024-08-16T09:47:49.703446Z",
    "updated_at": "2024-08-16T09:50:33.745445Z",
    "lead_time": 158.05900000000003
  },
  {
    "text": "CDROM光盘CDROM是只读型光盘，一张光盘容量为MB",
    "id": 5585,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "只读",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "MB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7009,
    "created_at": "2024-08-16T09:50:43.619080Z",
    "updated_at": "2024-08-16T09:50:43.619080Z",
    "lead_time": 5.584
  },
  {
    "text": "思考题你能说出PowerPC机指令系统的特点吗？汇编语言是计算机机器语言二进制指令代码进行符号化的一种表示方式，每一个基本汇编语句对应一条机器指令",
    "id": 5586,
    "label": [
      {
        "start": 69,
        "end": 73,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 61,
        "end": 65,
        "text": "汇编语句",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "汇编语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "机器语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 15,
        "end": 19,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "PC机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7010,
    "created_at": "2024-08-16T09:50:45.798363Z",
    "updated_at": "2024-08-16T09:50:45.798363Z",
    "lead_time": 1.092
  },
  {
    "text": "与此同时，CPU将接口中的状态标志复位",
    "id": 5587,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 19,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7011,
    "created_at": "2024-08-16T09:50:48.840439Z",
    "updated_at": "2024-08-16T09:50:48.840439Z",
    "lead_time": 1.962
  },
  {
    "text": "不同的机器有不同的指令，所以用汇编语言编写的程序不能在其他类型的机器上运行",
    "id": 5588,
    "label": [
      {
        "start": 9,
        "end": 11,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 15,
        "end": 19,
        "text": "汇编语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7012,
    "created_at": "2024-08-16T09:50:50.855548Z",
    "updated_at": "2024-08-16T09:50:50.855548Z",
    "lead_time": 1.093
  },
  {
    "text": "一次IO传送被称为时钟周期或总线周期",
    "id": 5589,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7013,
    "created_at": "2024-08-16T09:50:52.520632Z",
    "updated_at": "2024-08-16T09:50:52.520632Z",
    "lead_time": 0.844
  },
  {
    "text": "为此除了正常的数据位宽度，还增加了附加位，用于读写操作正确性校验",
    "id": 5590,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "数据位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 19,
        "end": 20,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7014,
    "created_at": "2024-08-16T09:50:59.631846Z",
    "updated_at": "2024-08-16T09:50:59.631846Z",
    "lead_time": 6.223
  },
  {
    "text": "计算机中常用这种检错或纠错技术进行存储器读写正确性或传输信息的检验",
    "id": 5591,
    "label": [
      {
        "start": 17,
        "end": 20,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7015,
    "created_at": "2024-08-16T09:51:01.887604Z",
    "updated_at": "2024-08-16T09:51:01.887604Z",
    "lead_time": 0.994
  },
  {
    "text": "由于各种指令的操作功能不同，因此各种指令的指令周期是不尽相同的",
    "id": 5592,
    "label": [
      {
        "start": 21,
        "end": 25,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7016,
    "created_at": "2024-08-16T09:51:04.366118Z",
    "updated_at": "2024-08-16T09:51:04.366118Z",
    "lead_time": 1.241
  }
]