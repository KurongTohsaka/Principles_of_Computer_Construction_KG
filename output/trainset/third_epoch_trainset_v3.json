[
  {
    "text": "图中的两个PCIE桥分别连接图形处理器GPU和其他高速IO设备",
    "id": 5593,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "PCIE",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "GPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "桥",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7026,
    "created_at": "2024-08-17T02:22:29.616341Z",
    "updated_at": "2024-08-17T02:22:29.616341Z",
    "lead_time": 40.293
  },
  {
    "text": "CPU访存指令指定了一个主存地址，为了快速检索，指令中的块号与cache中所有行的标记同时在比较器中进行比较",
    "id": 5594,
    "label": [
      {
        "start": 12,
        "end": 16,
        "text": "主存地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 36,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "访存指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "块号",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7027,
    "created_at": "2024-08-17T02:22:34.330509Z",
    "updated_at": "2024-08-17T02:22:34.330509Z",
    "lead_time": 4.268
  },
  {
    "text": "例如，芯片擦除命令将所有存储元擦除到存储的状态",
    "id": 5595,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "存储元",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7028,
    "created_at": "2024-08-17T02:22:38.784578Z",
    "updated_at": "2024-08-17T02:22:38.784578Z",
    "lead_time": 4.077
  },
  {
    "text": "高级语言与计算机的硬件结构及指令系统无关，在编写程序方面比汇编语言优越",
    "id": 5596,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "汇编语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "高级语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7029,
    "created_at": "2024-08-17T02:22:42.594402Z",
    "updated_at": "2024-08-17T02:22:42.594402Z",
    "lead_time": 3.411
  },
  {
    "text": "在异步定时协议中，后一事件出现在总线上的时刻取决于前一事件的出现时刻，即建立在应答式或互锁机制基础上，不需要统一的公共时钟信号",
    "id": 5597,
    "label": [
      {
        "start": 59,
        "end": 63,
        "text": "时钟信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "异步定时",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7030,
    "created_at": "2024-08-17T02:22:46.062268Z",
    "updated_at": "2024-08-17T02:22:46.062268Z",
    "lead_time": 3.02
  },
  {
    "text": "存储器是由许多存储单元组成的",
    "id": 5598,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "存储单元",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7031,
    "created_at": "2024-08-17T02:22:59.262062Z",
    "updated_at": "2024-08-17T02:22:59.262062Z",
    "lead_time": 12.782
  },
  {
    "text": "仲裁总线包括总线请求线和总线授权线",
    "id": 5599,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "仲裁总线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "总线请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7032,
    "created_at": "2024-08-17T02:23:10.098284Z",
    "updated_at": "2024-08-17T02:23:10.098284Z",
    "lead_time": 10.496
  },
  {
    "text": "根据一条指令中有几个操作数地址，可将该指令称为几操作数指令或几地址指令",
    "id": 5600,
    "label": [
      {
        "start": 10,
        "end": 15,
        "text": "操作数地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7033,
    "created_at": "2024-08-17T02:23:16.026181Z",
    "updated_at": "2024-08-17T02:23:16.026181Z",
    "lead_time": 5.543
  },
  {
    "text": "刷新存储器中存放一帧图形的形状信息，它的地址和屏幕上的地址一一对应，例如，屏幕的分辨率为像素，刷存就要有单元；屏幕上像素的灰度为级，刷存每个单元的字长就是位",
    "id": 5601,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "刷新存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 73,
        "end": 75,
        "text": "字长",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 77,
        "end": 78,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7034,
    "created_at": "2024-08-17T02:23:28.365575Z",
    "updated_at": "2024-08-17T02:23:28.365575Z",
    "lead_time": 11.978
  },
  {
    "text": "总线时钟周期以上跳沿开始，半个周期高电平，半个周期低电平",
    "id": 5602,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "总线时钟",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "上跳沿",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "低电平",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "高电平",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7035,
    "created_at": "2024-08-17T02:23:33.342372Z",
    "updated_at": "2024-08-17T02:23:33.342372Z",
    "lead_time": 4.577
  },
  {
    "text": "年出现了Intel",
    "id": 5603,
    "label": [
      {
        "start": 4,
        "end": 9,
        "text": "Intel",
        "labels": [
          "CORP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7036,
    "created_at": "2024-08-17T02:23:35.474121Z",
    "updated_at": "2024-08-17T02:23:35.474121Z",
    "lead_time": 1.758
  },
  {
    "text": "归纳起来，通过电磁变换，利用磁头写线圈中的脉冲电流，可把一位二进制代码转换成载磁体存储元的不同剩磁状态；反之，通过磁电变换，利用磁头读出线圈，可将由存储元的不同剩磁状态表示的二进制代码转换成电信号输出",
    "id": 5604,
    "label": [
      {
        "start": 30,
        "end": 33,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 87,
        "end": 90,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 41,
        "end": 44,
        "text": "存储元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 74,
        "end": 77,
        "text": "存储元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 64,
        "end": 66,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 29,
        "end": 30,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7037,
    "created_at": "2024-08-17T02:23:41.099426Z",
    "updated_at": "2024-08-17T02:23:41.099426Z",
    "lead_time": 5.291
  },
  {
    "text": "在一个有n个磁盘的阵列中，第组的n个逻辑条带依次物理地存储在n个磁盘的第个条带上，构成第个条带集；第组的n个逻辑条带分布在每个磁盘的第个条带上；依次类推",
    "id": 5605,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 63,
        "end": 65,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7038,
    "created_at": "2024-08-17T02:23:44.931403Z",
    "updated_at": "2024-08-17T02:23:44.931403Z",
    "lead_time": 3.453
  },
  {
    "text": "TLB的作用与主存和CPU之间的cache作用相似，通常由相联存储器实现，容量比慢表小得多，存储慢表中部分信息的副本，可以完成硬件高速检索操作",
    "id": 5606,
    "label": [
      {
        "start": 16,
        "end": 21,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 29,
        "end": 34,
        "text": "相联存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "TLB",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "慢表",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 48,
        "end": 50,
        "text": "慢表",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 63,
        "end": 65,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7039,
    "created_at": "2024-08-17T02:23:47.980148Z",
    "updated_at": "2024-08-17T02:23:47.981146Z",
    "lead_time": 2.677
  },
  {
    "text": "为简化，将片DRAM芯片用一个K位的长条框表示",
    "id": 5607,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 17,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7040,
    "created_at": "2024-08-17T02:23:50.837406Z",
    "updated_at": "2024-08-17T02:23:50.837406Z",
    "lead_time": 2.474
  },
  {
    "text": "在保护模式下，位段基地址加上段内偏移得到位线性地址LA",
    "id": 5608,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "段内偏移",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "线性地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 8,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 21,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7041,
    "created_at": "2024-08-17T02:23:55.296955Z",
    "updated_at": "2024-08-17T02:23:55.296955Z",
    "lead_time": 4.114
  },
  {
    "text": "一维多级中断是指每一级中断中只有一个中断源，而二维多级中断是指每一级中断中有多个中断源",
    "id": 5609,
    "label": [
      {
        "start": 18,
        "end": 21,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7042,
    "created_at": "2024-08-17T02:24:01.023824Z",
    "updated_at": "2024-08-17T02:24:01.023824Z",
    "lead_time": 5.313
  },
  {
    "text": "整理接口模块可以完成一些特别的功能，例如，在需要时可以修改字计数器或当前内存地址寄存器",
    "id": 5610,
    "label": [
      {
        "start": 38,
        "end": 43,
        "text": "地址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 30,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7043,
    "created_at": "2024-08-17T02:24:06.295586Z",
    "updated_at": "2024-08-17T02:24:06.295586Z",
    "lead_time": 4.857
  },
  {
    "text": "一旦两个输入端都有输入信号时，它才产生一个输出信号，从而在控制线能起作用的一个时间宽度中来控制信息在部件中流动",
    "id": 5611,
    "label": [
      {
        "start": 29,
        "end": 32,
        "text": "控制线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7044,
    "created_at": "2024-08-17T02:24:07.926550Z",
    "updated_at": "2024-08-17T02:24:07.927552Z",
    "lead_time": 1.252
  },
  {
    "text": "竞争不到的设备自动撤除其竞争号",
    "id": 5612,
    "annotator": 1,
    "annotation_id": 7045,
    "created_at": "2024-08-17T02:24:10.818424Z",
    "updated_at": "2024-08-17T02:24:10.818424Z",
    "lead_time": 2.548
  },
  {
    "text": "P为出现位P表示此页已被装入主存；P时访问此页将引起缺页中断",
    "id": 5613,
    "label": [
      {
        "start": 14,
        "end": 16,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 5,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "页",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 22,
        "end": 23,
        "text": "页",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "缺页中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7046,
    "created_at": "2024-08-17T02:24:19.587554Z",
    "updated_at": "2024-08-17T02:24:19.587554Z",
    "lead_time": 8.44
  },
  {
    "text": "tRC时间即为读周期时间",
    "id": 5614,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "读周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7047,
    "created_at": "2024-08-17T02:24:21.089260Z",
    "updated_at": "2024-08-17T02:24:21.089260Z",
    "lead_time": 1.156
  },
  {
    "text": "光盘是直径为mm、厚度为mm的单面记录盘片",
    "id": 5615,
    "label": [
      {
        "start": 19,
        "end": 21,
        "text": "盘片",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7048,
    "created_at": "2024-08-17T02:24:23.122311Z",
    "updated_at": "2024-08-17T02:24:23.122311Z",
    "lead_time": 1.613
  },
  {
    "text": "第级是微程序设计级或逻辑电路级",
    "id": 5616,
    "label": [
      {
        "start": 3,
        "end": 9,
        "text": "微程序设计级",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "逻辑电路",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7049,
    "created_at": "2024-08-17T02:24:28.048394Z",
    "updated_at": "2024-08-17T02:24:28.048394Z",
    "lead_time": 4.505
  },
  {
    "text": "将任务连续不断地输入流水线，从而实现了子任务级的并行",
    "id": 5617,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7050,
    "created_at": "2024-08-17T02:24:29.829450Z",
    "updated_at": "2024-08-17T02:24:29.829450Z",
    "lead_time": 1.355
  },
  {
    "text": "程序查询方式的接口是最简单的，如图所示",
    "id": 5618,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "程序查询方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7051,
    "created_at": "2024-08-17T02:24:30.954260Z",
    "updated_at": "2024-08-17T02:24:41.201376Z",
    "lead_time": 9.047
  },
  {
    "text": "当M时，M对进位信号没有任何影响",
    "id": 5619,
    "label": [
      {
        "start": 7,
        "end": 8,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7052,
    "created_at": "2024-08-17T02:24:44.206235Z",
    "updated_at": "2024-08-17T02:24:44.206235Z",
    "lead_time": 1.914
  },
  {
    "text": "内存储器速度高、容量小、价格高，由半导体器件构成",
    "id": 5620,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "内存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "半导体",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7053,
    "created_at": "2024-08-17T02:24:47.663745Z",
    "updated_at": "2024-08-17T02:24:47.663745Z",
    "lead_time": 3.13
  },
  {
    "text": "这就是说，一条指令的取出阶段通常称为取指需要一个CPU周期时间",
    "id": 5621,
    "label": [
      {
        "start": 18,
        "end": 20,
        "text": "取指",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 24,
        "end": 29,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7054,
    "created_at": "2024-08-17T02:24:50.637721Z",
    "updated_at": "2024-08-17T02:24:50.637721Z",
    "lead_time": 2.594
  },
  {
    "text": "电气特性电气特性定义每一根线上信号的传递方向及有效电平范围",
    "id": 5622,
    "label": [
      {
        "start": 25,
        "end": 27,
        "text": "电平",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7055,
    "created_at": "2024-08-17T02:24:51.573495Z",
    "updated_at": "2024-08-17T02:24:51.573495Z",
    "lead_time": 0.581
  },
  {
    "text": "另外，最右端的起始链式输入C必须永远置成“”",
    "id": 5623,
    "annotator": 1,
    "annotation_id": 7056,
    "created_at": "2024-08-17T02:24:52.439492Z",
    "updated_at": "2024-08-17T02:24:52.440526Z",
    "lead_time": 0.534
  },
  {
    "text": "CPU中的专门电路用来解释每个操作码，因此机器就能执行操作码所表示的操作",
    "id": 5624,
    "label": [
      {
        "start": 15,
        "end": 18,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "门电路",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7057,
    "created_at": "2024-08-17T02:25:00.724249Z",
    "updated_at": "2024-08-17T02:25:00.724249Z",
    "lead_time": 7.959
  },
  {
    "text": "对机器指令的操作码用P进行判别测试，然后修改微地址寄存器内容，给出下一条微指令的地址",
    "id": 5625,
    "label": [
      {
        "start": 22,
        "end": 28,
        "text": "微地址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7058,
    "created_at": "2024-08-17T02:25:04.513443Z",
    "updated_at": "2024-08-17T02:25:04.513443Z",
    "lead_time": 3.427
  },
  {
    "text": "对于转移处理，使用了延迟转移法和目标指令cacheTIC法",
    "id": 5626,
    "label": [
      {
        "start": 18,
        "end": 25,
        "text": "指令cache",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7059,
    "created_at": "2024-08-17T02:25:08.041255Z",
    "updated_at": "2024-08-17T02:25:08.041255Z",
    "lead_time": 3.174
  },
  {
    "text": "ARM的指令格式ARM是字长位的嵌入式处理机，年生产了亿片，它具有世界上最流行的指令系统",
    "id": 5627,
    "label": [
      {
        "start": 40,
        "end": 44,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 22,
        "text": "嵌入式处理机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "字长位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7060,
    "created_at": "2024-08-17T02:25:14.961509Z",
    "updated_at": "2024-08-17T02:25:14.961509Z",
    "lead_time": 6.58
  },
  {
    "text": "这对于缓解计算机挂接外设的数量和类型越来越多、主机槽口日益紧张的状况很有吸引力",
    "id": 5628,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7061,
    "created_at": "2024-08-17T02:25:16.704490Z",
    "updated_at": "2024-08-17T02:25:16.704490Z",
    "lead_time": 1.358
  },
  {
    "text": "该芯片由单一V电源供电，内部集成了编程电压发生器和擦除电压发生器，无需外接高电压电源",
    "id": 5629,
    "label": [
      {
        "start": 1,
        "end": 3,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7062,
    "created_at": "2024-08-17T02:25:33.903990Z",
    "updated_at": "2024-08-17T02:25:33.903990Z",
    "lead_time": 16.862
  },
  {
    "text": "判断方式有以下两种",
    "id": 5630,
    "annotator": 1,
    "annotation_id": 7063,
    "created_at": "2024-08-17T02:25:35.570948Z",
    "updated_at": "2024-08-17T02:25:35.570948Z",
    "lead_time": 1.313
  },
  {
    "text": "格式化容量一般是非格式化容量的，英寸的硬盘容量可达数十TB",
    "id": 5631,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "格式化容量",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 14,
        "text": "格式化容量",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "TB",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7064,
    "created_at": "2024-08-17T02:25:39.126018Z",
    "updated_at": "2024-08-17T02:25:39.126018Z",
    "lead_time": 3.23
  },
  {
    "text": "一次型：用户可在这种盘上记录信息，但只能写一次，写后的信息不能再改变，只能读",
    "id": 5632,
    "annotator": 1,
    "annotation_id": 7065,
    "created_at": "2024-08-17T02:25:47.271417Z",
    "updated_at": "2024-08-17T02:25:47.271417Z",
    "lead_time": 7.754
  },
  {
    "text": "磁盘cache的原理在磁盘cache中，由一些数据块组成的一个基本单位称为cache行",
    "id": 5633,
    "label": [
      {
        "start": 37,
        "end": 43,
        "text": "cache行",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 7,
        "text": "磁盘cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 18,
        "text": "磁盘cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7066,
    "created_at": "2024-08-17T02:25:49.790579Z",
    "updated_at": "2024-08-17T02:25:53.403736Z",
    "lead_time": 3.95
  },
  {
    "text": "尽管如此，外围设备还是得到了较快的发展",
    "id": 5634,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7067,
    "created_at": "2024-08-17T02:25:59.816457Z",
    "updated_at": "2024-08-17T02:25:59.816457Z",
    "lead_time": 5.048
  },
  {
    "text": "习惯上所称的电子计算机，一般是指现在广泛应用的电子数字计算机",
    "id": 5635,
    "label": [
      {
        "start": 23,
        "end": 30,
        "text": "电子数字计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 6,
        "end": 11,
        "text": "电子计算机",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7068,
    "created_at": "2024-08-17T02:26:06.283612Z",
    "updated_at": "2024-08-17T02:26:06.283612Z",
    "lead_time": 6.129
  },
  {
    "text": "这类指令主要用于定点或浮点的算术运算，大型机中有向量运算指令，直接对整个向量或矩阵进行求和、求积运算",
    "id": 5636,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "算术运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "大型机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "定点",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7069,
    "created_at": "2024-08-17T02:26:08.278514Z",
    "updated_at": "2024-08-17T02:26:08.278514Z",
    "lead_time": 1.637
  },
  {
    "text": "两浮点数进行加法和减法的运算规则是zxyMxExEyMyEy，ExEy完成浮点加减运算的操作过程大体分为四步：第一步，操作数检查；第二步，比较阶码大小并完成对阶；第三步，尾数进行加或减运算；第四步，结果规格化并进行舍入处理",
    "id": 5637,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 99,
        "end": 104,
        "text": "结果规格化",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 107,
        "end": 111,
        "text": "舍入处理",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 59,
        "end": 62,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 71,
        "end": 73,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 78,
        "end": 80,
        "text": "对阶",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 85,
        "end": 87,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7070,
    "created_at": "2024-08-17T02:26:11.237621Z",
    "updated_at": "2024-08-17T02:26:11.237621Z",
    "lead_time": 2.584
  },
  {
    "text": "它包括以下四类：各种服务性程序，如诊断程序、排错程序、练习程序等；语言程序，如汇编程序、编译程序、解释程序等；操作系统；数据库管理系统",
    "id": 5638,
    "label": [
      {
        "start": 55,
        "end": 59,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 60,
        "end": 67,
        "text": "数据库管理系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 44,
        "end": 48,
        "text": "编译程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 51,
        "end": 53,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7071,
    "created_at": "2024-08-17T02:26:14.970769Z",
    "updated_at": "2024-08-17T02:26:14.970769Z",
    "lead_time": 3.349
  },
  {
    "text": "按IEEE标准，一个浮点数由符号位S、阶码E、尾数M三个域组成",
    "id": 5639,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7072,
    "created_at": "2024-08-17T02:27:43.071635Z",
    "updated_at": "2024-08-17T02:27:43.071635Z",
    "lead_time": 87.653
  },
  {
    "text": "于是她想了第二种方法：每人发一块糖各自去吃，并约定谁吃完后就向她举手报告，再发第二块",
    "id": 5640,
    "annotator": 1,
    "annotation_id": 7073,
    "created_at": "2024-08-17T02:27:44.046718Z",
    "updated_at": "2024-08-17T02:27:44.046718Z",
    "lead_time": 0.636
  },
  {
    "text": "驱动装置，用于移动存储介质",
    "id": 5641,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "驱动装置",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "存储介质",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7074,
    "created_at": "2024-08-17T02:27:44.864949Z",
    "updated_at": "2024-08-17T02:27:44.864949Z",
    "lead_time": 0.533
  },
  {
    "text": "第三条微指令完成ab运算，同时又进行判别测试",
    "id": 5642,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7075,
    "created_at": "2024-08-17T02:27:45.732242Z",
    "updated_at": "2024-08-17T02:27:45.732242Z",
    "lead_time": 0.56
  },
  {
    "text": "其中“加”是指算术加，运算时要考虑进位，而符号“”是指“逻辑加”",
    "id": 5643,
    "label": [
      {
        "start": 28,
        "end": 31,
        "text": "逻辑加",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7076,
    "created_at": "2024-08-17T02:27:50.111474Z",
    "updated_at": "2024-08-17T02:27:50.112438Z",
    "lead_time": 4.07
  },
  {
    "text": "系统存储地址的最高两位A、A作为模块选择地址，译码输出可以分别驱动个这样的MB模块的Sel信号",
    "id": 5644,
    "label": [
      {
        "start": 37,
        "end": 39,
        "text": "MB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "译码",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 11,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7077,
    "created_at": "2024-08-17T02:27:55.747908Z",
    "updated_at": "2024-08-17T02:27:55.747908Z",
    "lead_time": 5.317
  },
  {
    "text": "组成计算机硬件的器件特性决定了时序信号最基本的体制是电位脉冲制",
    "id": 5645,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "计算机硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 19,
        "text": "时序信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "电位",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7078,
    "created_at": "2024-08-17T02:27:59.737365Z",
    "updated_at": "2024-08-17T02:27:59.737365Z",
    "lead_time": 3.659
  },
  {
    "text": "每一种外围设备，都是在它自己的设备控制器控制下进行工作的，而设备控制器则通过IO接口和主机连接，并受主机控制",
    "id": 5646,
    "label": [
      {
        "start": 15,
        "end": 20,
        "text": "设备控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 35,
        "text": "设备控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 42,
        "text": "IO接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7079,
    "created_at": "2024-08-17T02:28:00.814758Z",
    "updated_at": "2024-08-17T02:28:00.814758Z",
    "lead_time": 0.731
  },
  {
    "text": "前者比后者执行的速度快",
    "id": 5647,
    "annotator": 1,
    "annotation_id": 7080,
    "created_at": "2024-08-17T02:28:01.589910Z",
    "updated_at": "2024-08-17T02:28:01.589910Z",
    "lead_time": 0.446
  },
  {
    "text": "一条线上进行双向通信是通过分时和脉冲编码技术实现的",
    "id": 5648,
    "label": [
      {
        "start": 18,
        "end": 20,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7081,
    "created_at": "2024-08-17T02:28:02.366479Z",
    "updated_at": "2024-08-17T02:28:02.366479Z",
    "lead_time": 0.479
  },
  {
    "text": "闪存芯片内部需要有状态机支持其操作，复位信号RESET可以让其通过硬件复位恢复到初始状态",
    "id": 5649,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 20,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 37,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7082,
    "created_at": "2024-08-17T02:28:03.231615Z",
    "updated_at": "2024-08-17T02:28:03.231615Z",
    "lead_time": 0.562
  },
  {
    "text": "DMA方式的主要优点是速度快",
    "id": 5650,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7083,
    "created_at": "2024-08-17T02:28:03.957176Z",
    "updated_at": "2024-08-17T02:28:03.957176Z",
    "lead_time": 0.401
  },
  {
    "text": "SCSI有如下性能特点",
    "id": 5651,
    "annotator": 1,
    "annotation_id": 7084,
    "created_at": "2024-08-17T02:28:04.623816Z",
    "updated_at": "2024-08-17T02:28:04.623816Z",
    "lead_time": 0.357
  },
  {
    "text": "通用计算机适应性很强，但是牺牲了效率、速度和经济性",
    "id": 5652,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "通用计算机",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7085,
    "created_at": "2024-08-17T02:28:05.382397Z",
    "updated_at": "2024-08-17T02:28:05.382397Z",
    "lead_time": 0.463
  },
  {
    "text": "程序和数据存储在主存中，主存通常采用多体交叉存储器，以提高访问速度",
    "id": 5653,
    "label": [
      {
        "start": 18,
        "end": 25,
        "text": "多体交叉存储器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7086,
    "created_at": "2024-08-17T02:28:06.299491Z",
    "updated_at": "2024-08-17T02:28:06.299491Z",
    "lead_time": 0.592
  },
  {
    "text": "微地址的形成方法微指令执行的顺序控制问题，实际上是如何确定下一条微指令的地址问题",
    "id": 5654,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "微地址",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7087,
    "created_at": "2024-08-17T02:28:08.255242Z",
    "updated_at": "2024-08-17T02:28:08.255242Z",
    "lead_time": 1.606
  },
  {
    "text": "这种方式表示的十进制字符串主要用在非数值计算的应用领域中",
    "id": 5655,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 11,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7088,
    "created_at": "2024-08-17T02:28:09.759329Z",
    "updated_at": "2024-08-17T02:28:09.759329Z",
    "lead_time": 1.184
  },
  {
    "text": "后者除执行保存现场、恢复现场、开放中断并返回主程序任务外，需对请求中断的设备进行服务，使其同CPU交换一个字的数据，或作其他服务",
    "id": 5656,
    "label": [
      {
        "start": 46,
        "end": 49,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 53,
        "end": 54,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7089,
    "created_at": "2024-08-17T02:28:13.427829Z",
    "updated_at": "2024-08-17T02:28:13.427829Z",
    "lead_time": 3.355
  },
  {
    "text": "不包含片内cache",
    "id": 5657,
    "label": [
      {
        "start": 5,
        "end": 10,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7090,
    "created_at": "2024-08-17T02:28:14.219434Z",
    "updated_at": "2024-08-17T02:28:14.219434Z",
    "lead_time": 0.468
  },
  {
    "text": "其中所用的基本电路就是三态逻辑电路",
    "id": 5658,
    "label": [
      {
        "start": 13,
        "end": 17,
        "text": "逻辑电路",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7091,
    "created_at": "2024-08-17T02:28:15.133643Z",
    "updated_at": "2024-08-17T02:28:15.133643Z",
    "lead_time": 0.475
  },
  {
    "text": "当M时，封锁了各位的进位输出，即Cni，因此各位的运算结果Fi仅与Yi和Xi有关，故M时，进行逻辑操作",
    "id": 5659,
    "label": [
      {
        "start": 47,
        "end": 51,
        "text": "逻辑操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 8,
        "end": 9,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7092,
    "created_at": "2024-08-17T02:28:21.285753Z",
    "updated_at": "2024-08-17T02:28:21.285753Z",
    "lead_time": 5.844
  },
  {
    "text": "从理论上说，一个具有k级过程段的流水线处理n个任务需要的时钟周期数为Tkkn其中k个时钟周期用于处理第一个任务",
    "id": 5660,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 42,
        "end": 46,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7093,
    "created_at": "2024-08-17T02:28:26.321861Z",
    "updated_at": "2024-08-17T02:28:26.321861Z",
    "lead_time": 4.688
  },
  {
    "text": "存储容量为M字，共需位地址线",
    "id": 5661,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 10,
        "end": 11,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 7,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7094,
    "created_at": "2024-08-17T02:28:30.547639Z",
    "updated_at": "2024-08-17T02:28:30.547639Z",
    "lead_time": 3.867
  },
  {
    "text": "灰度级是指黑白显示器中所显示的像素点的亮暗差别，在彩色显示器中则表现为颜色的不同",
    "id": 5662,
    "label": [
      {
        "start": 25,
        "end": 30,
        "text": "彩色显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "灰度级",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7095,
    "created_at": "2024-08-17T02:28:31.928303Z",
    "updated_at": "2024-08-17T02:28:31.928303Z",
    "lead_time": 1.033
  },
  {
    "text": "如果将四片的P，G输出端送入到先行进位部件CLA，又可实现第二级的先行进位，即组与组之间的先行进位",
    "id": 5663,
    "label": [
      {
        "start": 15,
        "end": 21,
        "text": "先行进位部件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 37,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 48,
        "end": 49,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7096,
    "created_at": "2024-08-17T02:28:33.382571Z",
    "updated_at": "2024-08-17T02:28:33.382571Z",
    "lead_time": 1.134
  },
  {
    "text": "那么两者之间是怎样进行联系的呢控制部件与执行部件的一种联系，就是通过控制线",
    "id": 5664,
    "label": [
      {
        "start": 34,
        "end": 37,
        "text": "控制线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7097,
    "created_at": "2024-08-17T02:28:34.168822Z",
    "updated_at": "2024-08-17T02:28:34.168822Z",
    "lead_time": 0.449
  },
  {
    "text": "每条DMA线在优先权结构中具有固定位置，一般DMA线具有最高优先权，DMA线具有最低优先权",
    "id": 5665,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7098,
    "created_at": "2024-08-17T02:28:37.092051Z",
    "updated_at": "2024-08-17T02:28:37.092051Z",
    "lead_time": 2.605
  },
  {
    "text": "在C周期中，如CPU有访内请求，同样传送地址、数据等信号",
    "id": 5666,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7099,
    "created_at": "2024-08-17T02:28:38.016538Z",
    "updated_at": "2024-08-17T02:28:38.016538Z",
    "lead_time": 0.591
  },
  {
    "text": "如果某一个应用程序直接用微指令来编写，那么可在这一级上运行应用程序",
    "id": 5667,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "应用程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "应用程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7100,
    "created_at": "2024-08-17T02:28:38.804221Z",
    "updated_at": "2024-08-17T02:28:38.804221Z",
    "lead_time": 0.458
  },
  {
    "text": "标志寄存器EFLAGS的内容也压入堆栈",
    "id": 5668,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "堆栈",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7101,
    "created_at": "2024-08-17T02:28:39.604720Z",
    "updated_at": "2024-08-17T02:28:39.604720Z",
    "lead_time": 0.46
  },
  {
    "text": "故在对总线性能要求非常高的系统中，可以将每个读周期分为三步：主方通过总线向从方发送地址和读命令；从方根据命令进行内部读操作，这是从方执行读命令的数据准备时间；从方通过数据总线向主方提供数据",
    "id": 5669,
    "label": [
      {
        "start": 83,
        "end": 87,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "读周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 58,
        "end": 61,
        "text": "读操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7102,
    "created_at": "2024-08-17T02:28:41.628292Z",
    "updated_at": "2024-08-17T02:28:41.628292Z",
    "lead_time": 1.708
  },
  {
    "text": "在微型机系统中，CRT显示输出和键盘输入是两个独立的设备，显示系统由插在主机槽中的显示适配器卡和显示器两部分组成，而且将字符显示与图形显示结合为一体",
    "id": 5670,
    "label": [
      {
        "start": 41,
        "end": 46,
        "text": "显示适配器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 13,
        "text": "CRT显示",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 48,
        "end": 51,
        "text": "显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "微型机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "键盘",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7103,
    "created_at": "2024-08-17T02:28:45.649252Z",
    "updated_at": "2024-08-17T02:28:45.649252Z",
    "lead_time": 3.673
  },
  {
    "text": "多数情况下只使用两个源寄存器，少数指令涉及两个源寄存器内容相乘，然后再加上或减去第三个源寄存器内容",
    "id": 5671,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "源寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "源寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 47,
        "text": "源寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7104,
    "created_at": "2024-08-17T02:30:32.704201Z",
    "updated_at": "2024-08-17T02:30:32.704201Z",
    "lead_time": 106.638
  },
  {
    "text": "它的指令格式简单，指令数量少，通用寄存器个",
    "id": 5672,
    "label": [
      {
        "start": 15,
        "end": 20,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7105,
    "created_at": "2024-08-17T02:30:35.036165Z",
    "updated_at": "2024-08-17T02:30:35.036165Z",
    "lead_time": 1.823
  },
  {
    "text": "异常中断的优先级高于外部中断的优先级，这是因为异常中断发生在取一条指令或译码一条指令或执行一条指令时出现故障的情况下，情况更为紧急",
    "id": 5673,
    "label": [
      {
        "start": 36,
        "end": 38,
        "text": "译码",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "优先级",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "优先级",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "异常中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "异常中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "外部中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7106,
    "created_at": "2024-08-17T02:30:49.899498Z",
    "updated_at": "2024-08-17T02:30:55.282578Z",
    "lead_time": 17.856
  },
  {
    "text": "CPU依据中断向量号获取中断服务子程序入口地址，但在实模式下和保护模式下采用不同的途径",
    "id": 5674,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 10,
        "text": "中断向量号",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7107,
    "created_at": "2024-08-17T02:31:07.218347Z",
    "updated_at": "2024-08-17T02:31:07.218347Z",
    "lead_time": 10.505
  },
  {
    "text": "在统一的时钟信号控制下，数据从一个过程段流向相邻的过程段",
    "id": 5675,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7108,
    "created_at": "2024-08-17T02:31:09.769950Z",
    "updated_at": "2024-08-17T02:31:09.769950Z",
    "lead_time": 2.043
  },
  {
    "text": "为了扩大存储容量，在内存储器之外增加容量更大但访问速度稍慢的外存储器外存，或者称为辅助存储器辅存",
    "id": 5676,
    "label": [
      {
        "start": 41,
        "end": 46,
        "text": "辅助存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "内存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "外存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7109,
    "created_at": "2024-08-17T02:31:14.284590Z",
    "updated_at": "2024-08-17T02:31:14.284590Z",
    "lead_time": 4.049
  },
  {
    "text": "事实上，除了CPU和主存外，计算机系统的每一部分都可作为一个外围设备来看待",
    "id": 5677,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 19,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7110,
    "created_at": "2024-08-17T02:31:28.011491Z",
    "updated_at": "2024-08-17T02:31:28.011491Z",
    "lead_time": 13.197
  },
  {
    "text": "但cache主存和主存辅存这两个存储层次也有许多不同之处",
    "id": 5678,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 1,
        "end": 6,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7111,
    "created_at": "2024-08-17T02:31:35.204194Z",
    "updated_at": "2024-08-17T02:31:35.204194Z",
    "lead_time": 6.712
  },
  {
    "text": "这种方式将cache分成u组，每组v行",
    "id": 5679,
    "label": [
      {
        "start": 5,
        "end": 10,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7112,
    "created_at": "2024-08-17T02:31:37.814307Z",
    "updated_at": "2024-08-17T02:31:37.814307Z",
    "lead_time": 2.078
  },
  {
    "text": "微型计算机系统的标准总线从ISA总线位，带宽MBs发展到EISA总线位，带宽MBs和VESA总线位，带宽MBs，又进一步发展到PCI总线位，带宽MBs",
    "id": 5680,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "微型计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 13,
        "end": 18,
        "text": "ISA总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 34,
        "text": "ISA总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 63,
        "end": 68,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 46,
        "text": "VESA",
        "labels": [
          "GRP"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "标准总线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "MBs",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "MBs",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 52,
        "end": 55,
        "text": "MBs",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 72,
        "end": 75,
        "text": "MBs",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "带宽",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "带宽",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "带宽",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 70,
        "end": 72,
        "text": "带宽",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 19,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 34,
        "end": 35,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 48,
        "end": 49,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 68,
        "end": 69,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7113,
    "created_at": "2024-08-17T02:31:47.039647Z",
    "updated_at": "2024-08-17T02:31:47.039647Z",
    "lead_time": 8.515
  },
  {
    "text": "将大多数操作安排在一个较短的机器周期内完成，对某些时间紧张的操作，则采取延长机器周期的办法来解决",
    "id": 5681,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "机器周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 38,
        "end": 42,
        "text": "机器周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7114,
    "created_at": "2024-08-17T02:31:54.060564Z",
    "updated_at": "2024-08-17T02:31:54.060564Z",
    "lead_time": 6.359
  },
  {
    "text": "表中地址和数据均为十六进制",
    "id": 5682,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "十六进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7115,
    "created_at": "2024-08-17T02:31:59.014515Z",
    "updated_at": "2024-08-17T02:31:59.014515Z",
    "lead_time": 4.268
  },
  {
    "text": "段式虚拟存储器页面是主存物理空间中划分出来的等长的固定区域",
    "id": 5683,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "虚拟存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "页面",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7116,
    "created_at": "2024-08-17T02:32:12.490389Z",
    "updated_at": "2024-08-17T02:32:12.490389Z",
    "lead_time": 12.435
  },
  {
    "text": "原因之二，只有两个操作数相加的加法器，难以胜任将n个位积一次相加起来的运算",
    "id": 5684,
    "label": [
      {
        "start": 15,
        "end": 18,
        "text": "加法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 27,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7117,
    "created_at": "2024-08-17T02:33:29.497526Z",
    "updated_at": "2024-08-17T02:33:29.497526Z",
    "lead_time": 75.382
  },
  {
    "text": "从存放位置的灵活性和命中率来看，前者为优；从比较器电路简单及硬件投资来说，后者为佳",
    "id": 5685,
    "label": [
      {
        "start": 22,
        "end": 27,
        "text": "比较器电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "命中率",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 4,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7118,
    "created_at": "2024-08-17T02:33:32.551404Z",
    "updated_at": "2024-08-17T02:33:32.551404Z",
    "lead_time": 1.624
  },
  {
    "text": "目前高质量图形显示器采用这种随机扫描方式",
    "id": 5686,
    "label": [
      {
        "start": 5,
        "end": 10,
        "text": "图形显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "随机扫描",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7119,
    "created_at": "2024-08-17T02:33:34.874665Z",
    "updated_at": "2024-08-17T02:33:34.874665Z",
    "lead_time": 1.075
  },
  {
    "text": "一个双稳态半导体电路或一个CMOS晶体管或磁性材料的存储元，均可以存储一位二进制代码",
    "id": 5687,
    "label": [
      {
        "start": 37,
        "end": 40,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "半导体",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "存储元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "晶体管",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 37,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7120,
    "created_at": "2024-08-17T02:33:37.544440Z",
    "updated_at": "2024-08-17T02:33:37.545474Z",
    "lead_time": 1.7
  },
  {
    "text": "数据在磁盘上的记录格式如图所示",
    "id": 5688,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7121,
    "created_at": "2024-08-17T02:33:49.694639Z",
    "updated_at": "2024-08-17T02:33:49.694639Z",
    "lead_time": 10.731
  },
  {
    "text": "由表可见，数据位位时，附加的校验码要求为位，存储器字长变成位，位成本增加了",
    "id": 5689,
    "label": [
      {
        "start": 22,
        "end": 25,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "数据位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "字长",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 9,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 21,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 29,
        "end": 30,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 31,
        "end": 32,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7122,
    "created_at": "2024-08-17T02:34:28.563481Z",
    "updated_at": "2024-08-17T02:34:28.563481Z",
    "lead_time": 37.622
  },
  {
    "text": "CPU每取出一条指令并执行这条指令，都要完成一系列的操作，这一系列操作所需的时间通常叫做一个指令周期",
    "id": 5690,
    "label": [
      {
        "start": 46,
        "end": 50,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7123,
    "created_at": "2024-08-17T02:34:31.106583Z",
    "updated_at": "2024-08-17T02:34:31.107583Z",
    "lead_time": 1.402
  },
  {
    "text": "在二进制数中，只有和两个数字",
    "id": 5691,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7124,
    "created_at": "2024-08-17T02:34:36.459959Z",
    "updated_at": "2024-08-17T02:34:36.459959Z",
    "lead_time": 4.368
  },
  {
    "text": "垂直型微指令的结构类似于机器指令的结构",
    "id": 5692,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "垂直型微指令",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7125,
    "created_at": "2024-08-17T02:34:38.564467Z",
    "updated_at": "2024-08-17T02:34:38.565483Z",
    "lead_time": 1.17
  },
  {
    "text": "当出现不够减时，部分余数相对于被除数来说要改变符号",
    "id": 5693,
    "annotator": 1,
    "annotation_id": 7126,
    "created_at": "2024-08-17T02:34:40.494641Z",
    "updated_at": "2024-08-17T02:34:40.494641Z",
    "lead_time": 0.842
  },
  {
    "text": "模拟计算机的特点是数值由连续量来表示，运算过程也是连续的",
    "id": 5694,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7127,
    "created_at": "2024-08-17T02:34:55.794095Z",
    "updated_at": "2024-08-17T02:34:55.794095Z",
    "lead_time": 14.612
  },
  {
    "text": "operand指明第个源操作数",
    "id": 5695,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7128,
    "created_at": "2024-08-17T02:34:58.904466Z",
    "updated_at": "2024-08-17T02:34:58.904466Z",
    "lead_time": 2.513
  },
  {
    "text": "为了判定能否发射指令，使用了计分牌方法",
    "id": 5696,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7129,
    "created_at": "2024-08-17T02:35:02.024509Z",
    "updated_at": "2024-08-17T02:35:02.024509Z",
    "lead_time": 2.396
  },
  {
    "text": "为了提高CPU和主存之间的数据交换速率，可以在不同层次采用不同的技术加速存储器访问速度：芯片技术提高单个芯片的访问速度",
    "id": 5697,
    "label": [
      {
        "start": 44,
        "end": 46,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 52,
        "end": 54,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7130,
    "created_at": "2024-08-17T02:38:15.260513Z",
    "updated_at": "2024-08-17T02:38:15.260513Z",
    "lead_time": 192.301
  },
  {
    "text": "与查询方式相比，在DMA方式中CPU不必等待查询，可以执行自身的程序，而且直接由硬件DMA控制器控制传输过程，CPU不必执行指令",
    "id": 5698,
    "label": [
      {
        "start": 42,
        "end": 48,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 55,
        "end": 58,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 62,
        "end": 64,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7131,
    "created_at": "2024-08-17T02:38:25.581660Z",
    "updated_at": "2024-08-17T02:38:25.581660Z",
    "lead_time": 9.721
  },
  {
    "text": "如在图中，“中断周期”由硬件实现，而中断服务子程序由机器指令序列实现",
    "id": 5699,
    "label": [
      {
        "start": 26,
        "end": 30,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "中断周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7132,
    "created_at": "2024-08-17T02:38:37.221227Z",
    "updated_at": "2024-08-17T02:38:37.221227Z",
    "lead_time": 11.111
  },
  {
    "text": "由于段长不一定是的整数次幂，因而不能简单地像分页方式那样用虚地址和实地址的最低若干二进制位作为段内偏移量，并与段号进行直接拼接，必须用加法操作通过段起址与段内偏移量的求和运算求得物理地址",
    "id": 5700,
    "label": [
      {
        "start": 89,
        "end": 93,
        "text": "物理地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 45,
        "text": "二进制位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 47,
        "end": 51,
        "text": "段内偏移",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 77,
        "end": 81,
        "text": "段内偏移",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "虚地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "实地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 73,
        "end": 76,
        "text": "段起址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "段号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "分页",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7133,
    "created_at": "2024-08-17T02:38:41.591736Z",
    "updated_at": "2024-08-17T02:38:41.591736Z",
    "lead_time": 3.838
  },
  {
    "text": "当有一个以上的异常或中断发生时，CPU以一个预先确定的优先顺序为它们先后进行服务",
    "id": 5701,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7134,
    "created_at": "2024-08-17T02:38:53.875732Z",
    "updated_at": "2024-08-17T02:38:53.875732Z",
    "lead_time": 11.735
  },
  {
    "text": "其算术指令格式如下：指令格式中各个字段的含义如下：OP字段操作码，指定一条指令的基本操作",
    "id": 5702,
    "label": [
      {
        "start": 29,
        "end": 32,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "OP",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7135,
    "created_at": "2024-08-17T02:38:59.721364Z",
    "updated_at": "2024-08-17T02:38:59.721364Z",
    "lead_time": 5.395
  },
  {
    "text": "cache的行号i和主存的块号j有如下函数关系：ijmodm式中，m为cache中的总行数",
    "id": 5703,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 35,
        "end": 40,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "块号",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7136,
    "created_at": "2024-08-17T02:39:10.045671Z",
    "updated_at": "2024-08-17T02:39:10.045671Z",
    "lead_time": 9.698
  },
  {
    "text": "第一步写到横格纸的第行，第二步写到第行，以此类推",
    "id": 5704,
    "annotator": 1,
    "annotation_id": 7137,
    "created_at": "2024-08-17T02:40:52.494565Z",
    "updated_at": "2024-08-17T02:40:52.494565Z",
    "lead_time": 101.918
  },
  {
    "text": "CDR光盘有与CDROM的相似的圆形轨道，但不再是机械的在盘面上烧印凹痕来表示数据",
    "id": 5705,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "盘面",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7138,
    "created_at": "2024-08-17T02:40:53.837694Z",
    "updated_at": "2024-08-17T02:40:53.837694Z",
    "lead_time": 0.699
  },
  {
    "text": "利用逻辑运算可以进行两个数的比较，或者从某个数中选取某几位等操作",
    "id": 5706,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "逻辑运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 28,
        "end": 29,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7139,
    "created_at": "2024-08-17T02:41:03.888294Z",
    "updated_at": "2024-08-17T02:41:03.888294Z",
    "lead_time": 2.634
  },
  {
    "text": "例如：ADDRRR；RRRSUBRRR；RRRANDRRR；RRR如表所示，ADD指令在时钟时将运算结果写入寄存器堆R，但SUB指令在时钟时读寄存器堆R到ALU运算，AND指令在时钟时读寄存器堆R到ALU运算",
    "id": 5707,
    "label": [
      {
        "start": 54,
        "end": 57,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 43,
        "text": "ADD指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 61,
        "end": 66,
        "text": "SUB指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 71,
        "end": 75,
        "text": "寄存器堆",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 93,
        "end": 97,
        "text": "寄存器堆",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "SUB",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "AND",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 83,
        "end": 86,
        "text": "AND",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 77,
        "end": 80,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 99,
        "end": 102,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "DDR",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 86,
        "end": 88,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 67,
        "end": 69,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 89,
        "end": 91,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7140,
    "created_at": "2024-08-17T02:41:12.861314Z",
    "updated_at": "2024-08-17T02:41:12.861314Z",
    "lead_time": 8.417
  },
  {
    "text": "另外，利用键盘上指定的字符与屏幕上的光标结合，可用来移动光标，拾取图形坐标，指定绘图命令等",
    "id": 5708,
    "label": [
      {
        "start": 5,
        "end": 7,
        "text": "键盘",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7141,
    "created_at": "2024-08-17T02:41:18.639284Z",
    "updated_at": "2024-08-17T02:41:18.639284Z",
    "lead_time": 5.198
  },
  {
    "text": "早期的DRAM需要由存储器控制器从外部向DRAM芯片送入刷新行地址并启动一次刷新，而现代的DRAM都支持自动刷新功能，由芯片内部提供刷新行地址",
    "id": 5709,
    "label": [
      {
        "start": 10,
        "end": 16,
        "text": "存储器控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 45,
        "end": 49,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "行地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 68,
        "end": 71,
        "text": "行地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 60,
        "end": 62,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7142,
    "created_at": "2024-08-17T02:41:23.217460Z",
    "updated_at": "2024-08-17T02:41:23.217460Z",
    "lead_time": 4.072
  },
  {
    "text": "从列地址被锁存到数据有效输出的时间间隔称为CAS延迟CL，图中CL",
    "id": 5710,
    "label": [
      {
        "start": 21,
        "end": 24,
        "text": "CAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "列地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7143,
    "created_at": "2024-08-17T02:41:30.429273Z",
    "updated_at": "2024-08-17T02:41:30.429273Z",
    "lead_time": 6.654
  },
  {
    "text": "因为在计算机中，各种指令的操作信号均受到时间的严格定时",
    "id": 5711,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7144,
    "created_at": "2024-08-17T02:41:33.234236Z",
    "updated_at": "2024-08-17T02:41:33.234236Z",
    "lead_time": 2.269
  },
  {
    "text": "逻辑非也称求反",
    "id": 5712,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "逻辑非",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7145,
    "created_at": "2024-08-17T02:41:57.051657Z",
    "updated_at": "2024-08-17T02:41:57.051657Z",
    "lead_time": 23.356
  },
  {
    "text": "从例和例中看到，当最高有效位产生进位而符号位无进位时，产生正溢；当最高有效位无进位而符号位有进位时，产生负溢",
    "id": 5713,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "有效位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "有效位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 42,
        "end": 45,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 52,
        "end": 54,
        "text": "负溢",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7146,
    "created_at": "2024-08-17T02:42:08.309846Z",
    "updated_at": "2024-08-17T02:42:08.309846Z",
    "lead_time": 10.767
  },
  {
    "text": "假设用一个n位字来表示一个定点数x，其中一位xn用来表示数的符号，其余位数代表它的量值",
    "id": 5714,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "定点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 7,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 21,
        "end": 22,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 35,
        "end": 36,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 8,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7147,
    "created_at": "2024-08-17T02:42:12.643398Z",
    "updated_at": "2024-08-17T02:42:12.643398Z",
    "lead_time": 3.858
  },
  {
    "text": "每两片M位的CDRAM芯片的列选通信号CAS接在一起，形成一个M位MB的片组",
    "id": 5715,
    "label": [
      {
        "start": 14,
        "end": 19,
        "text": "列选通信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 11,
        "text": "CDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "CAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "MB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 5,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 32,
        "end": 33,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7148,
    "created_at": "2024-08-17T02:42:16.006971Z",
    "updated_at": "2024-08-17T02:42:16.006971Z",
    "lead_time": 2.855
  },
  {
    "text": "除非遇到停机指令，否则这个循环将一直继续下去，其过程如图所示",
    "id": 5716,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7149,
    "created_at": "2024-08-17T02:42:18.672268Z",
    "updated_at": "2024-08-17T02:42:18.672268Z",
    "lead_time": 2.132
  },
  {
    "text": "如果是读周期，此位组内容被读出；如果是写周期，将总线上数据写入此位组",
    "id": 5717,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "读周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "写周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 9,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 32,
        "end": 33,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7150,
    "created_at": "2024-08-17T02:42:25.885701Z",
    "updated_at": "2024-08-17T02:42:25.885701Z",
    "lead_time": 6.735
  },
  {
    "text": "图a是指令顺序寻址方式的示意图",
    "id": 5718,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7151,
    "created_at": "2024-08-17T02:42:27.038387Z",
    "updated_at": "2024-08-17T02:42:27.038387Z",
    "lead_time": 0.584
  },
  {
    "text": "运算器包括ALU、阵列乘除器、寄存器、多路开关、三态缓冲器、数据总线等逻辑部件",
    "id": 5719,
    "label": [
      {
        "start": 30,
        "end": 34,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7152,
    "created_at": "2024-08-17T02:42:30.387296Z",
    "updated_at": "2024-08-17T02:42:30.387296Z",
    "lead_time": 2.797
  },
  {
    "text": "对于比较复杂的计算题目，计算机在运算前必须化成一步一步简单的加、减、乘、除等基本操作来做",
    "id": 5720,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7153,
    "created_at": "2024-08-17T02:42:31.845570Z",
    "updated_at": "2024-08-17T02:42:31.845570Z",
    "lead_time": 0.897
  },
  {
    "text": "流水CPU的时空图计算机的流水处理过程非常类似于工厂中的流水装配线",
    "id": 5721,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "流水CPU",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "时空图",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "流水",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "流水",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7154,
    "created_at": "2024-08-17T02:43:05.464272Z",
    "updated_at": "2024-08-17T02:43:05.465316Z",
    "lead_time": 33.095
  },
  {
    "text": "写到存储元时，输出缓冲器关闭、刷新缓冲器关闭，输入缓冲器打开RW为低，输入数据DIN送到存储元位线上，而行选线为高，打开MOS管，于是位线上的高电平给电容器充电，表示存储了",
    "id": 5722,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "存储元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 44,
        "end": 47,
        "text": "存储元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 71,
        "end": 74,
        "text": "高电平",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 47,
        "end": 48,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 67,
        "end": 68,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7155,
    "created_at": "2024-08-17T02:43:15.763430Z",
    "updated_at": "2024-08-17T02:43:15.763430Z",
    "lead_time": 9.737
  },
  {
    "text": "在程序开始执行前，必须将它的起始地址，即程序的第一条指令所在的指存单元地址送入PC，因此PC的内容即是从指存提取的第一条指令的地址",
    "id": 5723,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "起始地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 60,
        "end": 62,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 63,
        "end": 65,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7156,
    "created_at": "2024-08-17T02:43:20.355591Z",
    "updated_at": "2024-08-17T02:43:20.355591Z",
    "lead_time": 4.058
  },
  {
    "text": "在常规主存储器设计中，访问地址采用顺序方式，如图a所示",
    "id": 5724,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "主存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "访问地址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7157,
    "created_at": "2024-08-17T02:43:22.628328Z",
    "updated_at": "2024-08-17T02:43:22.628328Z",
    "lead_time": 1.709
  },
  {
    "text": "根据工艺和特性的不同，只读存储器又分为掩膜ROM、一次可编程ROMPROM和可擦除PROMEPROM，后者又分为紫外线擦除EPROMUVEPROM、电擦除EPROMEEPROM或EPROM和闪速Flash只读存储器",
    "id": 5725,
    "label": [
      {
        "start": 11,
        "end": 16,
        "text": "只读存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 27,
        "end": 33,
        "text": "可编程ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 45,
        "end": 50,
        "text": "EPROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 68,
        "end": 73,
        "text": "EPROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 83,
        "end": 88,
        "text": "EPROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 89,
        "end": 94,
        "text": "EPROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 102,
        "end": 107,
        "text": "只读存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 30,
        "end": 37,
        "text": "ROMPROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 24,
        "text": "掩膜ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 38,
        "end": 45,
        "text": "可擦除PROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 74,
        "end": 82,
        "text": "电擦除EPROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 56,
        "end": 66,
        "text": "紫外线擦除EPROM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7158,
    "created_at": "2024-08-17T02:44:28.414406Z",
    "updated_at": "2024-08-17T02:45:08.355476Z",
    "lead_time": 101.023
  },
  {
    "text": "这是因为第一次写cache命中时，CPU要在总线上启动一个存储写周期，其他cache监听到此主存块地址及写信号后，即可复制该块或及时作废，以便维护系统全部cache的一致性",
    "id": 5726,
    "label": [
      {
        "start": 8,
        "end": 13,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 37,
        "end": 42,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 77,
        "end": 82,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 48,
        "end": 51,
        "text": "块地址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "写周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7159,
    "created_at": "2024-08-17T02:45:14.058433Z",
    "updated_at": "2024-08-17T02:45:14.058433Z",
    "lead_time": 4.134
  },
  {
    "text": "就是说，从存储器取出第一条指令，然后执行这条指令；接着从存储器取出第二条指令，再执行第二条指令；接着再取出第三条指令这种程序顺序执行的过程，我们称为指令的顺序寻址方式",
    "id": 5727,
    "label": [
      {
        "start": 79,
        "end": 83,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 56,
        "end": 58,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 74,
        "end": 76,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 60,
        "end": 62,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7160,
    "created_at": "2024-08-17T02:45:16.898698Z",
    "updated_at": "2024-08-17T02:45:16.898698Z",
    "lead_time": 2.27
  },
  {
    "text": "理论上讲，数的位数可以任意多",
    "id": 5728,
    "label": [
      {
        "start": 7,
        "end": 8,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7161,
    "created_at": "2024-08-17T02:45:19.498304Z",
    "updated_at": "2024-08-17T02:45:19.498304Z",
    "lead_time": 2.025
  },
  {
    "text": "接下来对结果进行规格化，这是通过将求得的和向左或向右做适当的移位操作同时相应地增大或减小和的指数部分来实现的",
    "id": 5729,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "规格化",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "移位",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7162,
    "created_at": "2024-08-17T02:45:20.910845Z",
    "updated_at": "2024-08-17T02:45:20.910845Z",
    "lead_time": 0.835
  },
  {
    "text": "鉴于串行乘法器已被淘汰，下面只介绍并行乘法器",
    "id": 5730,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "乘法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "乘法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7163,
    "created_at": "2024-08-17T02:45:22.355684Z",
    "updated_at": "2024-08-17T02:45:22.355684Z",
    "lead_time": 0.901
  },
  {
    "text": "机器内部原因导致出错引起的中断叫内中断，也叫异常",
    "id": 5731,
    "label": [
      {
        "start": 13,
        "end": 15,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "内中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7164,
    "created_at": "2024-08-17T02:45:23.859482Z",
    "updated_at": "2024-08-17T02:45:32.730934Z",
    "lead_time": 7.162999999999999
  },
  {
    "text": "如果两个数相加后，其结果的符号位出现“”或“”两种组合时，表示发生溢出",
    "id": 5732,
    "label": [
      {
        "start": 33,
        "end": 35,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7165,
    "created_at": "2024-08-17T02:45:35.074013Z",
    "updated_at": "2024-08-17T02:45:35.074013Z",
    "lead_time": 0.954
  },
  {
    "text": "这样，用户编制程序时使用的地址称为虚地址或逻辑地址，其对应的存储空间称为虚存空间或逻辑地址空间；而计算机物理内存的访问地址则称为实地址或物理地址，其对应的存储空间称为物理存储空间或主存空间",
    "id": 5733,
    "label": [
      {
        "start": 83,
        "end": 89,
        "text": "物理存储空间",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 41,
        "end": 47,
        "text": "逻辑地址空间",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 90,
        "end": 94,
        "text": "主存空间",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 57,
        "end": 61,
        "text": "访问地址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 36,
        "end": 40,
        "text": "虚存空间",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 52,
        "end": 56,
        "text": "物理内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 68,
        "end": 72,
        "text": "物理地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "存储空间",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 77,
        "end": 81,
        "text": "存储空间",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "逻辑地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "虚地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 64,
        "end": 67,
        "text": "实地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 49,
        "end": 52,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7166,
    "created_at": "2024-08-17T02:45:37.343401Z",
    "updated_at": "2024-08-17T02:45:37.343401Z",
    "lead_time": 1.648
  },
  {
    "text": "现代磁盘设备通常会配置磁盘cache，单位时间内从硬盘cache向主机传送的数据信息量称为外部数据传输率，与磁盘的接口类型和磁盘缓存大小有关",
    "id": 5734,
    "label": [
      {
        "start": 62,
        "end": 66,
        "text": "磁盘缓存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 18,
        "text": "磁盘cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 27,
        "end": 32,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 57,
        "end": 59,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 54,
        "end": 56,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 21,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7167,
    "created_at": "2024-08-17T02:45:39.328901Z",
    "updated_at": "2024-08-17T02:45:39.328901Z",
    "lead_time": 1.398
  },
  {
    "text": "若中断请求信号为“”且允许响应该中断请求，则CPU转入“中断周期”，受理外界中断",
    "id": 5735,
    "label": [
      {
        "start": 22,
        "end": 25,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "中断周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 36,
        "end": 40,
        "text": "外界中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7168,
    "created_at": "2024-08-17T02:45:58.874209Z",
    "updated_at": "2024-08-17T02:45:58.874209Z",
    "lead_time": 18.952
  },
  {
    "text": "不同之处在于增加一根联络信号线，如高电平有效的准备好信号READY或者低电平有效的等待信号nWAIT，由此信号决定是否需要增加时钟周期",
    "id": 5736,
    "label": [
      {
        "start": 63,
        "end": 67,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "低电平",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "高电平",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7169,
    "created_at": "2024-08-17T02:46:00.679590Z",
    "updated_at": "2024-08-17T02:46:00.679590Z",
    "lead_time": 1.172
  },
  {
    "text": "另外，存储器的存取速度又取决于这种物理状态的改变速度",
    "id": 5737,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "存取速度",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7170,
    "created_at": "2024-08-17T02:46:01.750887Z",
    "updated_at": "2024-08-17T02:46:01.750887Z",
    "lead_time": 0.58
  },
  {
    "text": "非击打式是采用电、磁、光、喷墨等物理、化学方法印刷字符，因此习惯上将这类非击打式的机种称为“印字机”，如激光印字机、喷墨印字机等",
    "id": 5738,
    "label": [
      {
        "start": 52,
        "end": 57,
        "text": "激光印字机",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7171,
    "created_at": "2024-08-17T02:46:07.809422Z",
    "updated_at": "2024-08-17T02:46:07.809422Z",
    "lead_time": 5.514
  },
  {
    "text": "指令格式明显指出的仅是第一操作数的地址D",
    "id": 5739,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7172,
    "created_at": "2024-08-17T02:46:10.491738Z",
    "updated_at": "2024-08-17T02:46:10.491738Z",
    "lead_time": 2.158
  },
  {
    "text": "如果外围设备没有向CPU请求交换数据，那么CPU又转向指存取下一条指令",
    "id": 5740,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7173,
    "created_at": "2024-08-17T02:46:14.102290Z",
    "updated_at": "2024-08-17T02:46:14.102290Z",
    "lead_time": 3.085
  },
  {
    "text": "每次计数可以从“”开始，也可以从中止点开始",
    "id": 5741,
    "annotator": 1,
    "annotation_id": 7174,
    "created_at": "2024-08-17T02:46:15.354388Z",
    "updated_at": "2024-08-17T02:46:15.354388Z",
    "lead_time": 0.751
  },
  {
    "text": "思考题说出DMA方式的创新点，其意义何在？前面介绍的是最简单的DMA控制器，一个控制器只控制一个IO设备",
    "id": 5742,
    "label": [
      {
        "start": 34,
        "end": 37,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 48,
        "end": 52,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7175,
    "created_at": "2024-08-17T02:46:16.251295Z",
    "updated_at": "2024-08-17T02:46:16.251295Z",
    "lead_time": 0.374
  },
  {
    "text": "为了能纠正错误，纠错码设成k位，如果数据字为m位，则实际存储的字长为mk位",
    "id": 5743,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "纠错码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "数据字",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "字长",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 15,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 37,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7176,
    "created_at": "2024-08-17T02:46:18.555674Z",
    "updated_at": "2024-08-17T02:46:18.555674Z",
    "lead_time": 1.709
  },
  {
    "text": "如果计算机中编址的最小单位是字存储单元，则该计算机称为按字编址的计算机",
    "id": 5744,
    "label": [
      {
        "start": 15,
        "end": 19,
        "text": "存储单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "编址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "编址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 13,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 15,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 28,
        "end": 29,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7177,
    "created_at": "2024-08-17T02:46:24.397973Z",
    "updated_at": "2024-08-17T02:46:24.397973Z",
    "lead_time": 5.289
  },
  {
    "text": "第级是汇编语言级，它给程序人员提供一种符号形式语言，以减少程序编写的复杂性",
    "id": 5745,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "汇编语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7178,
    "created_at": "2024-08-17T02:46:27.414037Z",
    "updated_at": "2024-08-17T02:46:27.414037Z",
    "lead_time": 2.301
  },
  {
    "text": "狭义的SDRAM仅指SDRSDRAM",
    "id": 5746,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 18,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7179,
    "created_at": "2024-08-17T02:46:30.615539Z",
    "updated_at": "2024-08-17T02:46:30.615539Z",
    "lead_time": 2.597
  },
  {
    "text": "中断方式的典型应用包括：实现CPU与外界进行信息交换的握手联络",
    "id": 5747,
    "label": [
      {
        "start": 14,
        "end": 17,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "中断方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7180,
    "created_at": "2024-08-17T02:46:32.078387Z",
    "updated_at": "2024-08-17T02:46:32.078387Z",
    "lead_time": 0.871
  },
  {
    "text": "英文字符的机内代码是七位的ASCII码，当用字节表示时，最高位为“”",
    "id": 5748,
    "label": [
      {
        "start": 13,
        "end": 19,
        "text": "ASCII码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "最高位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 2,
        "end": 3,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7181,
    "created_at": "2024-08-17T02:46:34.901055Z",
    "updated_at": "2024-08-17T02:46:34.901055Z",
    "lead_time": 2.281
  },
  {
    "text": "计算机在执行程序时，通常情况下按指令计数器的现行地址顺序取指令",
    "id": 5749,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 21,
        "text": "指令计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "取指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "行地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7182,
    "created_at": "2024-08-17T02:46:37.915431Z",
    "updated_at": "2024-08-17T02:46:37.915431Z",
    "lead_time": 2.3
  },
  {
    "text": "处理后的结果送回刷存，经DA变换成模拟视频输出，由监视器进行显示输出",
    "id": 5750,
    "annotator": 1,
    "annotation_id": 7183,
    "created_at": "2024-08-17T02:46:39.215658Z",
    "updated_at": "2024-08-17T02:46:39.215658Z",
    "lead_time": 0.761
  },
  {
    "text": "图显示了TLB的地址映射过程",
    "id": 5751,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "地址映射",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "TLB",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7184,
    "created_at": "2024-08-17T02:46:40.193573Z",
    "updated_at": "2024-08-17T02:46:40.193573Z",
    "lead_time": 0.494
  },
  {
    "text": "第一条微指令的二进制编码是在这条微指令中，操作控制字段有五个微命令：第位发出PCABUSI，将PC内容送到指存地址总线ABUSI；第位发出指存读命令RDI，于是指存执行读操作，从指存单元取出“十进制加法”指令放到指令总线IBUS上，其数据通路可参阅图",
    "id": 5752,
    "label": [
      {
        "start": 30,
        "end": 33,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 21,
        "end": 27,
        "text": "操作控制字段",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 45,
        "text": "ABUSI",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 59,
        "end": 64,
        "text": "ABUSI",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 117,
        "end": 121,
        "text": "数据通路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 110,
        "end": 114,
        "text": "IBUS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 55,
        "end": 59,
        "text": "地址总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 106,
        "end": 110,
        "text": "指令总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 96,
        "end": 99,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 84,
        "end": 87,
        "text": "读操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 102,
        "end": 104,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 35,
        "end": 36,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 66,
        "end": 67,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7185,
    "created_at": "2024-08-17T02:46:42.430682Z",
    "updated_at": "2024-08-17T02:46:42.430682Z",
    "lead_time": 1.683
  },
  {
    "text": "访问M位的CDRAM芯片需位内存地址",
    "id": 5753,
    "label": [
      {
        "start": 5,
        "end": 10,
        "text": "CDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "内存地址",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 4,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 14,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7186,
    "created_at": "2024-08-17T02:46:45.654407Z",
    "updated_at": "2024-08-17T02:46:45.654407Z",
    "lead_time": 2.639
  },
  {
    "text": "存储器技术的发展，与处理器技术的发展一起，在不到年的时间里改变了计算机的生命力",
    "id": 5754,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7187,
    "created_at": "2024-08-17T02:46:47.621223Z",
    "updated_at": "2024-08-17T02:46:47.621223Z",
    "lead_time": 1.318
  },
  {
    "text": "指令的寻址方式有两种，一种是顺序寻址方式，另一种是跳跃寻址方式",
    "id": 5755,
    "label": [
      {
        "start": 25,
        "end": 31,
        "text": "跳跃寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7188,
    "created_at": "2024-08-17T02:46:48.555307Z",
    "updated_at": "2024-08-17T02:46:48.555307Z",
    "lead_time": 0.365
  },
  {
    "text": "由于所有指令的取指周期是完全一样的，因此，取指令也可认为是公操作",
    "id": 5756,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "取指周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "取指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7189,
    "created_at": "2024-08-17T02:46:50.127402Z",
    "updated_at": "2024-08-17T02:46:50.127402Z",
    "lead_time": 1.027
  },
  {
    "text": "减法是用的补码运算来实现的，这时右端各CAS单元上的反馈线用作初始的进位输入，即最低位上加“”",
    "id": 5757,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "CAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 35,
        "end": 36,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 42,
        "end": 43,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7190,
    "created_at": "2024-08-17T02:46:51.075556Z",
    "updated_at": "2024-08-17T02:46:51.075556Z",
    "lead_time": 0.427
  },
  {
    "text": "例如，停机指令就不需要地址码，因为停机操作不需要操作数",
    "id": 5758,
    "label": [
      {
        "start": 24,
        "end": 27,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7191,
    "created_at": "2024-08-17T02:46:52.344439Z",
    "updated_at": "2024-08-17T02:46:52.344439Z",
    "lead_time": 0.596
  },
  {
    "text": "而字节多路通道不仅允许多个设备同时操作，而且也允许它们同时进行传输型操作",
    "id": 5759,
    "label": [
      {
        "start": 1,
        "end": 3,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7192,
    "created_at": "2024-08-17T02:46:53.279647Z",
    "updated_at": "2024-08-17T02:46:53.279647Z",
    "lead_time": 0.349
  },
  {
    "text": "“映射”一词的物理含义是确定位置的对应关系，并用硬件来实现",
    "id": 5760,
    "label": [
      {
        "start": 24,
        "end": 26,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 15,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7193,
    "created_at": "2024-08-17T02:46:53.861094Z",
    "updated_at": "2024-08-17T02:46:53.861094Z",
    "lead_time": 0.045
  },
  {
    "text": "在性能上，信息交换速度大大提高，输入输出形态不仅有数字形式，还有直观的图像和声音等形式",
    "id": 5761,
    "label": [
      {
        "start": 26,
        "end": 27,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7194,
    "created_at": "2024-08-17T02:46:54.490288Z",
    "updated_at": "2024-08-17T02:46:54.490288Z",
    "lead_time": 0.048
  },
  {
    "text": "为追求高速，包括管理在内的全部功能由硬件实现，因而对程序员是透明的",
    "id": 5762,
    "label": [
      {
        "start": 26,
        "end": 28,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7195,
    "created_at": "2024-08-17T02:46:55.064109Z",
    "updated_at": "2024-08-17T02:46:55.064109Z",
    "lead_time": 0.044
  },
  {
    "text": "如果此组没有一行的标记与之相符，即cache未命中，此时需按主存地址访问主存",
    "id": 5763,
    "label": [
      {
        "start": 30,
        "end": 32,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 22,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7196,
    "created_at": "2024-08-17T02:46:55.803695Z",
    "updated_at": "2024-08-17T02:46:55.804218Z",
    "lead_time": 0.065
  },
  {
    "text": "由于cache的内容只是主存部分内容的副本，它应当与主存内容保持一致",
    "id": 5764,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7197,
    "created_at": "2024-08-17T02:46:56.499248Z",
    "updated_at": "2024-08-17T02:46:56.499248Z",
    "lead_time": 0.064
  },
  {
    "text": "以上是我们对一台计算机硬件组成的概貌了解，其目的在于使读者对计算机的整体先有一个粗略的印象，为后面讲授各章提供一些方便",
    "id": 5765,
    "label": [
      {
        "start": 8,
        "end": 13,
        "text": "计算机硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7198,
    "created_at": "2024-08-17T02:46:57.356348Z",
    "updated_at": "2024-08-17T02:46:57.356348Z",
    "lead_time": 0.053
  },
  {
    "text": "桥本身的结构可以十分简单，如只有信号缓冲能力和信号电平转换逻辑，也可以相当复杂，如有规程转换、数据快存、装拆数据等",
    "id": 5766,
    "label": [
      {
        "start": 25,
        "end": 27,
        "text": "电平",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 1,
        "text": "桥",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7199,
    "created_at": "2024-08-17T02:46:59.303398Z",
    "updated_at": "2024-08-17T02:46:59.303398Z",
    "lead_time": 1.444
  },
  {
    "text": "DDRSDRAM仍然采用n预取，但是允许使用两个或者四个存储体组，每个存储体组都有独立的激活、读取、写入和刷新操作",
    "id": 5767,
    "label": [
      {
        "start": 0,
        "end": 8,
        "text": "DDRSDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "存储体",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "存储体",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7200,
    "created_at": "2024-08-17T02:47:00.871227Z",
    "updated_at": "2024-08-17T02:47:00.871227Z",
    "lead_time": 1.038
  },
  {
    "text": "显示控制器还要提供一个由系统总线至刷存总线的通路，以支持CPU将主存中已修改好的点阵数据写入到刷存，以更新屏幕",
    "id": 5768,
    "label": [
      {
        "start": 28,
        "end": 31,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "显示控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "系统总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "点阵",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7201,
    "created_at": "2024-08-17T02:47:01.903410Z",
    "updated_at": "2024-08-17T02:47:01.903410Z",
    "lead_time": 0.501
  },
  {
    "text": "在中断切换过程中，由硬件直接执行这条转移指令，从而跳转到相应的中断服务程序执行",
    "id": 5769,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "转移指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7202,
    "created_at": "2024-08-17T02:47:02.788539Z",
    "updated_at": "2024-08-17T02:47:02.788539Z",
    "lead_time": 0.367
  },
  {
    "text": "其结构与图中的简单总线相似，但一般信号条数较多，如条地址线，或条数据线",
    "id": 5770,
    "label": [
      {
        "start": 26,
        "end": 29,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "单总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7203,
    "created_at": "2024-08-17T02:47:03.663895Z",
    "updated_at": "2024-08-17T02:47:03.663895Z",
    "lead_time": 0.331
  },
  {
    "text": "向量中断要求在硬件设计时考虑所有中断源的向量地址，而实际中断时只能产生一个向量地址",
    "id": 5771,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "向量中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7204,
    "created_at": "2024-08-17T02:47:17.278290Z",
    "updated_at": "2024-08-17T02:47:17.278290Z",
    "lead_time": 13.015
  },
  {
    "text": "在中断方式中，该标志用作中断源触发器，简称中断触发器",
    "id": 5772,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "中断方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7205,
    "created_at": "2024-08-17T02:47:24.977687Z",
    "updated_at": "2024-08-17T02:47:24.977687Z",
    "lead_time": 7.039
  },
  {
    "text": "相对而言，半导体存储器称为内存储器，简称内存",
    "id": 5773,
    "label": [
      {
        "start": 5,
        "end": 11,
        "text": "半导体存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "内存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7206,
    "created_at": "2024-08-17T02:47:27.816643Z",
    "updated_at": "2024-08-17T02:47:27.816643Z",
    "lead_time": 2.286
  },
  {
    "text": "磁带机的数据传输率D可用下式表示：Ddv其中，d表示记录密度单位长度上的存储信息量，v表示走带速度",
    "id": 5774,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7207,
    "created_at": "2024-08-17T02:47:32.505341Z",
    "updated_at": "2024-08-17T02:47:32.505341Z",
    "lead_time": 4.169
  },
  {
    "text": "为了改变这种情况，在设计短指令流程时可以跳过某些节拍，如MOV指令、ADD指令和JMP指令执行M节拍后跳过M节拍而返回M节拍",
    "id": 5775,
    "label": [
      {
        "start": 34,
        "end": 39,
        "text": "ADD指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 40,
        "end": 45,
        "text": "JMP指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 28,
        "end": 33,
        "text": "MOV指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "短指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7208,
    "created_at": "2024-08-17T02:47:34.878904Z",
    "updated_at": "2024-08-17T02:47:34.878904Z",
    "lead_time": 1.855
  },
  {
    "text": "大多数情况下，这些cache和组成CPU的微处理器集成到一个芯片上",
    "id": 5776,
    "label": [
      {
        "start": 21,
        "end": 25,
        "text": "微处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 14,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7209,
    "created_at": "2024-08-17T02:47:36.455337Z",
    "updated_at": "2024-08-17T02:47:36.455337Z",
    "lead_time": 1.01
  },
  {
    "text": "除了前面讲到的基本逻辑部件外，还有一个设备号寄存器",
    "id": 5777,
    "label": [
      {
        "start": 22,
        "end": 25,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7210,
    "created_at": "2024-08-17T02:47:37.920648Z",
    "updated_at": "2024-08-17T02:47:37.920648Z",
    "lead_time": 0.87
  },
  {
    "text": "例如，增加cache，采用虚拟存储器等",
    "id": 5778,
    "label": [
      {
        "start": 13,
        "end": 18,
        "text": "虚拟存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 10,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7211,
    "created_at": "2024-08-17T02:47:38.953872Z",
    "updated_at": "2024-08-17T02:47:38.953872Z",
    "lead_time": 0.515
  },
  {
    "text": "现在已经可以把许多复杂的、常用的程序制作成所谓的固件",
    "id": 5779,
    "label": [
      {
        "start": 16,
        "end": 18,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7212,
    "created_at": "2024-08-17T02:47:39.894674Z",
    "updated_at": "2024-08-17T02:47:39.894674Z",
    "lead_time": 0.396
  },
  {
    "text": "每个程序先按逻辑结构分段，每段再按照实存的页大小分页，程序按页进行调入和调出操作，但可按段进行编程、保护和共享",
    "id": 5780,
    "label": [
      {
        "start": 24,
        "end": 26,
        "text": "分页",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "分段",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "实存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 22,
        "text": "页",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 30,
        "end": 31,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7213,
    "created_at": "2024-08-17T02:47:40.685941Z",
    "updated_at": "2024-08-17T02:47:40.685941Z",
    "lead_time": 0.228
  },
  {
    "text": "计算机系统不同于一般的电子设备，它是一个由硬件、软件组成的复杂的自动化设备",
    "id": 5781,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7214,
    "created_at": "2024-08-17T02:47:41.481376Z",
    "updated_at": "2024-08-17T02:47:41.481376Z",
    "lead_time": 0.113
  },
  {
    "text": "这样做的目的是使SDRAM的操作在系统时钟CLK的控制下，与系统的高速操作严格同步进行",
    "id": 5782,
    "label": [
      {
        "start": 19,
        "end": 21,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 8,
        "end": 13,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7215,
    "created_at": "2024-08-17T02:47:44.265933Z",
    "updated_at": "2024-08-17T02:47:44.265933Z",
    "lead_time": 2.263
  },
  {
    "text": "也可以分别设立DMA请求线和响应线实现双向通信",
    "id": 5783,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7216,
    "created_at": "2024-08-17T02:47:45.321718Z",
    "updated_at": "2024-08-17T02:47:45.321718Z",
    "lead_time": 0.542
  },
  {
    "text": "当控制信号线E为“”时，启动对求补的操作；当控制信号线E为“”时，输出将和输入相等",
    "id": 5784,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7217,
    "created_at": "2024-08-17T02:47:46.133668Z",
    "updated_at": "2024-08-17T02:47:46.133668Z",
    "lead_time": 0.28
  },
  {
    "text": "由图可知，指令数码化以后，就可以和数据一样放入存储器",
    "id": 5785,
    "label": [
      {
        "start": 23,
        "end": 26,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7218,
    "created_at": "2024-08-17T02:47:47.475418Z",
    "updated_at": "2024-08-17T02:47:47.475418Z",
    "lead_time": 0.771
  },
  {
    "text": "但直接用机器语言编写程序是一件很烦琐的工作，需要耗费大量的人力和时间，而且又容易出错，出错后寻找错误也相当费事",
    "id": 5786,
    "label": [
      {
        "start": 4,
        "end": 8,
        "text": "机器语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7219,
    "created_at": "2024-08-17T02:47:52.482037Z",
    "updated_at": "2024-08-17T02:47:52.482037Z",
    "lead_time": 4.403
  },
  {
    "text": "磁盘cache的概念随着微电子技术的飞速发展，CPU的速度每年增长倍左右，主存芯片容量和磁盘驱动器的容量每年增长倍左右",
    "id": 5787,
    "label": [
      {
        "start": 0,
        "end": 7,
        "text": "磁盘cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 44,
        "end": 49,
        "text": "磁盘驱动器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7220,
    "created_at": "2024-08-17T02:48:14.250223Z",
    "updated_at": "2024-08-17T02:48:14.250223Z",
    "lead_time": 21.192
  },
  {
    "text": "常用的刷新策略有集中式刷新和分散式刷新两种",
    "id": 5788,
    "annotator": 1,
    "annotation_id": 7221,
    "created_at": "2024-08-17T02:48:24.912737Z",
    "updated_at": "2024-08-17T02:48:24.912737Z",
    "lead_time": 10.064
  },
  {
    "text": "所谓相容性的微操作，是指在同时或同一个CPU周期内可以并行执行的微操作",
    "id": 5789,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "微操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "微操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7222,
    "created_at": "2024-08-17T02:48:27.723946Z",
    "updated_at": "2024-08-17T02:48:27.723946Z",
    "lead_time": 2.154
  },
  {
    "text": "运算速度提高到每秒亿次",
    "id": 5790,
    "annotator": 1,
    "annotation_id": 7223,
    "created_at": "2024-08-17T02:48:28.933347Z",
    "updated_at": "2024-08-17T02:48:28.933347Z",
    "lead_time": 0.484
  },
  {
    "text": "CPU发送地址信号和读状态信号到总线上",
    "id": 5791,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7224,
    "created_at": "2024-08-17T02:48:30.819399Z",
    "updated_at": "2024-08-17T02:48:30.819399Z",
    "lead_time": 1.295
  },
  {
    "text": "但是都利用了键盘进行“手动”输入",
    "id": 5792,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "键盘",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7225,
    "created_at": "2024-08-17T02:48:31.996654Z",
    "updated_at": "2024-08-17T02:48:31.996654Z",
    "lead_time": 0.549
  },
  {
    "text": "移码表示法移码通常用于表示浮点数的阶码",
    "id": 5793,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "移码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "移码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7226,
    "created_at": "2024-08-17T02:48:33.292155Z",
    "updated_at": "2024-08-17T02:48:33.292155Z",
    "lead_time": 0.648
  },
  {
    "text": "测试设备的某些状态，如“忙”“准备就绪”等，以便决定下一步的操作",
    "id": 5794,
    "annotator": 1,
    "annotation_id": 7227,
    "created_at": "2024-08-17T02:48:34.575445Z",
    "updated_at": "2024-08-17T02:48:34.575445Z",
    "lead_time": 0.661
  },
  {
    "text": "但是由于技术简单，成本较低，所以在早期主存储器中常常使用",
    "id": 5795,
    "label": [
      {
        "start": 19,
        "end": 23,
        "text": "主存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7228,
    "created_at": "2024-08-17T02:48:38.876495Z",
    "updated_at": "2024-08-17T02:48:38.876495Z",
    "lead_time": 3.759
  },
  {
    "text": "下面我们将会知道，一条机器指令的功能是用许多条微指令组成的序列来实现的，这个微指令序列通常称为微程序",
    "id": 5796,
    "label": [
      {
        "start": 47,
        "end": 50,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 38,
        "end": 43,
        "text": "微指令序列",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7229,
    "created_at": "2024-08-17T02:48:41.324484Z",
    "updated_at": "2024-08-17T02:48:41.324484Z",
    "lead_time": 1.901
  },
  {
    "text": "集中式仲裁方式必有一个中央仲裁器，它受理所有功能模块的总线请求，按优先原则或公平原则进行排队，然后仅给一个功能模块发出授权信号",
    "id": 5797,
    "label": [
      {
        "start": 11,
        "end": 16,
        "text": "中央仲裁器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "集中式仲裁",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "总线请求",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7230,
    "created_at": "2024-08-17T02:48:42.461483Z",
    "updated_at": "2024-08-17T02:48:42.461483Z",
    "lead_time": 0.506
  },
  {
    "text": "原理上讲，小数点位置固定在哪一位都可以，但是通常将数据表示成纯小数或纯整数",
    "id": 5798,
    "label": [
      {
        "start": 8,
        "end": 9,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 15,
        "end": 16,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7231,
    "created_at": "2024-08-17T02:48:43.452435Z",
    "updated_at": "2024-08-17T02:48:43.452435Z",
    "lead_time": 0.401
  },
  {
    "text": "反之，当外加负向脉冲电流时，磁感应强度B将处在Br状态负剩磁状态",
    "id": 5799,
    "annotator": 1,
    "annotation_id": 7232,
    "created_at": "2024-08-17T02:48:44.541515Z",
    "updated_at": "2024-08-17T02:48:44.541515Z",
    "lead_time": 0.414
  },
  {
    "text": "每种中断给予一个编号，称为中断向量号，以便发生中断时，程序转向相应的中断服务子程序入口地址",
    "id": 5800,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "中断向量",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7233,
    "created_at": "2024-08-17T02:49:04.665377Z",
    "updated_at": "2024-08-17T02:49:04.665377Z",
    "lead_time": 19.52
  },
  {
    "text": "通常，把包含这些求补级的乘法器又称为符号求补的阵列乘法器",
    "id": 5801,
    "label": [
      {
        "start": 23,
        "end": 28,
        "text": "阵列乘法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "乘法器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7234,
    "created_at": "2024-08-17T02:49:06.751709Z",
    "updated_at": "2024-08-17T02:49:06.751709Z",
    "lead_time": 1.302
  },
  {
    "text": "然而数字计算机只能处理二进制数据，因此，上述信息应用到计算机中时，都必须编写成二进制格式的代码，也就是字符信息用数据表示，称为符号数据",
    "id": 5802,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "数字计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 63,
        "end": 66,
        "text": "符号数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 51,
        "end": 52,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7235,
    "created_at": "2024-08-17T02:49:08.827348Z",
    "updated_at": "2024-08-17T02:49:08.827348Z",
    "lead_time": 1.487
  },
  {
    "text": "可以看出，段页式虚拟存储器的缺点是在由虚地址向主存地址的映射过程中需要多次查表，因而实现复杂度较高",
    "id": 5803,
    "label": [
      {
        "start": 5,
        "end": 13,
        "text": "段页式虚拟存储器",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "主存地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "虚地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7236,
    "created_at": "2024-08-17T02:49:11.787382Z",
    "updated_at": "2024-08-17T02:49:11.787382Z",
    "lead_time": 2.204
  },
  {
    "text": "转移指令包括了一个链接L位，它指示此转移指令之后的那条指令的有效地址是否放入链接寄存器",
    "id": 5804,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "转移指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "转移指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "有效地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 12,
        "end": 13,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7237,
    "created_at": "2024-08-17T02:49:14.082252Z",
    "updated_at": "2024-08-17T02:49:14.083758Z",
    "lead_time": 1.527
  },
  {
    "text": "IM标志为“”时，CPU可以受理外界的中断请求，反之，IM标志为“”时，CPU不受理外界的中断请求",
    "id": 5805,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 45,
        "end": 49,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7238,
    "created_at": "2024-08-17T02:49:16.098513Z",
    "updated_at": "2024-08-17T02:49:27.627469Z",
    "lead_time": 10.434
  },
  {
    "text": "如果是输入过程，一般需要以下三个步骤：CPU把一个地址值放在地址总线上，选择某一输入设备；CPU等候输入设备的数据成为有效；CPU从数据总线读入数据，并放在一个相应的寄存器中",
    "id": 5806,
    "label": [
      {
        "start": 40,
        "end": 44,
        "text": "输入设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 83,
        "end": 86,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "地址总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 66,
        "end": 70,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 50,
        "end": 54,
        "text": "输入设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 62,
        "end": 65,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7239,
    "created_at": "2024-08-17T02:49:36.419414Z",
    "updated_at": "2024-08-17T02:49:36.419414Z",
    "lead_time": 5.326
  },
  {
    "text": "由于SS有种状态组合，因此对正逻辑输入与输出而言，有种算术运算功能和种逻辑运算功能",
    "id": 5807,
    "label": [
      {
        "start": 27,
        "end": 31,
        "text": "算术运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 35,
        "end": 39,
        "text": "逻辑运算",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7240,
    "created_at": "2024-08-17T02:49:37.844202Z",
    "updated_at": "2024-08-17T02:49:37.844202Z",
    "lead_time": 0.75
  },
  {
    "text": "在每一次命令操作之后，可以查询状态寄存器，以使CPU能够了解命令的执行情况",
    "id": 5808,
    "label": [
      {
        "start": 17,
        "end": 20,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7241,
    "created_at": "2024-08-17T02:49:39.339314Z",
    "updated_at": "2024-08-17T02:49:39.339314Z",
    "lead_time": 0.895
  },
  {
    "text": "在第一代DDRSDRAM出现之后，相继又出现了DDR、DDR和DDR等SDRAM技术",
    "id": 5809,
    "label": [
      {
        "start": 4,
        "end": 12,
        "text": "DDRSDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 35,
        "end": 40,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "DDR",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "DDR",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "DDR",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7242,
    "created_at": "2024-08-17T02:49:41.219193Z",
    "updated_at": "2024-08-17T02:49:41.219193Z",
    "lead_time": 1.306
  },
  {
    "text": "数据传送的实时性",
    "id": 5810,
    "annotator": 1,
    "annotation_id": 7243,
    "created_at": "2024-08-17T02:49:42.088612Z",
    "updated_at": "2024-08-17T02:49:42.088612Z",
    "lead_time": 0.265
  },
  {
    "text": "因此，状态条件寄存器是一个由各种状态条件标志拼凑而成的寄存器",
    "id": 5811,
    "label": [
      {
        "start": 3,
        "end": 10,
        "text": "状态条件寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7244,
    "created_at": "2024-08-17T02:49:42.835980Z",
    "updated_at": "2024-08-17T02:49:42.835980Z",
    "lead_time": 0.186
  },
  {
    "text": "思考题Pentium中为什么设置L、L、L三个cache？Lcache分成Icache和Dcache有什么好处？所有现代计算机都使用了cache",
    "id": 5812,
    "label": [
      {
        "start": 23,
        "end": 28,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 30,
        "end": 35,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 38,
        "end": 43,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 45,
        "end": 50,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 67,
        "end": 72,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 60,
        "end": 63,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7245,
    "created_at": "2024-08-17T02:49:44.201479Z",
    "updated_at": "2024-08-17T02:49:44.201479Z",
    "lead_time": 0.726
  },
  {
    "text": "转换后援缓冲器TLB由于页表通常在主存中，因而即使逻辑页已经在主存中，也至少要访问两次物理存储器才能实现一次访存，这将使虚拟存储器的存取时间加倍",
    "id": 5813,
    "label": [
      {
        "start": 43,
        "end": 48,
        "text": "物理存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 7,
        "text": "转换后援缓冲器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 60,
        "end": 65,
        "text": "虚拟存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 66,
        "end": 70,
        "text": "存取时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "TLB",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 27,
        "end": 28,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7246,
    "created_at": "2024-08-17T02:49:47.490216Z",
    "updated_at": "2024-08-17T02:49:47.490216Z",
    "lead_time": 2.585
  },
  {
    "text": "只要直流供电电源一直加在这个记忆电路上，它就无限期地保持记忆的状态或状态",
    "id": 5814,
    "annotator": 1,
    "annotation_id": 7247,
    "created_at": "2024-08-17T02:49:49.692197Z",
    "updated_at": "2024-08-17T02:49:49.692197Z",
    "lead_time": 1.509
  },
  {
    "text": "此时，DMA控制器从CPU完全接管对总线的控制，数据交换不经过CPU，而直接在内存和外围设备之间进行，以高速传送数据",
    "id": 5815,
    "label": [
      {
        "start": 3,
        "end": 9,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 46,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7248,
    "created_at": "2024-08-17T02:49:51.774326Z",
    "updated_at": "2024-08-17T02:49:51.774326Z",
    "lead_time": 1.484
  },
  {
    "text": "输入输出指令当用程序实现输入输出传送时，IO指令一般具有如下功能：置“”或置“”IO接口的某些控制触发器，用于控制设备进行某些动作，如启动、关闭设备等",
    "id": 5816,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "输入输出指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 40,
        "end": 44,
        "text": "IO接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 49,
        "end": 52,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7249,
    "created_at": "2024-08-17T02:50:07.285242Z",
    "updated_at": "2024-08-17T02:50:07.285242Z",
    "lead_time": 14.759
  },
  {
    "text": "关于流水线技术，将留在第五章中讨论",
    "id": 5817,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7250,
    "created_at": "2024-08-17T02:50:09.060497Z",
    "updated_at": "2024-08-17T02:50:09.060497Z",
    "lead_time": 1.103
  },
  {
    "text": "ALU的操作加、减、传送在同一个CPU周期中只能选择一种，不能并行，所以，，M传送三个微操作是相斥性的微操作",
    "id": 5818,
    "label": [
      {
        "start": 43,
        "end": 46,
        "text": "微操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 16,
        "end": 21,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 51,
        "end": 54,
        "text": "微操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7251,
    "created_at": "2024-08-17T02:50:11.076424Z",
    "updated_at": "2024-08-17T02:50:11.076424Z",
    "lead_time": 1.352
  },
  {
    "text": "水平型微指令与垂直型微指令的比较水平型微指令并行操作能力强，效率高，灵活性强，垂直型微指令则较差",
    "id": 5819,
    "label": [
      {
        "start": 7,
        "end": 13,
        "text": "垂直型微指令",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 45,
        "text": "垂直型微指令",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "水平型微指令",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 22,
        "text": "水平型微指令",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7252,
    "created_at": "2024-08-17T02:50:14.105122Z",
    "updated_at": "2024-08-17T02:50:14.105122Z",
    "lead_time": 2.392
  },
  {
    "text": "指令寄存器中操作码字段OP的输出就是指令译码器的输入",
    "id": 5820,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "指令寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 23,
        "text": "指令译码器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "OP",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7253,
    "created_at": "2024-08-17T02:50:20.367228Z",
    "updated_at": "2024-08-17T02:50:20.367228Z",
    "lead_time": 5.639
  },
  {
    "text": "在该状态下，NOR闪存的读出操作与传统ROM芯片相同，只需给出片选信号和一定的地址并使读信号输出允许线有效即可",
    "id": 5821,
    "label": [
      {
        "start": 46,
        "end": 51,
        "text": "输出允许线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 35,
        "text": "片选信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7254,
    "created_at": "2024-08-17T02:50:21.837359Z",
    "updated_at": "2024-08-17T02:50:21.837359Z",
    "lead_time": 0.79
  },
  {
    "text": "在读周期中，地址线先有效，以便进行地址译码，选中存储单元",
    "id": 5822,
    "label": [
      {
        "start": 24,
        "end": 28,
        "text": "存储单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "地址译码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "读周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7255,
    "created_at": "2024-08-17T02:50:23.937480Z",
    "updated_at": "2024-08-17T02:50:23.937480Z",
    "lead_time": 1.508
  },
  {
    "text": "根据连接方式不同，单机系统中采用的总线结构有两种基本类型：单总线结构；多总线结构",
    "id": 5823,
    "label": [
      {
        "start": 17,
        "end": 19,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 34,
        "text": "单总线结构",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "多总线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7256,
    "created_at": "2024-08-17T02:50:25.870737Z",
    "updated_at": "2024-08-17T02:50:25.870737Z",
    "lead_time": 1.309
  },
  {
    "text": "图示出了某计算机中CPU周期与微指令周期的时间关系",
    "id": 5824,
    "label": [
      {
        "start": 9,
        "end": 14,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 15,
        "end": 20,
        "text": "微指令周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7257,
    "created_at": "2024-08-17T02:50:27.354590Z",
    "updated_at": "2024-08-17T02:50:27.354590Z",
    "lead_time": 0.852
  },
  {
    "text": "但是，DRAM的访问速度相对要低一些，提升其访问速度是改进系统性能的重要途径之一",
    "id": 5825,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7258,
    "created_at": "2024-08-17T02:50:28.640455Z",
    "updated_at": "2024-08-17T02:50:28.640455Z",
    "lead_time": 0.609
  },
  {
    "text": "例如，将位二进制数x从部件A传送到部件B，可能由于传送信道中的噪声干扰而受到破坏，以至于在接收部件B收到的是x而不是x",
    "id": 5826,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "噪声",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 5,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7259,
    "created_at": "2024-08-17T02:50:29.572373Z",
    "updated_at": "2024-08-17T02:50:29.572373Z",
    "lead_time": 0.377
  },
  {
    "text": "程序中断方式中断是外围设备用来“主动”通知CPU，准备送出输入数据或接收输出数据的一种方法",
    "id": 5827,
    "label": [
      {
        "start": 21,
        "end": 24,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "中断方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7260,
    "created_at": "2024-08-17T02:50:30.460642Z",
    "updated_at": "2024-08-17T02:50:30.460642Z",
    "lead_time": 0.281
  },
  {
    "text": "每交换一个字，则地址计数器和字计数器加“”，当计数值到达零时，DMA操作结束，DMA控制器向CPU提出中断报告",
    "id": 5828,
    "label": [
      {
        "start": 39,
        "end": 45,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 46,
        "end": 49,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 51,
        "end": 53,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 6,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 15,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7261,
    "created_at": "2024-08-17T02:50:31.352039Z",
    "updated_at": "2024-08-17T02:50:31.352039Z",
    "lead_time": 0.251
  },
  {
    "text": "微程序举例一条机器指令是由若干条微指令组成的序列来实现的",
    "id": 5829,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7262,
    "created_at": "2024-08-17T02:50:39.265429Z",
    "updated_at": "2024-08-17T02:50:39.266082Z",
    "lead_time": 0.772
  },
  {
    "text": "cache和主存之间以及主存和辅存之间分别有辅助硬件和辅助软硬件负责地址变换与管理，以便各级存储器能够组成有机的三级存储体系",
    "id": 5830,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "地址变换",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 46,
        "end": 49,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 58,
        "end": 61,
        "text": "存储体",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7263,
    "created_at": "2024-08-17T02:50:43.239971Z",
    "updated_at": "2024-08-17T02:50:43.239971Z",
    "lead_time": 3.294
  },
  {
    "text": "而字节多路通道与设备之间数据传送的基本单位是字节，通道为一个设备传送完字节后，又可以为另一个设备传送字节，因此各设备与通道之间的数据传送是以字节为单位交替进行",
    "id": 5831,
    "label": [
      {
        "start": 1,
        "end": 3,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 70,
        "end": 72,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7264,
    "created_at": "2024-08-17T02:50:49.858501Z",
    "updated_at": "2024-08-17T02:50:49.858501Z",
    "lead_time": 6.01
  },
  {
    "text": "计算机语言有高级语言和低级语言之分",
    "id": 5832,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "高级语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7265,
    "created_at": "2024-08-17T02:50:51.505409Z",
    "updated_at": "2024-08-17T02:50:51.505409Z",
    "lead_time": 0.981
  },
  {
    "text": "总之，MO盘介质材料发生的物理特性改变是可逆变化，因此信息是可重写的",
    "id": 5833,
    "label": [
      {
        "start": 13,
        "end": 17,
        "text": "物理特性",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7266,
    "created_at": "2024-08-17T02:50:53.830980Z",
    "updated_at": "2024-08-17T02:51:05.212268Z",
    "lead_time": 8.453
  },
  {
    "text": "当L、Lcache未命中时，使用系统总线访问主存",
    "id": 5834,
    "label": [
      {
        "start": 16,
        "end": 20,
        "text": "系统总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 9,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7267,
    "created_at": "2024-08-17T02:50:54.895349Z",
    "updated_at": "2024-08-17T02:51:09.441756Z",
    "lead_time": 2.186
  },
  {
    "text": "同步操作处理器访问SDRAM时，SDRAM的所有输入信号均在系统时钟CLK的上升沿被存储器内部电路锁定；SDRAM的所有输出信号均在系统时钟CLK的上升沿被输出",
    "id": 5835,
    "label": [
      {
        "start": 9,
        "end": 14,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 21,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 52,
        "end": 57,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 45,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 68,
        "end": 70,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7268,
    "created_at": "2024-08-17T02:51:13.185400Z",
    "updated_at": "2024-08-17T02:51:13.185400Z",
    "lead_time": 2.27
  },
  {
    "text": "相对于其他技术的闪存，其特点是：每次读出以页page为单位，因而属于非随机访问的存储器；存储在其中的指令代码不能够直接在线执行；以页为单位进行编程操作；以数十页组成的块block为单位进行擦除操作；快速编程和快速擦除；数据线、地址线和控制线复用在同一组总线信号上，故其接口方式与传统ROM不同；位成本低、位密度高；由于工艺的限制，存在较高的比特错误率，通常需要软件处理坏块",
    "id": 5836,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 35,
        "end": 39,
        "text": "随机访问",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 109,
        "end": 112,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 117,
        "end": 120,
        "text": "控制线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 113,
        "end": 116,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 141,
        "end": 144,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 180,
        "end": 182,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 126,
        "end": 128,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 134,
        "end": 136,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 29,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 147,
        "end": 148,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 152,
        "end": 153,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 21,
        "end": 22,
        "text": "页",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 65,
        "end": 66,
        "text": "页",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 79,
        "end": 80,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7269,
    "created_at": "2024-08-17T02:51:21.176213Z",
    "updated_at": "2024-08-17T02:51:21.176213Z",
    "lead_time": 7.327
  },
  {
    "text": "IEEE串行接口与SCSI等并行接口相比，有如下三个显著特点",
    "id": 5837,
    "label": [
      {
        "start": 4,
        "end": 8,
        "text": "串行接口",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "并行接口",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7270,
    "created_at": "2024-08-17T02:51:22.680101Z",
    "updated_at": "2024-08-17T02:51:31.756632Z",
    "lead_time": 7.444000000000001
  },
  {
    "text": "主程序只是在设备A、B、C数据准备就绪时，才去与设备A、B、C进行数据交换",
    "id": 5838,
    "label": [
      {
        "start": 1,
        "end": 3,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7271,
    "created_at": "2024-08-17T02:51:35.474484Z",
    "updated_at": "2024-08-17T02:51:35.474484Z",
    "lead_time": 2.017
  },
  {
    "text": "这是因为目前所有的高级语言编写程序时，程序比较复杂，开发成本高",
    "id": 5839,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "高级语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7272,
    "created_at": "2024-08-17T02:51:36.935431Z",
    "updated_at": "2024-08-17T02:51:36.935431Z",
    "lead_time": 0.812
  },
  {
    "text": "直接映射方式的优点是硬件简单，成本低，地址变换速度快",
    "id": 5840,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "直接映射方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "地址变换",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7273,
    "created_at": "2024-08-17T02:51:38.412615Z",
    "updated_at": "2024-08-17T02:51:38.412615Z",
    "lead_time": 0.832
  },
  {
    "text": "原因之一，机器通常只有n位长，两个n位数相乘，乘积可能为n位",
    "id": 5841,
    "label": [
      {
        "start": 12,
        "end": 13,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 19,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 29,
        "end": 30,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7274,
    "created_at": "2024-08-17T02:51:39.579507Z",
    "updated_at": "2024-08-17T02:51:39.579507Z",
    "lead_time": 0.495
  },
  {
    "text": "主存扩充容量是以内存条形式插入主板有关插座来实现的",
    "id": 5842,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "内存条",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7275,
    "created_at": "2024-08-17T02:51:40.956117Z",
    "updated_at": "2024-08-17T02:51:40.956117Z",
    "lead_time": 0.684
  },
  {
    "text": "获取中断服务程序入口地址一般有两种方式：向量中断方式和查询中断方式，选择哪种方式通常在处理器的中断机构设计时就已经确定",
    "id": 5843,
    "label": [
      {
        "start": 43,
        "end": 46,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 8,
        "text": "中断服务程序",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 26,
        "text": "向量中断方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 27,
        "end": 33,
        "text": "查询中断方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7276,
    "created_at": "2024-08-17T02:54:53.912410Z",
    "updated_at": "2024-08-17T02:54:53.912410Z",
    "lead_time": 192.258
  },
  {
    "text": "在多用户、多任务的计算机系统中特权指令必不可少",
    "id": 5844,
    "label": [
      {
        "start": 15,
        "end": 19,
        "text": "特权指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 9,
        "end": 14,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7277,
    "created_at": "2024-08-17T02:54:56.475423Z",
    "updated_at": "2024-08-17T02:54:56.475743Z",
    "lead_time": 1.937
  },
  {
    "text": "当存储器寻址时，用地址寄存器的低位选择个模块中的一个，而用高位选择模块中的个字",
    "id": 5845,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 14,
        "text": "地址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 16,
        "end": 17,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 30,
        "end": 31,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 38,
        "end": 39,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7278,
    "created_at": "2024-08-17T02:55:00.036535Z",
    "updated_at": "2024-08-17T02:55:00.036535Z",
    "lead_time": 2.993
  },
  {
    "text": "磁道的编址是从外向内依次编号，最外一个同心圆称为磁道，最里面的一个同心圆称为n磁道，n磁道里面的圆面积并不用来记录信息",
    "id": 5846,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "磁道",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "磁道",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "磁道",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "磁道",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "编址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7279,
    "created_at": "2024-08-17T02:55:01.269249Z",
    "updated_at": "2024-08-17T02:55:01.269249Z",
    "lead_time": 0.633
  },
  {
    "text": "在硬布线控制器中，节拍电位信号是由时序产生器本身通过逻辑电路产生的，一个节拍电位持续时间正好包容若干个节拍脉冲",
    "id": 5847,
    "label": [
      {
        "start": 51,
        "end": 55,
        "text": "节拍脉冲",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 15,
        "text": "节拍电位信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 1,
        "end": 7,
        "text": "硬布线控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 22,
        "text": "时序产生器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 40,
        "text": "节拍电位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "逻辑电路",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7280,
    "created_at": "2024-08-17T02:55:07.714565Z",
    "updated_at": "2024-08-17T02:55:07.714565Z",
    "lead_time": 5.835
  },
  {
    "text": "这些部件或设备都是由元器件构成的有形物体，因而称为硬件或硬设备",
    "id": 5848,
    "label": [
      {
        "start": 25,
        "end": 27,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7281,
    "created_at": "2024-08-17T02:55:45.429596Z",
    "updated_at": "2024-08-17T02:55:45.429596Z",
    "lead_time": 36.954
  },
  {
    "text": "因为温度和电阻特性的改变等原因，CK上下沿间距可能发生变化，此时与其反相的CK就起到触发时钟校准的作用",
    "id": 5849,
    "label": [
      {
        "start": 44,
        "end": 46,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7282,
    "created_at": "2024-08-17T02:55:59.532762Z",
    "updated_at": "2024-08-17T02:55:59.532762Z",
    "lead_time": 13.513
  },
  {
    "text": "显然，这种写cache与写主存异步进行的方式可显著减少写主存次数，但是存在不一致性的隐患",
    "id": 5850,
    "label": [
      {
        "start": 6,
        "end": 11,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7283,
    "created_at": "2024-08-17T02:56:03.012287Z",
    "updated_at": "2024-08-17T02:56:03.012287Z",
    "lead_time": 3.054
  },
  {
    "text": "当CPU执行访存指令时，就把所要访问的字的地址送到CAM；如果W不在cache中，则将W从主存传送到CPU",
    "id": 5851,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 39,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "访存指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 50,
        "end": 53,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 20,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7284,
    "created_at": "2024-08-17T02:57:05.406695Z",
    "updated_at": "2024-08-17T02:57:05.406695Z",
    "lead_time": 61.861
  },
  {
    "text": "关于存储器读的三个总线周期的说明示于表中",
    "id": 5852,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "存储器读",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7285,
    "created_at": "2024-08-17T02:57:16.378519Z",
    "updated_at": "2024-08-17T02:57:16.378519Z",
    "lead_time": 10.405
  },
  {
    "text": "操作码一经译码后，即可向操作控制器发出具体操作的特定信号",
    "id": 5853,
    "label": [
      {
        "start": 12,
        "end": 17,
        "text": "操作控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "译码",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7286,
    "created_at": "2024-08-17T02:57:18.437557Z",
    "updated_at": "2024-08-17T02:57:18.437557Z",
    "lead_time": 1.607
  },
  {
    "text": "为此，每行也设置一个计数器，但它们是cache每命中一次，命中行计数器清零，其他各行计数器增",
    "id": 5854,
    "label": [
      {
        "start": 18,
        "end": 23,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 45,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7287,
    "created_at": "2024-08-17T02:57:20.145392Z",
    "updated_at": "2024-08-17T02:57:20.145392Z",
    "lead_time": 1.2
  },
  {
    "text": "DVDROM的数据也是事先存储在光盘上，这与CDROM是相同的",
    "id": 5855,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "DVDROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7288,
    "created_at": "2024-08-17T02:57:23.000654Z",
    "updated_at": "2024-08-17T02:57:23.000654Z",
    "lead_time": 2.442
  },
  {
    "text": "许多单片机或者简单电子模块往往会内置EPROM芯片",
    "id": 5856,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "单片机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 23,
        "text": "EPROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7289,
    "created_at": "2024-08-17T02:57:34.180783Z",
    "updated_at": "2024-08-17T02:57:34.180783Z",
    "lead_time": 10.764
  },
  {
    "text": "这两种存放方式都是常用方式，不同的计算机可以选用其中任何一种",
    "id": 5857,
    "label": [
      {
        "start": 17,
        "end": 20,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7290,
    "created_at": "2024-08-17T02:57:37.362379Z",
    "updated_at": "2024-08-17T02:57:37.362379Z",
    "lead_time": 2.748
  },
  {
    "text": "年，仙童半导体公司生产出了第一个较大容量半导体存储器",
    "id": 5858,
    "label": [
      {
        "start": 2,
        "end": 9,
        "text": "仙童半导体公司",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 20,
        "end": 26,
        "text": "半导体存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7291,
    "created_at": "2024-08-17T02:57:39.124407Z",
    "updated_at": "2024-08-17T02:57:39.124407Z",
    "lead_time": 1.351
  },
  {
    "text": "微指令格式中的顺序控制部分用来决定产生下一条微指令的地址",
    "id": 5859,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7292,
    "created_at": "2024-08-17T02:57:41.196245Z",
    "updated_at": "2024-08-17T02:57:41.196245Z",
    "lead_time": 1.637
  },
  {
    "text": "按操作数的物理位置不同，有RR型和RS型",
    "id": 5860,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7293,
    "created_at": "2024-08-17T02:57:44.308382Z",
    "updated_at": "2024-08-17T02:57:47.313597Z",
    "lead_time": 4.178
  },
  {
    "text": "虽然在这种结构中输入数据和操作结果需要三次串行的选通操作，但它并不会对每种指令都增加很多执行时间",
    "id": 5861,
    "label": [
      {
        "start": 44,
        "end": 48,
        "text": "执行时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7294,
    "created_at": "2024-08-17T02:57:49.289339Z",
    "updated_at": "2024-08-17T02:57:49.289339Z",
    "lead_time": 0.509
  },
  {
    "text": "故图中增加了刷新计数器刷新行地址发生器和相应的控制电路",
    "id": 5862,
    "label": [
      {
        "start": 23,
        "end": 27,
        "text": "控制电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "行地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7295,
    "created_at": "2024-08-17T02:58:00.340558Z",
    "updated_at": "2024-08-17T02:58:00.340558Z",
    "lead_time": 10.401
  },
  {
    "text": "操作码OP变址X间址I形式地址A由于指令中操作数字段的地址码由形式地址和寻址方式特征位等组合形成，因此，一般来说，指令中所给出的地址码，并不是操作数的有效地址",
    "id": 5863,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "形式地址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 31,
        "end": 35,
        "text": "形式地址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 75,
        "end": 79,
        "text": "有效地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 40,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 71,
        "end": 74,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 64,
        "end": 67,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 57,
        "end": 59,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "变址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "OP",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 42,
        "end": 43,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7296,
    "created_at": "2024-08-17T02:58:04.184531Z",
    "updated_at": "2024-08-17T02:58:04.184531Z",
    "lead_time": 3.281
  },
  {
    "text": "多级中断的概念多级中断系统是指计算机系统中有相当多的中断源，根据各中断事件的轻重缓急程度不同而分成若干级别，每一中断级分配给一个优先权",
    "id": 5864,
    "label": [
      {
        "start": 15,
        "end": 20,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 56,
        "end": 58,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7297,
    "created_at": "2024-08-17T02:58:06.497547Z",
    "updated_at": "2024-08-17T02:58:06.498505Z",
    "lead_time": 1.823
  },
  {
    "text": "我们知道，硬件只能识别二进制语言",
    "id": 5865,
    "label": [
      {
        "start": 5,
        "end": 7,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7298,
    "created_at": "2024-08-17T02:58:08.143460Z",
    "updated_at": "2024-08-17T02:58:08.143460Z",
    "lead_time": 1.178
  },
  {
    "text": "光电式鼠标器比机械式鼠标器可靠性高，但需要附带一块金属板",
    "id": 5866,
    "annotator": 1,
    "annotation_id": 7299,
    "created_at": "2024-08-17T02:58:09.149249Z",
    "updated_at": "2024-08-17T02:58:09.149249Z",
    "lead_time": 0.59
  },
  {
    "text": "磁性材料上呈现剩磁状态的地方形成了一个磁化元或存储元，它是记录一个二进制信息位的最小单位",
    "id": 5867,
    "label": [
      {
        "start": 23,
        "end": 26,
        "text": "存储元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 38,
        "end": 39,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7300,
    "created_at": "2024-08-17T02:58:11.587277Z",
    "updated_at": "2024-08-17T02:58:16.785021Z",
    "lead_time": 5.599
  },
  {
    "text": "我们看到，PCI总线周期的操作过程有如下特点",
    "id": 5868,
    "label": [
      {
        "start": 5,
        "end": 10,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7301,
    "created_at": "2024-08-17T02:58:19.049272Z",
    "updated_at": "2024-08-17T02:58:19.049272Z",
    "lead_time": 0.91
  },
  {
    "text": "因为水平型微指令的并行操作能力强，所以与垂直型微指令相比，可以用较少的微指令数来实现一条指令的功能，从而缩短了指令的执行时间",
    "id": 5869,
    "label": [
      {
        "start": 20,
        "end": 26,
        "text": "垂直型微指令",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 8,
        "text": "水平型微指令",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 58,
        "end": 62,
        "text": "执行时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7302,
    "created_at": "2024-08-17T02:58:20.825993Z",
    "updated_at": "2024-08-17T02:58:20.825993Z",
    "lead_time": 1.353
  },
  {
    "text": "该地址不仅加至主存，同时也加至总线上的所有外围设备",
    "id": 5870,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7303,
    "created_at": "2024-08-17T02:58:22.162024Z",
    "updated_at": "2024-08-17T02:58:22.162024Z",
    "lead_time": 0.878
  },
  {
    "text": "在中断周期中由硬件实现的响应中断、关中断等操作由于在主程序和中断服务程序的代码中都看不到，因而被称为“中断处理的隐操作”",
    "id": 5871,
    "label": [
      {
        "start": 14,
        "end": 16,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 51,
        "end": 53,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "中断周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 30,
        "end": 36,
        "text": "中断服务程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "关中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7304,
    "created_at": "2024-08-17T02:58:40.942364Z",
    "updated_at": "2024-08-17T02:58:40.942364Z",
    "lead_time": 18.326
  },
  {
    "text": "程序是一个指令序列，这个序列明确告诉计算机应该执行什么操作，在什么地方找到用来操作的数据",
    "id": 5872,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "指令序列",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7305,
    "created_at": "2024-08-17T02:58:42.929436Z",
    "updated_at": "2024-08-17T02:58:42.929436Z",
    "lead_time": 1.404
  },
  {
    "text": "链式查询方式的主要特点是，总线授权信号BG串行地从一个IO接口传送到下一个IO接口",
    "id": 5873,
    "label": [
      {
        "start": 13,
        "end": 15,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "IO接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 41,
        "text": "IO接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7306,
    "created_at": "2024-08-17T02:58:44.678431Z",
    "updated_at": "2024-08-17T02:58:44.678431Z",
    "lead_time": 1.229
  },
  {
    "text": "命中率h与程序的行为、cache的容量、组织方式、块的大小有关",
    "id": 5874,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "命中率",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 11,
        "end": 16,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7307,
    "created_at": "2024-08-17T02:58:45.818306Z",
    "updated_at": "2024-08-17T02:58:45.818306Z",
    "lead_time": 0.606
  },
  {
    "text": "即系统可配置个这样的模块，存储器容量达到MB",
    "id": 5875,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "MB",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7308,
    "created_at": "2024-08-17T02:58:46.992239Z",
    "updated_at": "2024-08-17T02:58:46.992239Z",
    "lead_time": 0.607
  },
  {
    "text": "随着计算机的广泛应用，这类程序的种类越来越多",
    "id": 5876,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7309,
    "created_at": "2024-08-17T02:58:48.446263Z",
    "updated_at": "2024-08-17T02:58:48.446263Z",
    "lead_time": 0.882
  },
  {
    "text": "PCI总线是一个或位的同步总线，位或位数据地址线是同一组线，分时复用",
    "id": 5877,
    "label": [
      {
        "start": 21,
        "end": 24,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "同步总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "分时复用",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 17,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 19,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7310,
    "created_at": "2024-08-17T02:59:18.468347Z",
    "updated_at": "2024-08-17T02:59:18.468347Z",
    "lead_time": 29.499
  },
  {
    "text": "磁盘驱动器包括写入电路与读出电路、读写转换开关、读写磁头与磁头定位伺服系统等",
    "id": 5878,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "磁盘驱动器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7311,
    "created_at": "2024-08-17T03:00:03.532567Z",
    "updated_at": "2024-08-17T03:00:03.532567Z",
    "lead_time": 44.369
  },
  {
    "text": "图b中所有的IO设备通过一条线向CPU发出中断请求信号",
    "id": 5879,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7312,
    "created_at": "2024-08-17T03:00:05.097330Z",
    "updated_at": "2024-08-17T03:00:22.274327Z",
    "lead_time": 15.248
  },
  {
    "text": "行选线为高，打开MOS管，若当前存储的信息为，则电容上所存储的送到位线上，通过输出缓冲器读出放大器发送到DOUT，即DOUT",
    "id": 5880,
    "label": [
      {
        "start": 46,
        "end": 49,
        "text": "放大器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 44,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 34,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7313,
    "created_at": "2024-08-17T03:00:27.355303Z",
    "updated_at": "2024-08-17T03:00:27.355814Z",
    "lead_time": 3.61
  },
  {
    "text": "无符号字用于位逻辑运算，或作为地址指针",
    "id": 5881,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "逻辑运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "指针",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 7,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 4,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7314,
    "created_at": "2024-08-17T03:00:32.802458Z",
    "updated_at": "2024-08-17T03:00:32.802458Z",
    "lead_time": 4.942
  },
  {
    "text": "微操作控制信号的产生在微程序控制器中，微操作控制信号由微指令产生，并且可以重复使用",
    "id": 5882,
    "label": [
      {
        "start": 0,
        "end": 7,
        "text": "微操作控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 26,
        "text": "微操作控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 17,
        "text": "微程序控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7315,
    "created_at": "2024-08-17T03:00:41.938583Z",
    "updated_at": "2024-08-17T03:00:41.938583Z",
    "lead_time": 8.618
  },
  {
    "text": "发生冲突时就要将原先存入的行换出去，但很可能过一段时间又要换入",
    "id": 5883,
    "annotator": 1,
    "annotation_id": 7316,
    "created_at": "2024-08-17T03:00:50.347096Z",
    "updated_at": "2024-08-17T03:00:50.347096Z",
    "lead_time": 7.889
  },
  {
    "text": "保护模式下进入中断服务子程序的过程如图b所示",
    "id": 5884,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7317,
    "created_at": "2024-08-17T03:00:52.251710Z",
    "updated_at": "2024-08-17T03:00:52.251710Z",
    "lead_time": 1.412
  },
  {
    "text": "操作码字段表征指令的操作特性与功能，而地址码字段通常指定参与操作的操作数的地址",
    "id": 5885,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7318,
    "created_at": "2024-08-17T03:00:58.347344Z",
    "updated_at": "2024-08-17T03:00:58.347344Z",
    "lead_time": 5.552
  },
  {
    "text": "通常，写入和读出是合用一个磁头，故称为读写磁头",
    "id": 5886,
    "label": [
      {
        "start": 13,
        "end": 15,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7319,
    "created_at": "2024-08-17T03:01:00.623681Z",
    "updated_at": "2024-08-17T03:01:00.623681Z",
    "lead_time": 1.637
  },
  {
    "text": "对应用程序而言，如果主存的命中率很高，虚存的访问时间就接近于主存访问时间，而虚存的大小仅仅依赖于辅存的大小",
    "id": 5887,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "应用程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "命中率",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 48,
        "end": 50,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "虚存",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "虚存",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7320,
    "created_at": "2024-08-17T03:01:03.283583Z",
    "updated_at": "2024-08-17T03:01:03.283583Z",
    "lead_time": 2.077
  },
  {
    "text": "FD段需要一个时钟周期，完成由指令cache取一对指令并译码，并从寄存器堆取操作数，然后判断是否把指令发射到EX段",
    "id": 5888,
    "label": [
      {
        "start": 15,
        "end": 22,
        "text": "指令cache",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "寄存器堆",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "译码",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7321,
    "created_at": "2024-08-17T03:01:05.441435Z",
    "updated_at": "2024-08-17T03:01:05.441435Z",
    "lead_time": 1.534
  },
  {
    "text": "无冲突读写控制当两个端口的地址不相同时，在两个端口上进行读写操作，一定不会发生冲突",
    "id": 5889,
    "label": [
      {
        "start": 29,
        "end": 32,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7322,
    "created_at": "2024-08-17T03:01:07.824665Z",
    "updated_at": "2024-08-17T03:01:07.824665Z",
    "lead_time": 1.763
  },
  {
    "text": "机器一旦被启动，即CPU开始取指令并执行指令时，操作控制器就利用定时脉冲的顺序和不同的脉冲间隔，有条理、有节奏地指挥机器的动作，规定在这个脉冲到来时做什么，在那个脉冲到来时又做什么，给计算机各部分提供工作所需的时间标志",
    "id": 5890,
    "label": [
      {
        "start": 24,
        "end": 29,
        "text": "操作控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 105,
        "end": 109,
        "text": "时间标志",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "取指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 92,
        "end": 95,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7323,
    "created_at": "2024-08-17T03:01:10.899555Z",
    "updated_at": "2024-08-17T03:01:10.899555Z",
    "lead_time": 2.537
  },
  {
    "text": "在这种情况下，需要在指令格式中对寄存器号加以编址",
    "id": 5891,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "编址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7324,
    "created_at": "2024-08-17T03:01:14.962811Z",
    "updated_at": "2024-08-17T03:01:14.962811Z",
    "lead_time": 3.422
  },
  {
    "text": "当数据以这种方式看待时，称为逻辑性数据，它创造了对某个具体位进行布尔逻辑运算的机会",
    "id": 5892,
    "label": [
      {
        "start": 34,
        "end": 38,
        "text": "逻辑运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 29,
        "end": 30,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7325,
    "created_at": "2024-08-17T03:01:19.716733Z",
    "updated_at": "2024-08-17T03:01:19.716733Z",
    "lead_time": 4.186
  },
  {
    "text": "一个虚地址可以看作由四个字段构成：基号N段号S段内逻辑页号P页内地址偏移量D在主存中，每道程序都有一张段表，A程序有段，C程序有段，每段应有一张页表，段表的每行就表示相应页表的起始位置，而页表内的每行即为相应的物理页号",
    "id": 5893,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "虚地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 105,
        "end": 109,
        "text": "物理页号",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "逻辑页号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "偏移量",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "段号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 51,
        "end": 53,
        "text": "段表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 75,
        "end": 77,
        "text": "段表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 72,
        "end": 74,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 85,
        "end": 87,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 94,
        "end": 96,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 61,
        "end": 63,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 90,
        "end": 91,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 30,
        "end": 31,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7326,
    "created_at": "2024-08-17T03:01:23.919748Z",
    "updated_at": "2024-08-17T03:01:23.919748Z",
    "lead_time": 3.71
  },
  {
    "text": "显然，第三种并行技术带来的高速效益是最好的",
    "id": 5894,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7327,
    "created_at": "2024-08-17T03:02:12.770051Z",
    "updated_at": "2024-08-17T03:02:12.770051Z",
    "lead_time": 48.217
  },
  {
    "text": "它一方面与位或位的系统总线相接，另一方面通过一个针D形插口与显示器电缆连接，将水平、垂直同步信号VSYNC、HSYNC和红R、绿G、蓝B三色模拟信号送至显示器",
    "id": 5895,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "系统总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 76,
        "end": 79,
        "text": "显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 5,
        "end": 6,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 8,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7328,
    "created_at": "2024-08-17T03:02:17.240209Z",
    "updated_at": "2024-08-17T03:02:17.240209Z",
    "lead_time": 3.965
  },
  {
    "text": "存储管理部件包括分段部件SU和分页部件PU两部分",
    "id": 5896,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "存储管理部件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "分段部件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 19,
        "text": "分页部件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7329,
    "created_at": "2024-08-17T06:28:44.991920Z",
    "updated_at": "2024-08-17T06:28:44.991920Z",
    "lead_time": 2.567
  },
  {
    "text": "现在假设Cy，则要执行的下一条微指令地址为",
    "id": 5897,
    "label": [
      {
        "start": 15,
        "end": 18,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7330,
    "created_at": "2024-08-17T06:28:49.718846Z",
    "updated_at": "2024-08-17T06:28:49.718846Z",
    "lead_time": 4.159
  },
  {
    "text": "这样，当CPU把指令的地址字段送到总线上时：如果该地址字段对应的地址是主存地址，则主存予以响应，从而在CPU和主存之间发生数据传送，而数据传送的方向由指令操作码决定",
    "id": 5898,
    "label": [
      {
        "start": 35,
        "end": 39,
        "text": "主存地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 75,
        "end": 80,
        "text": "指令操作码",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "地址字段",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "地址字段",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 51,
        "end": 54,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7331,
    "created_at": "2024-08-17T06:28:53.152137Z",
    "updated_at": "2024-08-17T06:28:53.152137Z",
    "lead_time": 2.71
  },
  {
    "text": "平均寻址时间寻址时间是指从读写命令发出后，磁头从某一起始位置移动至新的记录位置，再到磁道上需要访问的扇区移动到磁头下方所需的时间",
    "id": 5899,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "扇区",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "磁道",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 28,
        "end": 29,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 37,
        "end": 38,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7332,
    "created_at": "2024-08-17T06:28:55.439783Z",
    "updated_at": "2024-08-17T06:28:55.439783Z",
    "lead_time": 1.497
  },
  {
    "text": "数据之后是校验字，它用来校验磁盘读出的数据是否正确",
    "id": 5900,
    "label": [
      {
        "start": 14,
        "end": 16,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7333,
    "created_at": "2024-08-17T06:29:00.489856Z",
    "updated_at": "2024-08-17T06:29:00.489856Z",
    "lead_time": 4.242
  },
  {
    "text": "包含KB的片内cache，它采用每行B的路组相联结构",
    "id": 5901,
    "label": [
      {
        "start": 7,
        "end": 12,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "组相联",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "KB",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7334,
    "created_at": "2024-08-17T06:29:05.279607Z",
    "updated_at": "2024-08-17T06:29:05.280610Z",
    "lead_time": 3.787
  },
  {
    "text": "成组连续传送方式当外围设备要求传送一批数据时，由DMA控制器发一个停止信号给CPU，要求CPU放弃对地址总线、数据总线和有关控制总线的使用权",
    "id": 5902,
    "label": [
      {
        "start": 24,
        "end": 30,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 62,
        "end": 66,
        "text": "控制总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 50,
        "end": 54,
        "text": "地址总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 55,
        "end": 59,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 44,
        "end": 47,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7335,
    "created_at": "2024-08-17T06:29:48.131831Z",
    "updated_at": "2024-08-17T06:29:48.131831Z",
    "lead_time": 41.61
  },
  {
    "text": "PCIe总线还引入了嵌入时钟技术，发送端不向接收端传输时钟信号，而是通过bb或bb编码将时钟信息嵌入数据信号中，接收端可以从数据中恢复出时钟",
    "id": 5903,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "PCIe总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "时钟信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 68,
        "end": 70,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7336,
    "created_at": "2024-08-17T06:29:52.410129Z",
    "updated_at": "2024-08-17T06:29:52.410129Z",
    "lead_time": 3.552
  },
  {
    "text": "例如，一个指令系统只有条指令，则有位操作码就够了",
    "id": 5904,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 17,
        "end": 18,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7337,
    "created_at": "2024-08-17T06:29:54.847946Z",
    "updated_at": "2024-08-17T06:29:54.847946Z",
    "lead_time": 1.875
  },
  {
    "text": "注意，不论是数据，还是解题步骤，在存放到存储器以前，它们全已变成或表示的二进制代码",
    "id": 5905,
    "label": [
      {
        "start": 36,
        "end": 39,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7338,
    "created_at": "2024-08-17T06:29:56.311884Z",
    "updated_at": "2024-08-17T06:29:56.311884Z",
    "lead_time": 0.835
  },
  {
    "text": "图a示出了串行传送的示意图",
    "id": 5906,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "串行传送",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7339,
    "created_at": "2024-08-17T06:29:57.613043Z",
    "updated_at": "2024-08-17T06:29:57.613043Z",
    "lead_time": 0.542
  },
  {
    "text": "CPU对通道的管理CPU是通过执行IO指令以及处理来自通道的中断，实现对通道的管理",
    "id": 5907,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "IO指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7340,
    "created_at": "2024-08-17T06:30:58.162112Z",
    "updated_at": "2024-08-17T06:30:58.162112Z",
    "lead_time": 59.842
  },
  {
    "text": "SCSI标准允许SCSI总线上连接的设备由个提高到个，可支持位数据传输",
    "id": 5908,
    "label": [
      {
        "start": 12,
        "end": 14,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 31,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7341,
    "created_at": "2024-08-17T06:31:00.897050Z",
    "updated_at": "2024-08-17T06:31:00.897050Z",
    "lead_time": 2.153
  },
  {
    "text": "令Aanaa是给定的n位带符号的数，要求确定它的补码形式",
    "id": 5909,
    "label": [
      {
        "start": 24,
        "end": 26,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7342,
    "created_at": "2024-08-17T06:31:02.625692Z",
    "updated_at": "2024-08-17T06:31:02.625692Z",
    "lead_time": 1.295
  },
  {
    "text": "若采用直接寻址方式，则称为绝对转移，转移地址由指令地址码部分直接给出",
    "id": 5910,
    "label": [
      {
        "start": 3,
        "end": 9,
        "text": "直接寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "转移地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "指令地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7343,
    "created_at": "2024-08-17T06:31:03.793843Z",
    "updated_at": "2024-08-17T06:31:03.793843Z",
    "lead_time": 0.724
  },
  {
    "text": "当ExEy时，要通过尾数的移动以改变Ex或Ey，使之相等",
    "id": 5911,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7344,
    "created_at": "2024-08-17T06:31:05.540346Z",
    "updated_at": "2024-08-17T06:31:05.540346Z",
    "lead_time": 1.264
  },
  {
    "text": "在指令流水方式中，中断发生或从中断返回时，指令队列预取的指令会全部作废",
    "id": 5912,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "流水",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "指令队列",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7345,
    "created_at": "2024-08-17T06:31:08.983228Z",
    "updated_at": "2024-08-17T06:31:08.983228Z",
    "lead_time": 3.025
  },
  {
    "text": "当数据和指令放在同一个存储器且只有一个访问口时，便发生两条指令争用存储器资源的相关冲突",
    "id": 5913,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7346,
    "created_at": "2024-08-17T06:31:10.208274Z",
    "updated_at": "2024-08-17T06:31:10.208274Z",
    "lead_time": 0.771
  },
  {
    "text": "思考题你能说出多总线结构比单总线结构的创新点吗？早期总线的内部结构如图所示，它实际上是处理器芯片引脚的延伸，是处理器与IO设备适配器的通道",
    "id": 5914,
    "label": [
      {
        "start": 13,
        "end": 18,
        "text": "单总线结构",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 59,
        "end": 63,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 55,
        "end": 58,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "多总线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 63,
        "end": 66,
        "text": "适配器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 48,
        "end": 50,
        "text": "引脚",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7347,
    "created_at": "2024-08-17T06:31:11.214065Z",
    "updated_at": "2024-08-17T06:31:11.214065Z",
    "lead_time": 0.371
  },
  {
    "text": "例如下述字符串：IFABTHENREADC就可以按图所示从高位字节到低位字节依次存放在主存中",
    "id": 5915,
    "label": [
      {
        "start": 29,
        "end": 33,
        "text": "高位字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "低位字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7348,
    "created_at": "2024-08-17T06:31:15.484105Z",
    "updated_at": "2024-08-17T06:31:15.484105Z",
    "lead_time": 3.717
  },
  {
    "text": "即在主设备A正在占用总线期间，中央仲裁器根据指定的算法裁决下一次总线的主方应为主设备B时，它可以使nGNTA无效而使nGNTB有效",
    "id": 5916,
    "label": [
      {
        "start": 15,
        "end": 20,
        "text": "中央仲裁器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "主设备",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "主设备",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "算法",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7349,
    "created_at": "2024-08-17T06:32:16.291470Z",
    "updated_at": "2024-08-17T06:32:16.291470Z",
    "lead_time": 60.32
  },
  {
    "text": "其中操作数使用个寄存器r，rr，SP，Ir，PC，个存储字字节编址，连续的字的地址之间相差",
    "id": 5917,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "存储字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "编址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 38,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7350,
    "created_at": "2024-08-17T06:32:19.774978Z",
    "updated_at": "2024-08-17T06:32:19.774978Z",
    "lead_time": 3.063
  },
  {
    "text": "接受CPU的IO指令，按指令要求与指定的外围设备进行通信",
    "id": 5918,
    "label": [
      {
        "start": 20,
        "end": 24,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7351,
    "created_at": "2024-08-17T06:32:21.054868Z",
    "updated_at": "2024-08-17T06:32:21.054868Z",
    "lead_time": 0.826
  },
  {
    "text": "例如，记录在录像带上的图像要用录像机读出，再将视频信号经图像板量化后输入计算机",
    "id": 5919,
    "label": [
      {
        "start": 36,
        "end": 39,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7352,
    "created_at": "2024-08-17T06:32:22.074201Z",
    "updated_at": "2024-08-17T06:32:22.074201Z",
    "lead_time": 0.591
  },
  {
    "text": "软中断程序自愿中断",
    "id": 5920,
    "label": [
      {
        "start": 1,
        "end": 3,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7353,
    "created_at": "2024-08-17T06:32:22.943518Z",
    "updated_at": "2024-08-17T06:32:22.943518Z",
    "lead_time": 0.452
  },
  {
    "text": "一个叫做指令译码器的部件就是做这项工作的",
    "id": 5921,
    "label": [
      {
        "start": 4,
        "end": 9,
        "text": "指令译码器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7354,
    "created_at": "2024-08-17T06:32:23.811930Z",
    "updated_at": "2024-08-17T06:32:23.811930Z",
    "lead_time": 0.409
  },
  {
    "text": "PCI采用集中式仲裁方式，每个PCI主设备都有总线请求REQ和授权GNT两条信号线与中央仲裁器相连",
    "id": 5922,
    "label": [
      {
        "start": 5,
        "end": 10,
        "text": "集中式仲裁",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 42,
        "end": 47,
        "text": "中央仲裁器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "总线请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "主设备",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "PCI",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "PCI",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7355,
    "created_at": "2024-08-17T06:32:24.644947Z",
    "updated_at": "2024-08-17T06:32:24.644947Z",
    "lead_time": 0.398
  },
  {
    "text": "除一组信号线用于扩充到位传送外，其他三组信号分别用于cache一致性支持、中断请求、测试与边界扫描",
    "id": 5923,
    "label": [
      {
        "start": 26,
        "end": 34,
        "text": "cache一致性",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7356,
    "created_at": "2024-08-17T06:32:27.128135Z",
    "updated_at": "2024-08-17T06:32:27.128135Z",
    "lead_time": 2.053
  },
  {
    "text": "在显示过程中，按照VRAM中的ASCII码和光栅地址计数器访问ROM，依次取出字形点阵，就可以完成一个字符的输出，见图b",
    "id": 5924,
    "label": [
      {
        "start": 15,
        "end": 21,
        "text": "ASCII码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "RAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "点阵",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7357,
    "created_at": "2024-08-17T06:32:33.837534Z",
    "updated_at": "2024-08-17T06:32:33.837534Z",
    "lead_time": 6.281
  },
  {
    "text": "至于存到该组哪一行是灵活的，即有如下函数关系：内存地址中，s位块号划分成两部分：低d位du主存区内块号用于表示cache组号而不是cache行号，高sd位区号作为标记与块数据一起存于此组的某行中",
    "id": 5925,
    "label": [
      {
        "start": 65,
        "end": 71,
        "text": "cache行",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 55,
        "end": 60,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "内存地址",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 60,
        "end": 62,
        "text": "组号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "块号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "块号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 31,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 42,
        "end": 43,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 76,
        "end": 77,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7358,
    "created_at": "2024-08-17T06:33:55.977996Z",
    "updated_at": "2024-08-17T06:33:55.977996Z",
    "lead_time": 81.624
  },
  {
    "text": "习惯上所称的“电子计算机”是指现在广泛应用的电子数字计算机，它分为专用计算机和通用计算机两大类",
    "id": 5926,
    "label": [
      {
        "start": 22,
        "end": 29,
        "text": "电子数字计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 33,
        "end": 38,
        "text": "专用计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 12,
        "text": "电子计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 39,
        "end": 44,
        "text": "通用计算机",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7359,
    "created_at": "2024-08-17T06:34:20.695977Z",
    "updated_at": "2024-08-17T06:34:20.695977Z",
    "lead_time": 24.257
  },
  {
    "text": "利用率在给定的时间间隔内系统被实际使用的时间所占的比率，用百分比表示",
    "id": 5927,
    "annotator": 1,
    "annotation_id": 7360,
    "created_at": "2024-08-17T06:34:23.100867Z",
    "updated_at": "2024-08-17T06:34:23.100867Z",
    "lead_time": 1.87
  },
  {
    "text": "特权指令特权指令是指具有特殊权限的指令",
    "id": 5928,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "特权指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "特权指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7361,
    "created_at": "2024-08-17T06:34:24.830866Z",
    "updated_at": "2024-08-17T06:34:24.830866Z",
    "lead_time": 1.259
  },
  {
    "text": "更新问题确保主存与辅存的一致性",
    "id": 5929,
    "label": [
      {
        "start": 9,
        "end": 11,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7362,
    "created_at": "2024-08-17T06:34:25.660858Z",
    "updated_at": "2024-08-17T06:34:25.660858Z",
    "lead_time": 0.364
  },
  {
    "text": "它可以摄取任何地点、任何环境的自然景物和物体，直接将数字图像存入磁盘",
    "id": 5930,
    "label": [
      {
        "start": 32,
        "end": 34,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7363,
    "created_at": "2024-08-17T06:34:33.928289Z",
    "updated_at": "2024-08-17T06:34:33.928289Z",
    "lead_time": 7.789
  },
  {
    "text": "不仅如此，在一个CPU周期中，又把时间分为若干个小段，以便规定在这一小段时间中CPU干什么，在那一小段时间中CPU又干什么，这种时间约束对CPU来说是非常必要的，否则就可能造成丢失信息或导致错误的结果",
    "id": 5931,
    "label": [
      {
        "start": 8,
        "end": 13,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 54,
        "end": 57,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 69,
        "end": 72,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7364,
    "created_at": "2024-08-17T06:34:36.603899Z",
    "updated_at": "2024-08-17T06:34:36.603899Z",
    "lead_time": 2.291
  },
  {
    "text": "透明性不同cache的管理完全由硬件完成，对系统程序员和应用程序员均透明；而虚存管理由软件操作系统和硬件共同完成，由于软件的介入，虚存对实现存储管理的系统程序员不透明，而只对应用程序员透明段式和段页式管理对应用程序员“半透明”",
    "id": 5932,
    "label": [
      {
        "start": 45,
        "end": 49,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 5,
        "end": 10,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 59,
        "end": 61,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "虚存",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 65,
        "end": 67,
        "text": "虚存",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 98,
        "end": 99,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7365,
    "created_at": "2024-08-17T06:35:22.005116Z",
    "updated_at": "2024-08-17T06:35:22.005116Z",
    "lead_time": 44.952
  },
  {
    "text": "基址寄存器B的内容为有效地址",
    "id": 5933,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "基址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "有效地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7366,
    "created_at": "2024-08-17T06:35:38.114917Z",
    "updated_at": "2024-08-17T06:35:38.114917Z",
    "lead_time": 15.631
  },
  {
    "text": "读取数据时，在超过标准温度的激光束的照射下，这些烧过的斑点颜色发生变化，呈现出比未被灼烧的地方较暗的亮度",
    "id": 5934,
    "annotator": 1,
    "annotation_id": 7367,
    "created_at": "2024-08-17T06:35:39.348229Z",
    "updated_at": "2024-08-17T06:35:39.348229Z",
    "lead_time": 0.837
  },
  {
    "text": "外围设备的种类繁多，有机械式和电动式，也有电子式和其他形式",
    "id": 5935,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7368,
    "created_at": "2024-08-17T06:35:40.268571Z",
    "updated_at": "2024-08-17T06:35:40.268571Z",
    "lead_time": 0.573
  },
  {
    "text": "将指令流的处理过程划分为取指令、译码、取操作数、执行、写回等几个并行处理的过程段",
    "id": 5936,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "取指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "指令流",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "译码",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7369,
    "created_at": "2024-08-17T06:35:41.794076Z",
    "updated_at": "2024-08-17T06:35:41.794076Z",
    "lead_time": 1.155
  },
  {
    "text": "除了方框，还需要一个菱形符号，它通常用来表示某种判别或测试，不过时间上它依附于紧接它的前面一个方框的CPU周期，而不单独占用一个CPU周期",
    "id": 5937,
    "label": [
      {
        "start": 50,
        "end": 55,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 64,
        "end": 69,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7370,
    "created_at": "2024-08-17T06:35:42.963056Z",
    "updated_at": "2024-08-17T06:35:42.963056Z",
    "lead_time": 0.763
  },
  {
    "text": "以点阵为例，每个汉字要占用字节，国标两级汉字要占用K字节",
    "id": 5938,
    "label": [
      {
        "start": 1,
        "end": 3,
        "text": "点阵",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "汉字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "汉字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7371,
    "created_at": "2024-08-17T06:35:45.369194Z",
    "updated_at": "2024-08-17T06:35:45.369194Z",
    "lead_time": 2.029
  },
  {
    "text": "一个总线周期由一个地址期和一个或多个数据期组成",
    "id": 5939,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "地址期",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "数据期",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7372,
    "created_at": "2024-08-17T06:35:46.298265Z",
    "updated_at": "2024-08-17T06:36:02.042156Z",
    "lead_time": 13.79
  },
  {
    "text": "所谓公操作，就是一条指令执行完毕后，CPU所开始进行的一些操作，这些操作主要是CPU对外围设备请求的处理，如中断处理、通道处理等",
    "id": 5940,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 43,
        "end": 47,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 54,
        "end": 56,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7373,
    "created_at": "2024-08-17T06:36:38.079725Z",
    "updated_at": "2024-08-17T06:36:38.079725Z",
    "lead_time": 34.355
  },
  {
    "text": "而总线控制器完成多个总线请求者之间的协调与仲裁",
    "id": 5941,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "总线请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7374,
    "created_at": "2024-08-17T06:36:39.762767Z",
    "updated_at": "2024-08-17T06:36:39.762767Z",
    "lead_time": 1.26
  },
  {
    "text": "因此字模点阵的信息量是很大的，所占存储空间也很大",
    "id": 5942,
    "label": [
      {
        "start": 17,
        "end": 21,
        "text": "存储空间",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "点阵",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7375,
    "created_at": "2024-08-17T06:36:42.942795Z",
    "updated_at": "2024-08-17T06:36:42.942795Z",
    "lead_time": 2.778
  },
  {
    "text": "分段不分页模式相当于段式虚拟存储器",
    "id": 5943,
    "label": [
      {
        "start": 10,
        "end": 17,
        "text": "段式虚拟存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 7,
        "text": "分段不分页模式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7376,
    "created_at": "2024-08-17T06:36:44.118866Z",
    "updated_at": "2024-08-17T06:36:44.118866Z",
    "lead_time": 0.693
  },
  {
    "text": "除各种条件转移指令外，还有无条件转移指令、转子程序指令、返回主程序指令、中断返回指令等",
    "id": 5944,
    "label": [
      {
        "start": 3,
        "end": 9,
        "text": "条件转移指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 14,
        "end": 20,
        "text": "条件转移指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7377,
    "created_at": "2024-08-17T06:36:45.468303Z",
    "updated_at": "2024-08-17T06:36:45.469310Z",
    "lead_time": 0.798
  },
  {
    "text": "如SKP指令是测试跳步指令，它是程序查询方式中常用的指令，其功能是测试外部设备的状态标志如“就绪”触发器：若状态标志为“”，则顺序执行下一条指令；若状态标志为“”，则跳过下一条指令",
    "id": 5945,
    "label": [
      {
        "start": 49,
        "end": 52,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 39,
        "text": "外部设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 70,
        "end": 72,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 88,
        "end": 90,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 16,
        "end": 22,
        "text": "程序查询方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7378,
    "created_at": "2024-08-17T06:36:54.083012Z",
    "updated_at": "2024-08-17T06:36:54.083012Z",
    "lead_time": 7.87
  },
  {
    "text": "若E，则NSME规格化数",
    "id": 5946,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "规格化数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7379,
    "created_at": "2024-08-17T06:36:55.298216Z",
    "updated_at": "2024-08-17T06:36:55.298216Z",
    "lead_time": 0.573
  },
  {
    "text": "最不经常使用LFU算法LFU算法认为应将一段时间内被访问次数最少的那行数据换出",
    "id": 5947,
    "label": [
      {
        "start": 6,
        "end": 11,
        "text": "LFU算法",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 11,
        "end": 16,
        "text": "LFU算法",
        "labels": [
          "ALG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7380,
    "created_at": "2024-08-17T06:36:56.806969Z",
    "updated_at": "2024-08-17T06:36:56.806969Z",
    "lead_time": 0.901
  },
  {
    "text": "CPU在接收数据以后，通过接口发出输入响应信号，告诉外设已经把数据总线上的数据取走",
    "id": 5948,
    "label": [
      {
        "start": 26,
        "end": 28,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 31,
        "end": 35,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7381,
    "created_at": "2024-08-17T06:41:42.096801Z",
    "updated_at": "2024-08-17T06:41:42.096801Z",
    "lead_time": 284.673
  },
  {
    "text": "IEEE接管了这项工作，在此基础上制定了IEEEFireWire标准，它是一个通用的串行IO接口",
    "id": 5949,
    "label": [
      {
        "start": 44,
        "end": 48,
        "text": "IO接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7382,
    "created_at": "2024-08-17T06:41:47.999014Z",
    "updated_at": "2024-08-17T06:41:47.999014Z",
    "lead_time": 5.443
  },
  {
    "text": "SCSI设备之间是一种对等关系，而不是主从关系",
    "id": 5950,
    "annotator": 1,
    "annotation_id": 7383,
    "created_at": "2024-08-17T06:41:48.938892Z",
    "updated_at": "2024-08-17T06:41:48.938892Z",
    "lead_time": 0.552
  },
  {
    "text": "CDR使用激光将微型斑点烧在有机燃料表层",
    "id": 5951,
    "annotator": 1,
    "annotation_id": 7384,
    "created_at": "2024-08-17T06:41:49.766476Z",
    "updated_at": "2024-08-17T06:41:49.766476Z",
    "lead_time": 0.44
  },
  {
    "text": "通常采用的方法是给计算机配制一套用机器语言写的编译程序，它把源程序翻译成目的程序，然后机器执行目的程序，得出计算结果",
    "id": 5952,
    "label": [
      {
        "start": 23,
        "end": 27,
        "text": "编译程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "机器语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "源程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7385,
    "created_at": "2024-08-17T06:41:50.483085Z",
    "updated_at": "2024-08-17T06:41:50.483085Z",
    "lead_time": 0.315
  },
  {
    "text": "其中应用最普遍的是NOR技术和NAND技术",
    "id": 5953,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "AND",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7386,
    "created_at": "2024-08-17T06:41:51.113086Z",
    "updated_at": "2024-08-17T06:41:51.113086Z",
    "lead_time": 0.192
  },
  {
    "text": "图示出了记录方式的写读过程波形图",
    "id": 5954,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "波形图",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7387,
    "created_at": "2024-08-17T06:41:53.685100Z",
    "updated_at": "2024-08-17T06:41:53.685100Z",
    "lead_time": 1.522
  },
  {
    "text": "为了解决多个主设备同时竞争总线控制权的问题，必须具有总线仲裁部件，以某种方式选择其中一个主设备作为总线的下一次主方",
    "id": 5955,
    "label": [
      {
        "start": 26,
        "end": 30,
        "text": "总线仲裁",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 18,
        "text": "总线控制权",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "主设备",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 44,
        "end": 47,
        "text": "主设备",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7388,
    "created_at": "2024-08-17T06:41:58.552735Z",
    "updated_at": "2024-08-17T06:41:58.552735Z",
    "lead_time": 3.277
  },
  {
    "text": "程序运行时，由地址变换机构依据当时分配给该程序的实地址空间把程序的一部分调入实存",
    "id": 5956,
    "label": [
      {
        "start": 24,
        "end": 29,
        "text": "实地址空间",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "地址变换",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "实存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7389,
    "created_at": "2024-08-17T06:42:00.700626Z",
    "updated_at": "2024-08-17T06:42:00.700626Z",
    "lead_time": 1.73
  },
  {
    "text": "在这种结构中，速度差异较大的设备模块使用不同速度的总线，而速度相近的设备模块使用同一类总线",
    "id": 5957,
    "label": [
      {
        "start": 25,
        "end": 27,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7390,
    "created_at": "2024-08-17T06:42:01.758307Z",
    "updated_at": "2024-08-17T06:42:01.758307Z",
    "lead_time": 0.638
  },
  {
    "text": "例如，CPU访问主存时，依靠其送来的“READY”信号作为读写周期的结束标志半同步方式",
    "id": 5958,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "读写周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7391,
    "created_at": "2024-08-17T06:42:25.897364Z",
    "updated_at": "2024-08-17T06:42:25.897364Z",
    "lead_time": 23.729
  },
  {
    "text": "全写法writethrough全写法要求：当写cache命中时，cache与主存同时发生写修改，因而较好地维护了cache与主存的内容的一致性",
    "id": 5959,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "全写法",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 28,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 32,
        "end": 37,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 56,
        "end": 61,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "全写法",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 62,
        "end": 64,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7392,
    "created_at": "2024-08-17T06:42:29.350807Z",
    "updated_at": "2024-08-17T06:42:29.351807Z",
    "lead_time": 3.011
  },
  {
    "text": "第、两位作为判别测试标志",
    "id": 5960,
    "label": [
      {
        "start": 3,
        "end": 4,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7393,
    "created_at": "2024-08-17T06:42:30.163191Z",
    "updated_at": "2024-08-17T06:42:30.163191Z",
    "lead_time": 0.404
  },
  {
    "text": "思考题显示适配器中为什么一定要具有显示存储器？图形输入设备图形输入方法较多，特别是交互式图形系统要求具有人机对话功能：计算机将结果显示给人，人根据看到的显示决定下一步操作，并通过输入设备告诉计算机",
    "id": 5961,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "显示适配器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "输入设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 89,
        "end": 93,
        "text": "输入设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 59,
        "end": 62,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 95,
        "end": 98,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7394,
    "created_at": "2024-08-17T06:42:34.830164Z",
    "updated_at": "2024-08-17T06:42:34.830164Z",
    "lead_time": 1.484
  },
  {
    "text": "设rtmtc表示主存与cache的访问时间之比，e表示访问效率，则有由式看出，为提高访问效率，命中率h越接近越好",
    "id": 5962,
    "label": [
      {
        "start": 11,
        "end": 16,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 47,
        "end": 50,
        "text": "命中率",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7395,
    "created_at": "2024-08-17T06:42:37.514270Z",
    "updated_at": "2024-08-17T06:42:37.514270Z",
    "lead_time": 2.222
  },
  {
    "text": "例如，操作码可以规定为加法操作；操作码可以规定为减法操作；而操作码可以规定为取数操作等",
    "id": 5963,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7396,
    "created_at": "2024-08-17T06:42:40.223200Z",
    "updated_at": "2024-08-17T06:42:40.223200Z",
    "lead_time": 2.337
  },
  {
    "text": "它通常具有如下功能",
    "id": 5964,
    "annotator": 1,
    "annotation_id": 7397,
    "created_at": "2024-08-17T06:42:41.281915Z",
    "updated_at": "2024-08-17T06:42:41.281915Z",
    "lead_time": 0.667
  },
  {
    "text": "为此要解决汉字的输入编码、汉字内码、字模码等三种不同用途的编码",
    "id": 5965,
    "label": [
      {
        "start": 13,
        "end": 17,
        "text": "汉字内码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "字模码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "汉字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7398,
    "created_at": "2024-08-17T06:42:49.847912Z",
    "updated_at": "2024-08-17T06:42:49.847912Z",
    "lead_time": 8.196
  },
  {
    "text": "另一方面，从设计操作控制器的方法来讲，硬布线控制器的时序电路比较复杂，而微程序控制器的时序电路比较简单",
    "id": 5966,
    "label": [
      {
        "start": 36,
        "end": 39,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 19,
        "end": 25,
        "text": "硬布线控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 13,
        "text": "操作控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7399,
    "created_at": "2024-08-17T06:43:56.293474Z",
    "updated_at": "2024-08-17T06:43:56.293474Z",
    "lead_time": 66.015
  },
  {
    "text": "在主存中，这样的一个十进制数占用连续的多字节，故为了指明这样一个数，需要给出该数在主存中的起始地址和位数串的长度",
    "id": 5967,
    "label": [
      {
        "start": 1,
        "end": 3,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 45,
        "end": 49,
        "text": "起始地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 50,
        "end": 51,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7400,
    "created_at": "2024-08-17T06:44:03.162713Z",
    "updated_at": "2024-08-17T06:44:03.162713Z",
    "lead_time": 6.433
  },
  {
    "text": "但是出于速度和效率上的考虑，系统总线上传送的信息必须采用并行传送方式",
    "id": 5968,
    "label": [
      {
        "start": 28,
        "end": 32,
        "text": "并行传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "系统总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7401,
    "created_at": "2024-08-17T06:44:05.035221Z",
    "updated_at": "2024-08-17T06:44:05.035221Z",
    "lead_time": 1.426
  },
  {
    "text": "根据汉字输出的要求不同，点阵的多少也不同",
    "id": 5969,
    "label": [
      {
        "start": 12,
        "end": 14,
        "text": "点阵",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "汉字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7402,
    "created_at": "2024-08-17T06:44:08.630953Z",
    "updated_at": "2024-08-17T06:44:08.630953Z",
    "lead_time": 3.171
  },
  {
    "text": "指令格式如下：单字长指令只有操作码，没有操作数地址",
    "id": 5970,
    "label": [
      {
        "start": 7,
        "end": 12,
        "text": "单字长指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 20,
        "end": 25,
        "text": "操作数地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7403,
    "created_at": "2024-08-17T06:44:13.188135Z",
    "updated_at": "2024-08-17T06:44:13.188135Z",
    "lead_time": 4.171
  },
  {
    "text": "慢速或中速的外围设备：应答方式异步传送方式由于这类设备的速度和主机的速度并不在一个数量级，或者由于设备如键盘本身是在不规则时间间隔下操作的，因此，主机与这类设备之间的数据交换通常采用异步定时方式，接口与外设之间在数据传送信号线之外安排若干条握手联络、挂钩信号线，用以在收发双方之间传递控制信息，指明何时能够交换数据",
    "id": 5971,
    "label": [
      {
        "start": 52,
        "end": 54,
        "text": "键盘",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 91,
        "end": 95,
        "text": "异步定时",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 101,
        "end": 103,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 73,
        "end": 75,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 98,
        "end": 100,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7404,
    "created_at": "2024-08-17T06:44:16.096973Z",
    "updated_at": "2024-08-17T06:44:16.096973Z",
    "lead_time": 2.502
  },
  {
    "text": "由中央仲裁器根据一定的算法对各主设备的申请进行仲裁，决定把总线使用权授予谁",
    "id": 5972,
    "label": [
      {
        "start": 1,
        "end": 6,
        "text": "中央仲裁器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 34,
        "text": "总线使用权",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "主设备",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "算法",
        "labels": [
          "ALG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7405,
    "created_at": "2024-08-17T06:44:36.845442Z",
    "updated_at": "2024-08-17T06:44:36.845442Z",
    "lead_time": 20.213
  },
  {
    "text": "各种外围设备必须通过IO接口与总线相连",
    "id": 5973,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "IO接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7406,
    "created_at": "2024-08-17T06:44:44.729596Z",
    "updated_at": "2024-08-17T06:44:44.729596Z",
    "lead_time": 6.883
  },
  {
    "text": "为了使所有的外围设备能在一起正确地工作，CPU规定了不同的信息传送控制方法",
    "id": 5974,
    "label": [
      {
        "start": 20,
        "end": 23,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "信息传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7407,
    "created_at": "2024-08-17T06:44:46.917014Z",
    "updated_at": "2024-08-17T06:44:46.917014Z",
    "lead_time": 1.054
  },
  {
    "text": "对流水计算机来说，上一条指令与下一条指令的四个子过程在时间上可以重叠执行",
    "id": 5975,
    "label": [
      {
        "start": 1,
        "end": 3,
        "text": "流水",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7408,
    "created_at": "2024-08-17T06:44:49.295388Z",
    "updated_at": "2024-08-17T06:44:49.295388Z",
    "lead_time": 1.43
  },
  {
    "text": "以此类推，“状态条件”有n位标志，可实现微程序n路转移，涉及微地址寄存器的n位",
    "id": 5976,
    "label": [
      {
        "start": 30,
        "end": 36,
        "text": "微地址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 13,
        "end": 14,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 38,
        "end": 39,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7409,
    "created_at": "2024-08-17T06:45:13.335214Z",
    "updated_at": "2024-08-17T06:45:13.335214Z",
    "lead_time": 23.346
  },
  {
    "text": "存储器模块接受写命令从数据线上写入数据，并使确认线上信号有效",
    "id": 5977,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7410,
    "created_at": "2024-08-17T06:45:15.119911Z",
    "updated_at": "2024-08-17T06:45:15.119911Z",
    "lead_time": 1.127
  },
  {
    "text": "PCI总线连接各种高速的PCI设备",
    "id": 5978,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "PCI",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7411,
    "created_at": "2024-08-17T06:45:18.320897Z",
    "updated_at": "2024-08-17T06:45:18.320897Z",
    "lead_time": 2.414
  },
  {
    "text": "编址方式是存储器地址的组织方式，一般在设计处理器时就已经确定了",
    "id": 5979,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "编址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7412,
    "created_at": "2024-08-17T06:45:20.227208Z",
    "updated_at": "2024-08-17T06:45:20.227208Z",
    "lead_time": 1.259
  },
  {
    "text": "因此，每处理一次IO交换，需几十微秒到几百微秒的时间",
    "id": 5980,
    "annotator": 1,
    "annotation_id": 7413,
    "created_at": "2024-08-17T06:45:21.526097Z",
    "updated_at": "2024-08-17T06:45:21.526097Z",
    "lead_time": 0.585
  },
  {
    "text": "DMA的数据传送是以数据块为基本单位进行的，因此，每次DMA控制器占用总线后，无论是数据输入操作，还是输出操作，都是通过循环来实现的",
    "id": 5981,
    "label": [
      {
        "start": 27,
        "end": 33,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 18,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7414,
    "created_at": "2024-08-17T06:45:23.065954Z",
    "updated_at": "2024-08-17T06:45:23.065954Z",
    "lead_time": 0.966
  },
  {
    "text": "在IEEE标准中，一个规格化的位浮点数x的真值表示为其中尾数域所表示的值是M",
    "id": 5982,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "规格化",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "真值",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 15,
        "end": 16,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7415,
    "created_at": "2024-08-17T06:45:56.063015Z",
    "updated_at": "2024-08-17T06:45:56.063015Z",
    "lead_time": 32.218
  },
  {
    "text": "空间局部性是指当某些数据被存取时，该数据附近的其他数据可能也将很快被存取；时间局部性是指当一些数据被存取后，不久这些数据还可能再次存取",
    "id": 5983,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "空间局部性",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 37,
        "end": 42,
        "text": "时间局部性",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7416,
    "created_at": "2024-08-17T06:45:58.052238Z",
    "updated_at": "2024-08-17T06:45:58.052238Z",
    "lead_time": 1.388
  },
  {
    "text": "第二种是访问寄存器的指令格式，我们称这类指令为寄存器寄存器RR型指令",
    "id": 5984,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 34,
        "text": "RR型指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7417,
    "created_at": "2024-08-17T06:46:22.043756Z",
    "updated_at": "2024-08-17T06:46:22.043756Z",
    "lead_time": 23.472
  },
  {
    "text": "如果连续访问的数据块的高位地址相同同一行，那么只是第一个存储字需要一个完整的存取周期如个总线时钟周期，而后续存储字的存取因内容已在SRAM中，故存取周期大为缩短如个总线时钟周期",
    "id": 5985,
    "label": [
      {
        "start": 44,
        "end": 48,
        "text": "总线时钟",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 82,
        "end": 86,
        "text": "总线时钟",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 65,
        "end": 69,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 38,
        "end": 42,
        "text": "存取周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 72,
        "end": 76,
        "text": "存取周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "位地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "存储字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 54,
        "end": 57,
        "text": "存储字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7418,
    "created_at": "2024-08-17T06:46:31.536868Z",
    "updated_at": "2024-08-17T06:46:31.536868Z",
    "lead_time": 8.924
  },
  {
    "text": "A为已访问位若在装入主存后此页被访问过，则A被置为；否则置A为",
    "id": 5986,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 6,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 15,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7419,
    "created_at": "2024-08-17T06:46:34.198816Z",
    "updated_at": "2024-08-17T06:46:34.198816Z",
    "lead_time": 1.891
  },
  {
    "text": "字节多路通道主要用于连接大量的低速设备，如键盘、打印机等，这些设备的数据传输率很低",
    "id": 5987,
    "label": [
      {
        "start": 24,
        "end": 27,
        "text": "打印机",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "键盘",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7420,
    "created_at": "2024-08-17T06:46:35.513112Z",
    "updated_at": "2024-08-17T06:46:35.513112Z",
    "lead_time": 0.81
  },
  {
    "text": "与中断方式相比，DMA方式仅需占用系统总线，不切换程序，因而CPU可与DMA传送并行工作；DMA可以实现简单的数据传送，难以识别和处理复杂事态",
    "id": 5988,
    "label": [
      {
        "start": 17,
        "end": 21,
        "text": "系统总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 40,
        "text": "DMA传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "中断方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7421,
    "created_at": "2024-08-17T06:46:37.792444Z",
    "updated_at": "2024-08-17T06:46:37.792444Z",
    "lead_time": 1.671
  },
  {
    "text": "优点是防尘性能好，可靠性高，对使用环境要求不高，成为最有代表性的硬磁盘存储器",
    "id": 5989,
    "label": [
      {
        "start": 33,
        "end": 38,
        "text": "磁盘存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7422,
    "created_at": "2024-08-17T06:46:38.934916Z",
    "updated_at": "2024-08-17T06:46:38.934916Z",
    "lead_time": 0.602
  },
  {
    "text": "机器内部各个部件之间的信息传递都受CPU控制，IO设备与主存之间的信息交换也经过CPU的运算器",
    "id": 5990,
    "label": [
      {
        "start": 23,
        "end": 27,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 44,
        "end": 47,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7423,
    "created_at": "2024-08-17T06:46:39.856867Z",
    "updated_at": "2024-08-17T06:46:39.856867Z",
    "lead_time": 0.34
  },
  {
    "text": "在后一种情况下，如果有脉冲时表示数字“”，那么无脉冲时就表示数字“”",
    "id": 5991,
    "annotator": 1,
    "annotation_id": 7424,
    "created_at": "2024-08-17T06:46:46.445358Z",
    "updated_at": "2024-08-17T06:46:46.445358Z",
    "lead_time": 5.846
  },
  {
    "text": "准备就绪触发器RD一旦设备做好一次数据的接收或发送，便发出一个设备动作完毕信号，使RD标志置“”",
    "id": 5992,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7425,
    "created_at": "2024-08-17T06:46:47.772902Z",
    "updated_at": "2024-08-17T06:46:47.773902Z",
    "lead_time": 0.818
  },
  {
    "text": "第五个问题，中断分为内中断和外中断",
    "id": 5993,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "内中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "外中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7426,
    "created_at": "2024-08-17T06:46:49.229711Z",
    "updated_at": "2024-08-17T06:46:57.040427Z",
    "lead_time": 6.882000000000001
  },
  {
    "text": "字符窗口是指每个字符在屏幕上所占的点数，它包括字符显示点阵和字符间隔",
    "id": 5994,
    "label": [
      {
        "start": 27,
        "end": 29,
        "text": "点阵",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7427,
    "created_at": "2024-08-17T06:47:06.319019Z",
    "updated_at": "2024-08-17T06:47:06.319019Z",
    "lead_time": 7.769
  },
  {
    "text": "与存储器芯片一样，处理器芯片的单元密度也在不断增加",
    "id": 5995,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7428,
    "created_at": "2024-08-17T06:47:07.832953Z",
    "updated_at": "2024-08-17T06:47:07.832953Z",
    "lead_time": 0.968
  },
  {
    "text": "所有参与本次竞争的各主设备本例中共个将设备竞争号CN取反后打到仲裁总线AB上，以实现“线或”逻辑",
    "id": 5996,
    "label": [
      {
        "start": 31,
        "end": 35,
        "text": "仲裁总线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "主设备",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7429,
    "created_at": "2024-08-17T06:47:10.787542Z",
    "updated_at": "2024-08-17T06:47:10.787542Z",
    "lead_time": 2.373
  },
  {
    "text": "基于数据包的传输",
    "id": 5997,
    "annotator": 1,
    "annotation_id": 7430,
    "created_at": "2024-08-17T06:47:24.570675Z",
    "updated_at": "2024-08-17T06:47:24.570675Z",
    "lead_time": 13.279
  },
  {
    "text": "字节多路通道和数组多路通道有共同之处，即它们都是多路通道，在一段时间内能交替执行多个设备的通道程序，使这些设备同时工作",
    "id": 5998,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7431,
    "created_at": "2024-08-17T06:47:27.752575Z",
    "updated_at": "2024-08-17T06:47:27.752575Z",
    "lead_time": 2.685
  },
  {
    "text": "从内存某单元中取操作数，操作结果存放至内存另一单元中，因此机器执行这种指令需要多次访问内存",
    "id": 5999,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7432,
    "created_at": "2024-08-17T06:47:28.903732Z",
    "updated_at": "2024-08-17T06:47:28.903732Z",
    "lead_time": 0.626
  },
  {
    "text": "此处s，Y，sY",
    "id": 6000,
    "annotator": 1,
    "annotation_id": 7433,
    "created_at": "2024-08-17T06:47:30.148860Z",
    "updated_at": "2024-08-17T06:47:30.148860Z",
    "lead_time": 0.658
  },
  {
    "text": "为了在保持与传统ROM兼容的情况下实现更多新功能，闪存内部通过状态机控制其操作状态",
    "id": 6001,
    "label": [
      {
        "start": 25,
        "end": 27,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7434,
    "created_at": "2024-08-17T06:47:30.727928Z",
    "updated_at": "2024-08-17T06:47:30.727928Z",
    "lead_time": 0.125
  },
  {
    "text": "这种方式不需要总线使用权的申请、建立和归还过程，总线使用权是通过C和C分时控制的",
    "id": 6002,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 29,
        "text": "总线使用权",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7435,
    "created_at": "2024-08-17T06:47:31.303835Z",
    "updated_at": "2024-08-17T06:47:31.303835Z",
    "lead_time": 0.041
  },
  {
    "text": "它的发明和发展是世纪人类最伟大的科学技术成就之一，也是现代科学技术发展水平的主要标志",
    "id": 6003,
    "label": [
      {
        "start": 16,
        "end": 20,
        "text": "科学技术",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "科学技术",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7436,
    "created_at": "2024-08-17T06:47:32.152982Z",
    "updated_at": "2024-08-17T06:47:32.152982Z",
    "lead_time": 0.083
  },
  {
    "text": "衡量总线性能的重要指标是总线带宽，它定义为总线本身所能达到的最高传输速率，单位是兆字节每秒MBs",
    "id": 6004,
    "label": [
      {
        "start": 12,
        "end": 16,
        "text": "总线带宽",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "传输速率",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "MBs",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 39,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7437,
    "created_at": "2024-08-17T06:47:32.935824Z",
    "updated_at": "2024-08-17T06:47:32.935824Z",
    "lead_time": 0.082
  },
  {
    "text": "但是DRAM的附属电路比较复杂，访问时需要额外的电路和操作支持",
    "id": 6005,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7438,
    "created_at": "2024-08-17T06:47:33.689165Z",
    "updated_at": "2024-08-17T06:47:33.689165Z",
    "lead_time": 0.046
  },
  {
    "text": "鉴于第、章中已经详细讨论了运算器和存储器，所以本章重点放在控制器上",
    "id": 6006,
    "label": [
      {
        "start": 17,
        "end": 20,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7439,
    "created_at": "2024-08-17T06:47:34.283177Z",
    "updated_at": "2024-08-17T06:47:34.283177Z",
    "lead_time": 0.054
  },
  {
    "text": "二地址指令常称为双操作数指令，它有两个地址码字段A和A，分别指明参与操作的两个数在内存中或运算器中通用寄存器的地址，其中地址A兼作存放操作结果的地址",
    "id": 6007,
    "label": [
      {
        "start": 49,
        "end": 54,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "二地址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 60,
        "end": 62,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 72,
        "end": 74,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7440,
    "created_at": "2024-08-17T06:47:35.009150Z",
    "updated_at": "2024-08-17T06:47:35.009150Z",
    "lead_time": 0.078
  },
  {
    "text": "当写cache未命中时，只能直接向主存进行写入",
    "id": 6008,
    "label": [
      {
        "start": 17,
        "end": 19,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 2,
        "end": 7,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7441,
    "created_at": "2024-08-17T06:47:35.809531Z",
    "updated_at": "2024-08-17T06:47:35.809531Z",
    "lead_time": 0.076
  },
  {
    "text": "在冯诺依曼体系结构中，存储器是计算机系统的五大组成部件之一",
    "id": 6009,
    "label": [
      {
        "start": 15,
        "end": 20,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7442,
    "created_at": "2024-08-17T06:47:36.577848Z",
    "updated_at": "2024-08-17T06:47:36.577848Z",
    "lead_time": 0.057
  },
  {
    "text": "因此有效地址是对当前指令地址的一个上下范围的偏移，它基于程序的局部性原理",
    "id": 6010,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "有效地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 31,
        "end": 36,
        "text": "局部性原理",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "指令地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7443,
    "created_at": "2024-08-17T06:47:37.370892Z",
    "updated_at": "2024-08-17T06:47:37.370892Z",
    "lead_time": 0.064
  },
  {
    "text": "当尾数用原码表示时，舍入规则比较简单",
    "id": 6011,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "原码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7444,
    "created_at": "2024-08-17T06:47:38.103596Z",
    "updated_at": "2024-08-17T06:47:38.103596Z",
    "lead_time": 0.103
  },
  {
    "text": "反之，输出时，由内存通过数据总线送到数据缓冲寄存器，然后再送到设备",
    "id": 6012,
    "label": [
      {
        "start": 18,
        "end": 25,
        "text": "数据缓冲寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7445,
    "created_at": "2024-08-17T06:47:45.662928Z",
    "updated_at": "2024-08-17T06:47:45.662928Z",
    "lead_time": 2.29
  },
  {
    "text": "几乎所有的计算机，在内存中都采用地址指定方式",
    "id": 6013,
    "label": [
      {
        "start": 16,
        "end": 22,
        "text": "地址指定方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7446,
    "created_at": "2024-08-17T06:48:21.675485Z",
    "updated_at": "2024-08-17T06:48:21.675485Z",
    "lead_time": 35.568
  },
  {
    "text": "由于阵列中的一部分磁盘存有冗余信息，一旦系统中某一磁盘失效，可以利用冗余信息重建用户信息",
    "id": 6014,
    "label": [
      {
        "start": 9,
        "end": 11,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7447,
    "created_at": "2024-08-17T06:48:24.376766Z",
    "updated_at": "2024-08-17T06:48:24.376766Z",
    "lead_time": 2.224
  },
  {
    "text": "另一种是IO设备要求访内时CPU也要求访内，这就产生了访内冲突，在这种情况下IO设备访内优先，因为IO访内有时间要求，前一个IO数据必须在下一个访内请求到来之前存取完毕",
    "id": 6015,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 38,
        "end": 42,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7448,
    "created_at": "2024-08-17T06:48:25.893574Z",
    "updated_at": "2024-08-17T06:48:25.895130Z",
    "lead_time": 1.005
  },
  {
    "text": "这是因为，只有电位信号先建立，打入到寄存器中的数据才是可靠的",
    "id": 6016,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "电位信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7449,
    "created_at": "2024-08-17T06:48:29.294248Z",
    "updated_at": "2024-08-17T06:48:29.294248Z",
    "lead_time": 2.938
  },
  {
    "text": "根据系统的配置不同，多级中断又可分为一维多级中断和二维多级中断，如图b所示",
    "id": 6017,
    "label": [
      {
        "start": 12,
        "end": 14,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7450,
    "created_at": "2024-08-17T06:48:31.540927Z",
    "updated_at": "2024-08-17T06:48:31.540927Z",
    "lead_time": 1.78
  },
  {
    "text": "流水线分类一个计算机系统可以在不同的并行等级上采用流水线技术",
    "id": 6018,
    "label": [
      {
        "start": 7,
        "end": 12,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7451,
    "created_at": "2024-08-17T06:48:34.806940Z",
    "updated_at": "2024-08-17T06:48:34.806940Z",
    "lead_time": 2.819
  },
  {
    "text": "另一种是通道总线，即IO总线，它承担外围设备与通道之间的数据传送任务",
    "id": 6019,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "IO总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7452,
    "created_at": "2024-08-17T06:48:35.802542Z",
    "updated_at": "2024-08-17T06:48:35.802542Z",
    "lead_time": 0.435
  },
  {
    "text": "这种方式的优点是页表所占空间大大缩小，但代价是需要对反向页表进行检索，查表的时间很长",
    "id": 6020,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7453,
    "created_at": "2024-08-17T06:48:37.481044Z",
    "updated_at": "2024-08-17T06:48:37.481044Z",
    "lead_time": 1.114
  },
  {
    "text": "向通道反映外围设备的状态",
    "id": 6021,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7454,
    "created_at": "2024-08-17T06:48:38.482169Z",
    "updated_at": "2024-08-17T06:48:38.482169Z",
    "lead_time": 0.562
  },
  {
    "text": "双字长指令或三字长指令每执行一条指令时，必须从内存连续读出字节或字节代码，所以，指令地址要加或加，可见多字长的指令格式不利于提高机器速度",
    "id": 6022,
    "label": [
      {
        "start": 40,
        "end": 44,
        "text": "指令地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 11,
        "text": "三字长指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 55,
        "end": 59,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "长指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 52,
        "end": 54,
        "text": "字长",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 1,
        "end": 2,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7455,
    "created_at": "2024-08-17T06:48:39.363920Z",
    "updated_at": "2024-08-17T06:48:39.363920Z",
    "lead_time": 0.406
  },
  {
    "text": "于是，第三代的PCIe总线逐渐取代了PCI总线",
    "id": 6023,
    "label": [
      {
        "start": 7,
        "end": 13,
        "text": "PCIe总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 23,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7456,
    "created_at": "2024-08-17T06:48:41.261876Z",
    "updated_at": "2024-08-17T06:48:41.261876Z",
    "lead_time": 1.318
  },
  {
    "text": "分离式总线定时协定以硬件复杂度的提高换取总线性能的提升",
    "id": 6024,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "总线定时",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7457,
    "created_at": "2024-08-17T06:48:43.234231Z",
    "updated_at": "2024-08-17T06:48:43.234231Z",
    "lead_time": 1.371
  },
  {
    "text": "片选信号的功能也由增加的RAS和CAS信号实现",
    "id": 6025,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "CAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "片选信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "RAS",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7458,
    "created_at": "2024-08-17T06:48:48.068107Z",
    "updated_at": "2024-08-17T06:48:48.069663Z",
    "lead_time": 1.495
  },
  {
    "text": "思考题通道的设计理念，在技术上有什么创新？根据通道的工作方式，通道分为选择通道、多路通道两种类型",
    "id": 6026,
    "annotator": 1,
    "annotation_id": 7459,
    "created_at": "2024-08-17T06:49:24.708571Z",
    "updated_at": "2024-08-17T06:49:24.708571Z",
    "lead_time": 35.53
  },
  {
    "text": "假设孩子们把块糖都吃完，那么她采用什么方法呢第一种方法：她先给孩子甲一块糖，盯着甲吃完，然后再给第二块",
    "id": 6027,
    "annotator": 1,
    "annotation_id": 7460,
    "created_at": "2024-08-17T06:50:28.876089Z",
    "updated_at": "2024-08-17T06:50:28.876089Z",
    "lead_time": 63.683
  },
  {
    "text": "这是因为，在除法中将所需要的部分余数保持固定，而将除数沿对角线右移",
    "id": 6028,
    "label": [
      {
        "start": 31,
        "end": 33,
        "text": "右移",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7461,
    "created_at": "2024-08-17T06:50:29.990575Z",
    "updated_at": "2024-08-17T06:50:29.990575Z",
    "lead_time": 0.735
  },
  {
    "text": "其美国版称为ASCII码美国国家信息交换标准字符码，它包括个十进制数码，个英文字母和一定数量的专用符号，如，，等，总共个元素，因此二进制编码需要位，加上一个偶校验位，共位，刚好为字节",
    "id": 6029,
    "label": [
      {
        "start": 6,
        "end": 12,
        "text": "ASCII码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 65,
        "end": 68,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 78,
        "end": 81,
        "text": "偶校验",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 68,
        "end": 70,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 89,
        "end": 91,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 72,
        "end": 73,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 81,
        "end": 82,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 84,
        "end": 85,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 23,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 39,
        "end": 40,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7462,
    "created_at": "2024-08-17T06:50:33.819013Z",
    "updated_at": "2024-08-17T06:50:33.819013Z",
    "lead_time": 3.341
  },
  {
    "text": "当前主流的DRAM器件的刷新间隔时间刷新周期为ms",
    "id": 6030,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "刷新周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7463,
    "created_at": "2024-08-17T06:50:35.240163Z",
    "updated_at": "2024-08-17T06:50:35.240163Z",
    "lead_time": 0.979
  },
  {
    "text": "当机器运行时，一条又一条地读出这些微指令，从而产生全机所需要的各种操作控制信号，使相应部件执行所规定的操作",
    "id": 6031,
    "label": [
      {
        "start": 33,
        "end": 39,
        "text": "操作控制信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7464,
    "created_at": "2024-08-17T06:50:35.931875Z",
    "updated_at": "2024-08-17T06:50:35.931875Z",
    "lead_time": 0.298
  },
  {
    "text": "它通常由石英晶体振荡器和与非门组成的正反馈振荡电路组成，其输出送至环形脉冲发生器",
    "id": 6032,
    "annotator": 1,
    "annotation_id": 7465,
    "created_at": "2024-08-17T06:50:36.621404Z",
    "updated_at": "2024-08-17T06:50:36.621404Z",
    "lead_time": 0.236
  },
  {
    "text": "因此，控制器反复交替地处在取指周期与执行周期之中，如图所示",
    "id": 6033,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "取指周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "执行周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7466,
    "created_at": "2024-08-17T06:50:37.519807Z",
    "updated_at": "2024-08-17T06:50:37.519807Z",
    "lead_time": 0.233
  },
  {
    "text": "图中，还有一个“”符号，我们称它为公操作符号",
    "id": 6034,
    "annotator": 1,
    "annotation_id": 7467,
    "created_at": "2024-08-17T06:50:38.413850Z",
    "updated_at": "2024-08-17T06:50:38.413850Z",
    "lead_time": 0.47
  },
  {
    "text": "除少数预先规定寻址方式的指令外，绝大多数指令都包含这个字段",
    "id": 6035,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7468,
    "created_at": "2024-08-17T06:50:40.525152Z",
    "updated_at": "2024-08-17T06:50:40.525152Z",
    "lead_time": 1.708
  },
  {
    "text": "在分页部件不工作的情况下，线性地址也就是主存物理地址",
    "id": 6036,
    "label": [
      {
        "start": 13,
        "end": 17,
        "text": "线性地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "物理地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "分页部件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7469,
    "created_at": "2024-08-17T06:50:49.245083Z",
    "updated_at": "2024-08-17T06:50:49.245083Z",
    "lead_time": 8.232
  },
  {
    "text": "第个时钟周期发出一个读命令",
    "id": 6037,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7470,
    "created_at": "2024-08-17T06:50:50.149969Z",
    "updated_at": "2024-08-17T06:50:50.149969Z",
    "lead_time": 0.482
  },
  {
    "text": "MDA是单色字符显示适配器，采用点阵的字符窗口，满屏显示列行字符，对应分辨率为像素",
    "id": 6038,
    "label": [
      {
        "start": 8,
        "end": 13,
        "text": "显示适配器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "点阵",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7471,
    "created_at": "2024-08-17T06:50:50.970537Z",
    "updated_at": "2024-08-17T06:50:59.292895Z",
    "lead_time": 4.479
  },
  {
    "text": "其设计理念是：Pentium将机器指令译成由微指令组成的简单RISC类指令，而使用简单定长的微指令可允许采用超标量流水线和调度技术，从而增强机器的性能",
    "id": 6039,
    "label": [
      {
        "start": 54,
        "end": 60,
        "text": "超标量流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 19,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "RISC",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 46,
        "end": 49,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7472,
    "created_at": "2024-08-17T06:51:07.341698Z",
    "updated_at": "2024-08-17T06:51:07.341698Z",
    "lead_time": 6.534
  },
  {
    "text": "采用不定长机器周期",
    "id": 6040,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "机器周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7473,
    "created_at": "2024-08-17T06:51:08.388802Z",
    "updated_at": "2024-08-17T06:51:08.389801Z",
    "lead_time": 0.64
  },
  {
    "text": "构成存储器的存储介质，目前主要采用半导体器件和磁性材料",
    "id": 6041,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "存储介质",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "半导体",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7474,
    "created_at": "2024-08-17T06:51:13.076127Z",
    "updated_at": "2024-08-17T06:51:13.076127Z",
    "lead_time": 4.218
  },
  {
    "text": "按印字原理分，分为击打式和非击打式两大类",
    "id": 6042,
    "annotator": 1,
    "annotation_id": 7475,
    "created_at": "2024-08-17T06:51:13.972854Z",
    "updated_at": "2024-08-17T06:51:20.660264Z",
    "lead_time": 2.711
  },
  {
    "text": "当“发送”信号有效时，数据从左向右传送",
    "id": 6043,
    "annotator": 1,
    "annotation_id": 7476,
    "created_at": "2024-08-17T06:51:22.733278Z",
    "updated_at": "2024-08-17T06:51:22.733278Z",
    "lead_time": 0.818
  },
  {
    "text": "根据存储材料的性能及使用方法不同，存储器有各种不同的分类方法",
    "id": 6044,
    "label": [
      {
        "start": 17,
        "end": 20,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7477,
    "created_at": "2024-08-17T06:51:23.689796Z",
    "updated_at": "2024-08-17T06:51:23.689796Z",
    "lead_time": 0.602
  },
  {
    "text": "只有这样，计算机才能有条不紊地自动工作",
    "id": 6045,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7478,
    "created_at": "2024-08-17T06:51:24.439705Z",
    "updated_at": "2024-08-17T06:51:24.439705Z",
    "lead_time": 0.352
  },
  {
    "text": "而块在组中的排放又有一定的灵活性，使冲突减少",
    "id": 6046,
    "annotator": 1,
    "annotation_id": 7479,
    "created_at": "2024-08-17T06:51:25.087931Z",
    "updated_at": "2024-08-17T06:51:25.087931Z",
    "lead_time": 0.254
  },
  {
    "text": "微命令编码微命令编码，就是对微指令中的操作控制字段采用的表示方法",
    "id": 6047,
    "label": [
      {
        "start": 19,
        "end": 25,
        "text": "操作控制字段",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7480,
    "created_at": "2024-08-17T06:51:25.734225Z",
    "updated_at": "2024-08-17T06:51:25.734225Z",
    "lead_time": 0.273
  },
  {
    "text": "组织外设和存储器之间进行数据传送，并根据需要提供数据缓存的空间，以及提供数据存入存储器的地址和传送的数据量",
    "id": 6048,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "缓存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7481,
    "created_at": "2024-08-17T06:51:26.438142Z",
    "updated_at": "2024-08-17T06:51:26.438142Z",
    "lead_time": 0.289
  },
  {
    "text": "如果在总线上传输的大部分设备的速度相当，仅有很少的设备需要较长的传输时间，则可以在同步总线定时协定的基础上稍加改动，扩展为半同步总线定时协定",
    "id": 6049,
    "label": [
      {
        "start": 43,
        "end": 47,
        "text": "总线定时",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 64,
        "end": 68,
        "text": "总线定时",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 62,
        "end": 64,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7482,
    "created_at": "2024-08-17T06:51:27.267201Z",
    "updated_at": "2024-08-17T06:51:27.267201Z",
    "lead_time": 0.409
  },
  {
    "text": "两个扇标脉冲之间的一段磁道区域即为一个扇区一个记录块",
    "id": 6050,
    "label": [
      {
        "start": 19,
        "end": 21,
        "text": "扇区",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "记录块",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "磁道",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7483,
    "created_at": "2024-08-17T06:51:28.199477Z",
    "updated_at": "2024-08-17T06:51:28.199477Z",
    "lead_time": 0.534
  },
  {
    "text": "例如，STAR为级流水运算器，TIASC为级流水运算器，CRAY为级流水运算器，等等",
    "id": 6051,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "流水",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "流水",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "流水",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7484,
    "created_at": "2024-08-17T06:51:29.427954Z",
    "updated_at": "2024-08-17T06:51:29.427954Z",
    "lead_time": 0.819
  },
  {
    "text": "CPU识别错误、故障现象，根据异常和中断产生的条件自动指定向量号",
    "id": 6052,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7485,
    "created_at": "2024-08-17T06:51:30.386161Z",
    "updated_at": "2024-08-17T06:51:30.386161Z",
    "lead_time": 0.543
  },
  {
    "text": "NOR闪存的外部接口信号线与SRAM类似，但除了读出和编程写入这些常规的PROM操作外，NOR闪存还具有内部控制寄存器和状态寄存器，可以通过“命令写”和“状态读”操作进行灵活的控制",
    "id": 6053,
    "label": [
      {
        "start": 56,
        "end": 59,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 60,
        "end": 65,
        "text": "状态寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 40,
        "text": "PROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7486,
    "created_at": "2024-08-17T06:51:31.355898Z",
    "updated_at": "2024-08-17T06:51:31.355898Z",
    "lead_time": 0.564
  },
  {
    "text": "注意，读写操作不会同时发生",
    "id": 6054,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7487,
    "created_at": "2024-08-17T06:51:32.198648Z",
    "updated_at": "2024-08-17T06:51:32.198648Z",
    "lead_time": 0.392
  },
  {
    "text": "启动此总线周期的主设备，在地址期送出总线命令和目标设备地址，而目标设备以nDEVSEL设备选择信号予以响应",
    "id": 6055,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "设备地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "地址期",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "主设备",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7488,
    "created_at": "2024-08-17T06:51:32.882802Z",
    "updated_at": "2024-08-17T06:51:32.882802Z",
    "lead_time": 0.293
  },
  {
    "text": "移码中的逗号不是小数点，而是表示左边一位是符号位",
    "id": 6056,
    "label": [
      {
        "start": 21,
        "end": 24,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "移码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 19,
        "end": 20,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7489,
    "created_at": "2024-08-17T06:51:33.635282Z",
    "updated_at": "2024-08-17T06:51:33.635282Z",
    "lead_time": 0.31
  },
  {
    "text": "Flash意为擦除速度高，其擦除时间远高于传统的UVEPROM和EPROM",
    "id": 6057,
    "label": [
      {
        "start": 26,
        "end": 31,
        "text": "EPROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 32,
        "end": 37,
        "text": "EPROM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7490,
    "created_at": "2024-08-17T06:51:34.395809Z",
    "updated_at": "2024-08-17T06:51:34.395809Z",
    "lead_time": 0.334
  },
  {
    "text": "指令“DICC”表示把号设备中C寄存器的数据送入CPU中通用寄存器R，并关闭号设备",
    "id": 6058,
    "label": [
      {
        "start": 28,
        "end": 33,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "IC",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7491,
    "created_at": "2024-08-17T06:51:35.099938Z",
    "updated_at": "2024-08-17T06:51:35.099938Z",
    "lead_time": 0.315
  },
  {
    "text": "字位扩展若给定的芯片的字数和位数均不符合要求，则需要先进行位扩展，再进行字扩展",
    "id": 6059,
    "label": [
      {
        "start": 36,
        "end": 39,
        "text": "字扩展",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "位扩展",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "位扩展",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 15,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 1,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7492,
    "created_at": "2024-08-17T06:51:35.834887Z",
    "updated_at": "2024-08-17T06:51:38.828708Z",
    "lead_time": 1.75
  },
  {
    "text": "其总线内部结构包含：数据传送总线由地址线、数据线、控制线组成；仲裁总线；中断和同步总线；公用线电源、地线、时钟、复位等信号线",
    "id": 6060,
    "label": [
      {
        "start": 31,
        "end": 35,
        "text": "仲裁总线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 39,
        "end": 43,
        "text": "同步总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "控制线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 53,
        "end": 55,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 57,
        "end": 58,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7493,
    "created_at": "2024-08-17T06:51:40.883832Z",
    "updated_at": "2024-08-17T06:51:40.883832Z",
    "lead_time": 0.662
  },
  {
    "text": "对发光二极管来讲，可以认为主机输出时外设一定准备就绪，因为只要给出数据，发光二极管就能进行显示",
    "id": 6061,
    "label": [
      {
        "start": 18,
        "end": 20,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7494,
    "created_at": "2024-08-17T06:51:41.755093Z",
    "updated_at": "2024-08-17T06:51:41.755093Z",
    "lead_time": 0.405
  },
  {
    "text": "多路型DMA不仅在物理上可以连接多个外围设备，而且在逻辑上也允许这些外围设备同时工作，各设备以字节交叉方式通过DMA控制器进行数据传送",
    "id": 6062,
    "label": [
      {
        "start": 55,
        "end": 61,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7495,
    "created_at": "2024-08-17T06:51:42.798780Z",
    "updated_at": "2024-08-17T06:51:42.798780Z",
    "lead_time": 0.652
  },
  {
    "text": "又假定中断请求寄存器的内容为，中断屏蔽寄存器的内容为，那么进入排队器的中断请求是",
    "id": 6063,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "屏蔽",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 35,
        "end": 39,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7496,
    "created_at": "2024-08-17T06:52:14.200411Z",
    "updated_at": "2024-08-17T06:52:14.200411Z",
    "lead_time": 30.969
  },
  {
    "text": "与主存容量相比，cache的容量很小，它保存的内容只是主存内容的一个子集，且cache与主存的数据交换是以块为单位",
    "id": 6064,
    "label": [
      {
        "start": 8,
        "end": 13,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 38,
        "end": 43,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "主存容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 56,
        "end": 57,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7497,
    "created_at": "2024-08-17T06:52:15.707255Z",
    "updated_at": "2024-08-17T06:52:15.707255Z",
    "lead_time": 1.044
  },
  {
    "text": "数据库管理系统有各种类型",
    "id": 6065,
    "label": [
      {
        "start": 0,
        "end": 7,
        "text": "数据库管理系统",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7498,
    "created_at": "2024-08-17T06:52:16.721786Z",
    "updated_at": "2024-08-17T06:52:16.721786Z",
    "lead_time": 0.565
  },
  {
    "text": "并且PCI具有无限制的猝发能力，猝发长度由主方确定，没有对猝发长度加以固定限制",
    "id": 6066,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "PCI",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7499,
    "created_at": "2024-08-17T06:52:17.610783Z",
    "updated_at": "2024-08-17T06:52:17.610783Z",
    "lead_time": 0.479
  },
  {
    "text": "但是，由于浮点表示的数多是规格化的，尾数左移会引起最高有效位的丢失，造成很大误差",
    "id": 6067,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "浮点表示",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "有效位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "规格化",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "左移",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7500,
    "created_at": "2024-08-17T06:52:18.466857Z",
    "updated_at": "2024-08-17T06:52:18.466857Z",
    "lead_time": 0.45
  },
  {
    "text": "一般来说，总是先询问数据传输率高的设备，后询问数据传输率低的设备，因而后询问的设备要等待更长的时间",
    "id": 6068,
    "annotator": 1,
    "annotation_id": 7501,
    "created_at": "2024-08-17T06:52:19.203793Z",
    "updated_at": "2024-08-17T06:52:19.203793Z",
    "lead_time": 0.288
  },
  {
    "text": "BS线为，表示总线正被某外设使用",
    "id": 6069,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "外设",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7502,
    "created_at": "2024-08-17T06:52:19.908065Z",
    "updated_at": "2024-08-17T06:52:19.908065Z",
    "lead_time": 0.332
  },
  {
    "text": "此时值A存入指令地址字段，再用一个变址寄存器初始化为",
    "id": 6070,
    "label": [
      {
        "start": 17,
        "end": 22,
        "text": "变址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "地址字段",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7503,
    "created_at": "2024-08-17T06:52:20.588927Z",
    "updated_at": "2024-08-17T06:52:20.588927Z",
    "lead_time": 0.266
  },
  {
    "text": "当某个外围设备请求DMA服务时，操作过程如下：DMA控制器接到设备发出的DMA请求时，将请求转送到CPU",
    "id": 6071,
    "label": [
      {
        "start": 23,
        "end": 29,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 49,
        "end": 52,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7504,
    "created_at": "2024-08-17T06:52:21.296085Z",
    "updated_at": "2024-08-17T06:52:21.296085Z",
    "lead_time": 0.232
  },
  {
    "text": "显然，对简单指令和简单的操作来说，将造成时间浪费",
    "id": 6072,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7505,
    "created_at": "2024-08-17T06:52:21.961242Z",
    "updated_at": "2024-08-17T06:52:21.961242Z",
    "lead_time": 0.232
  },
  {
    "text": "例如，磁盘读出时，控制电路把盘上用磁化元形式表示的信息转换成计算机所需要的电信号，并把这些信号用电缆一个计算机系统配备什么样的外围设备，是根据实际需要来决定的",
    "id": 6073,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "控制电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 52,
        "end": 57,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 63,
        "end": 67,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7506,
    "created_at": "2024-08-17T06:52:22.675778Z",
    "updated_at": "2024-08-17T06:52:22.676786Z",
    "lead_time": 0.285
  },
  {
    "text": "完成数据的加工处理，是CPU的根本任务",
    "id": 6074,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7507,
    "created_at": "2024-08-17T06:52:23.558236Z",
    "updated_at": "2024-08-17T06:52:23.558236Z",
    "lead_time": 0.469
  },
  {
    "text": "从硬件结构来讲，需要使用通用寄存器堆结构，以便选择输入信息源",
    "id": 6075,
    "label": [
      {
        "start": 14,
        "end": 17,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7508,
    "created_at": "2024-08-17T06:52:24.387622Z",
    "updated_at": "2024-08-17T06:52:24.387622Z",
    "lead_time": 0.448
  },
  {
    "text": "写入操作和CPU中的cache类似，有“直写”和“写回”两种方法",
    "id": 6076,
    "label": [
      {
        "start": 10,
        "end": 15,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7509,
    "created_at": "2024-08-17T06:52:25.087983Z",
    "updated_at": "2024-08-17T06:52:25.087983Z",
    "lead_time": 0.299
  },
  {
    "text": "看来这种方法效率太低，重要之点还在于孩子们吃糖时她一直在守候，什么事也不能干",
    "id": 6077,
    "annotator": 1,
    "annotation_id": 7510,
    "created_at": "2024-08-17T06:52:25.732581Z",
    "updated_at": "2024-08-17T06:52:25.732581Z",
    "lead_time": 0.207
  },
  {
    "text": "语音输入设备利用人的自然语音实现人机对话是新一代多媒体计算机的重要标志之一",
    "id": 6078,
    "label": [
      {
        "start": 24,
        "end": 30,
        "text": "多媒体计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "输入设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7511,
    "created_at": "2024-08-17T06:52:26.303755Z",
    "updated_at": "2024-08-17T06:52:26.303755Z",
    "lead_time": 0.137
  },
  {
    "text": "可以看到，十进制加法微程序流程图由四条微指令组成，每一条微指令用一个长方框表示",
    "id": 6079,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7512,
    "created_at": "2024-08-17T06:52:26.920861Z",
    "updated_at": "2024-08-17T06:52:26.920861Z",
    "lead_time": 0.15
  },
  {
    "text": "设n位被乘数和乘数用定点整数表示被乘数x原xfxnxx乘数y原yfynyy乘积z原xfyfxnxxynyy式中，xf为被乘数符号，yf为乘数符号",
    "id": 6080,
    "label": [
      {
        "start": 10,
        "end": 16,
        "text": "定点整数表示",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 3,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7513,
    "created_at": "2024-08-17T06:52:27.590800Z",
    "updated_at": "2024-08-17T06:52:27.590800Z",
    "lead_time": 0.253
  },
  {
    "text": "例中cache划分u组，每组有v行，即muv",
    "id": 6081,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7514,
    "created_at": "2024-08-17T06:52:28.103796Z",
    "updated_at": "2024-08-17T06:52:28.103796Z",
    "lead_time": 0.065
  },
  {
    "text": "总之，SCSI是系统级接口，是处于主适配器和智能设备控制器之间的并行IO接口",
    "id": 6082,
    "label": [
      {
        "start": 24,
        "end": 29,
        "text": "设备控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "IO接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "适配器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7515,
    "created_at": "2024-08-17T06:52:28.638051Z",
    "updated_at": "2024-08-17T06:52:28.638051Z",
    "lead_time": 0.138
  },
  {
    "text": "其功能是选择ALU的左、右两输入源信息，按ALU字段所指定的运算功能种操作进行处理，并将结果送入暂存器中",
    "id": 6083,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7516,
    "created_at": "2024-08-17T06:52:29.412954Z",
    "updated_at": "2024-08-17T06:52:29.412954Z",
    "lead_time": 0.311
  },
  {
    "text": "点阵的多少取决于显示字符的质量和字符窗口的大小",
    "id": 6084,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "点阵",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7517,
    "created_at": "2024-08-17T06:52:33.407901Z",
    "updated_at": "2024-08-17T06:52:33.407901Z",
    "lead_time": 3.561
  },
  {
    "text": "存储器容量存储器中所有存储单元的总数目，通常用KB、MB、GB、TB来表示",
    "id": 6085,
    "label": [
      {
        "start": 11,
        "end": 15,
        "text": "存储单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "MB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "TB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "KB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "GB",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7518,
    "created_at": "2024-08-17T06:52:34.134162Z",
    "updated_at": "2024-08-17T06:52:34.134162Z",
    "lead_time": 0.312
  },
  {
    "text": "当CPU以一个给定的内存地址访问cache时，首先用r位区内块号找到cache中的特定一行，然后用地址中的sr位区号部分与此行的标记在比较器中做比较",
    "id": 6086,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 21,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 34,
        "end": 39,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "内存地址",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "块号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 28,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 55,
        "end": 56,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7519,
    "created_at": "2024-08-17T06:52:34.773155Z",
    "updated_at": "2024-08-17T06:52:34.773155Z",
    "lead_time": 0.16
  },
  {
    "text": "程序运行时，由地址变换机构依据当时分配给该程序的实地址空间把程序的一部分调入实存物理存储空间或主存空间",
    "id": 6087,
    "label": [
      {
        "start": 40,
        "end": 46,
        "text": "物理存储空间",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 24,
        "end": 29,
        "text": "实地址空间",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 47,
        "end": 51,
        "text": "主存空间",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "地址变换",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "实存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7520,
    "created_at": "2024-08-17T06:52:35.421337Z",
    "updated_at": "2024-08-17T06:52:35.421337Z",
    "lead_time": 0.179
  },
  {
    "text": "压缩的十进制数串形式，即字节存放两个十进制的数位",
    "id": 6088,
    "label": [
      {
        "start": 12,
        "end": 14,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7521,
    "created_at": "2024-08-17T06:52:36.825722Z",
    "updated_at": "2024-08-17T06:52:36.825722Z",
    "lead_time": 0.909
  },
  {
    "text": "操作系统的出现，使计算机的使用效率成倍地提高，并且为用户提供了方便的使用手段和令人满意的服务质量",
    "id": 6089,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7522,
    "created_at": "2024-08-17T06:52:37.453960Z",
    "updated_at": "2024-08-17T06:52:37.453960Z",
    "lead_time": 0.183
  },
  {
    "text": "水平型微指令与机器指令差别很大，一般需要对机器的结构、数据通路、时序系统以及微命令很精通才能设计",
    "id": 6090,
    "label": [
      {
        "start": 38,
        "end": 41,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "水平型微指令",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "数据通路",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7523,
    "created_at": "2024-08-17T06:52:37.977863Z",
    "updated_at": "2024-08-17T06:52:37.977863Z",
    "lead_time": 0.117
  },
  {
    "text": "下面以数据传送类的总线周期为代表，说明PCI总线周期的操作过程",
    "id": 6091,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "PCI",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7524,
    "created_at": "2024-08-17T06:52:38.613672Z",
    "updated_at": "2024-08-17T06:52:38.613672Z",
    "lead_time": 0.203
  },
  {
    "text": "IA体系结构微处理机的存储管理硬件支持三种存储器模型，如图所示",
    "id": 6092,
    "label": [
      {
        "start": 21,
        "end": 24,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "微处理机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7525,
    "created_at": "2024-08-17T06:52:39.723762Z",
    "updated_at": "2024-08-17T06:52:39.723762Z",
    "lead_time": 0.702
  },
  {
    "text": "但由于目的程序一般不能独立运行，还需要一种叫做运行系统的辅助程序来帮助",
    "id": 6093,
    "label": [
      {
        "start": 5,
        "end": 7,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7526,
    "created_at": "2024-08-17T06:52:40.260226Z",
    "updated_at": "2024-08-17T06:52:40.260226Z",
    "lead_time": 0.11
  },
  {
    "text": "PowerPC寻址方式不像Pentium和大多数CISC机器，PowerPC是RISC机器，它采用了相当简单的一组寻址方式",
    "id": 6094,
    "label": [
      {
        "start": 24,
        "end": 28,
        "text": "CISC",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 39,
        "end": 43,
        "text": "RISC",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 57,
        "end": 61,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7527,
    "created_at": "2024-08-17T06:52:41.592152Z",
    "updated_at": "2024-08-17T06:52:41.592152Z",
    "lead_time": 0.908
  },
  {
    "text": "串行传输",
    "id": 6095,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7528,
    "created_at": "2024-08-17T06:52:42.587172Z",
    "updated_at": "2024-08-17T06:52:42.587172Z",
    "lead_time": 0.57
  },
  {
    "text": "此BIOS软件主要用于DOS操作系统",
    "id": 6096,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "BIOS",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7529,
    "created_at": "2024-08-17T06:52:43.628912Z",
    "updated_at": "2024-08-17T06:52:43.628912Z",
    "lead_time": 0.648
  },
  {
    "text": "相加的两数一个为正，一个为负，因此相加结果有正、负两种可能",
    "id": 6097,
    "annotator": 1,
    "annotation_id": 7530,
    "created_at": "2024-08-17T06:52:44.510016Z",
    "updated_at": "2024-08-17T06:52:44.510016Z",
    "lead_time": 0.461
  },
  {
    "text": "表列出了Pentium的数据类型",
    "id": 6098,
    "annotator": 1,
    "annotation_id": 7531,
    "created_at": "2024-08-17T06:58:14.084872Z",
    "updated_at": "2024-08-17T06:58:14.084872Z",
    "lead_time": 328.869
  },
  {
    "text": "PCI总线的基本传输机制是猝发式传送，利用桥可以实现总线间的猝发式传送",
    "id": 6099,
    "label": [
      {
        "start": 21,
        "end": 22,
        "text": "桥",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7532,
    "created_at": "2024-08-17T06:58:16.736889Z",
    "updated_at": "2024-08-17T06:58:16.736889Z",
    "lead_time": 2.1
  },
  {
    "text": "较大的指令系统就需要更多的位数来表示每条特定的指令",
    "id": 6100,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 13,
        "end": 14,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7533,
    "created_at": "2024-08-17T06:58:19.558881Z",
    "updated_at": "2024-08-17T06:58:19.558881Z",
    "lead_time": 2.356
  },
  {
    "text": "程序计数器PC为了保证程序能够连续地执行下去，CPU必须具有某些手段来确定下一条指令的地址",
    "id": 6101,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "程序计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7534,
    "created_at": "2024-08-17T06:58:20.754240Z",
    "updated_at": "2024-08-17T06:58:20.754240Z",
    "lead_time": 0.761
  },
  {
    "text": "ModRM字段规定了存储器操作数的寻址方式，给出了寄存器操作数的寄存器地址号",
    "id": 6102,
    "label": [
      {
        "start": 17,
        "end": 21,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7535,
    "created_at": "2024-08-17T06:58:26.991556Z",
    "updated_at": "2024-08-17T06:58:26.991556Z",
    "lead_time": 5.751
  },
  {
    "text": "一个系列往往有多种型号，但由于推出时间不同，采用器件不同，它们在结构和性能上有所差异",
    "id": 6103,
    "annotator": 1,
    "annotation_id": 7536,
    "created_at": "2024-08-17T06:59:36.982631Z",
    "updated_at": "2024-08-17T06:59:36.982631Z",
    "lead_time": 69.47
  },
  {
    "text": "下面只讲执行周期，CPU完成的动作如图所示",
    "id": 6104,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "执行周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7537,
    "created_at": "2024-08-17T06:59:42.669168Z",
    "updated_at": "2024-08-17T06:59:42.669168Z",
    "lead_time": 5.283
  },
  {
    "text": "根据优先次序，排队器输出为",
    "id": 6105,
    "annotator": 1,
    "annotation_id": 7538,
    "created_at": "2024-08-17T06:59:49.004285Z",
    "updated_at": "2024-08-17T06:59:49.004285Z",
    "lead_time": 5.751
  },
  {
    "text": "为了便于通道对各设备的统一管理，通道与IO模块之间用统一的标准接口，IO模块与设备之间则根据设备要求不同而采用专用接口",
    "id": 6106,
    "label": [
      {
        "start": 19,
        "end": 23,
        "text": "IO模块",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "IO模块",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 57,
        "end": 59,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7539,
    "created_at": "2024-08-17T06:59:52.309136Z",
    "updated_at": "2024-08-17T06:59:52.309136Z",
    "lead_time": 2.895
  },
  {
    "text": "存储容量有格式化容量和非格式化容量之分",
    "id": 6107,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 5,
        "end": 10,
        "text": "格式化容量",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 17,
        "text": "格式化容量",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7540,
    "created_at": "2024-08-17T07:00:27.137124Z",
    "updated_at": "2024-08-17T07:00:27.138134Z",
    "lead_time": 34.398
  },
  {
    "text": "其中移码主要用于表示浮点数的阶码E，以利于比较两个指数的大小和对阶操作",
    "id": 6108,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "移码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "对阶",
        "labels": [
          "ALG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7541,
    "created_at": "2024-08-17T07:01:55.820556Z",
    "updated_at": "2024-08-17T07:01:55.820556Z",
    "lead_time": 88.195
  },
  {
    "text": "写一次法writeonce写一次法是基于写回法并结合全写法的写策略：写命中与写未命中的处理方法和写回法基本相同，只是第一次写命中时要同时写入主存",
    "id": 6109,
    "label": [
      {
        "start": 20,
        "end": 23,
        "text": "写回法",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 70,
        "end": 72,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "写一次法",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "写一次法",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 48,
        "end": 51,
        "text": "写回法",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "写策略",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "全写法",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7542,
    "created_at": "2024-08-17T07:01:56.998273Z",
    "updated_at": "2024-08-17T07:01:56.998273Z",
    "lead_time": 0.626
  },
  {
    "text": "设置EI标志的目的，就是通过软件来控制是否允许某设备发出中断请求",
    "id": 6110,
    "label": [
      {
        "start": 14,
        "end": 16,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7543,
    "created_at": "2024-08-17T07:01:58.103050Z",
    "updated_at": "2024-08-17T07:02:03.348766Z",
    "lead_time": 3.299
  },
  {
    "text": "SCSI接口总线以菊花链形式最多可连接台设备",
    "id": 6111,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7544,
    "created_at": "2024-08-17T07:02:29.121686Z",
    "updated_at": "2024-08-17T07:02:29.121686Z",
    "lead_time": 24.401
  },
  {
    "text": "显然，这种结构的优点在于不仅解决了总线负载过重的问题，而且使总线设计简单，并能充分发挥每类总线的效能",
    "id": 6112,
    "label": [
      {
        "start": 17,
        "end": 19,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7545,
    "created_at": "2024-08-17T07:02:56.864005Z",
    "updated_at": "2024-08-17T07:02:56.864005Z",
    "lead_time": 27.284
  },
  {
    "text": "分布式仲裁不需要中央仲裁器，每个功能模块都有自己的仲裁号和仲裁器",
    "id": 6113,
    "label": [
      {
        "start": 8,
        "end": 13,
        "text": "中央仲裁器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "分布式仲裁",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "仲裁器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7546,
    "created_at": "2024-08-17T07:03:17.631013Z",
    "updated_at": "2024-08-17T07:03:17.631013Z",
    "lead_time": 19.749
  },
  {
    "text": "在定点机中，运算过程中出现溢出时其结果是不正确的，故运算器必须能检测出溢出",
    "id": 6114,
    "label": [
      {
        "start": 26,
        "end": 29,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "定点机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7547,
    "created_at": "2024-08-17T07:03:22.420379Z",
    "updated_at": "2024-08-17T07:03:22.420379Z",
    "lead_time": 3.893
  },
  {
    "text": "机器语言程序员看到的计算机的属性就是指令系统体系结构，简称ISAInstructionSetArchitecture，是与程序设计有关的计算机架构",
    "id": 6115,
    "label": [
      {
        "start": 18,
        "end": 22,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 61,
        "end": 65,
        "text": "程序设计",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "机器语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 68,
        "end": 71,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "ISA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7548,
    "created_at": "2024-08-17T07:04:03.916161Z",
    "updated_at": "2024-08-17T07:04:03.916161Z",
    "lead_time": 40.579
  },
  {
    "text": "这样做的目的主要是为了教学",
    "id": 6116,
    "annotator": 1,
    "annotation_id": 7549,
    "created_at": "2024-08-17T07:04:06.457259Z",
    "updated_at": "2024-08-17T07:04:06.457259Z",
    "lead_time": 1.267
  },
  {
    "text": "由于阶码是个k位的整数，假定定点整数移码形式为ekekeee最高位为符号位时，移码的传统定义是e移ke，kek式中，e移为机器数，e为真值，k是一个固定的偏移值常数",
    "id": 6117,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "定点整数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 61,
        "end": 64,
        "text": "机器数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "最高位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 67,
        "end": 69,
        "text": "真值",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "移码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "移码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 8,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7550,
    "created_at": "2024-08-17T07:05:12.688593Z",
    "updated_at": "2024-08-17T07:05:12.688593Z",
    "lead_time": 65.562
  },
  {
    "text": "算术流水线指运算操作步骤的并行",
    "id": 6118,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7551,
    "created_at": "2024-08-17T07:05:14.923266Z",
    "updated_at": "2024-08-17T07:05:14.923266Z",
    "lead_time": 1.61
  },
  {
    "text": "更重要的在于工艺复杂，甚至手工制作",
    "id": 6119,
    "annotator": 1,
    "annotation_id": 7552,
    "created_at": "2024-08-17T07:05:40.775075Z",
    "updated_at": "2024-08-17T07:05:40.775075Z",
    "lead_time": 25.289
  },
  {
    "text": "当有多个中断源同时提出中断申请时，还需对中断源进行优先级判别和排队，以确定应该首先响应哪个中断源的服务请求",
    "id": 6120,
    "label": [
      {
        "start": 25,
        "end": 28,
        "text": "优先级",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7553,
    "created_at": "2024-08-17T07:06:32.050858Z",
    "updated_at": "2024-08-17T07:06:32.050858Z",
    "lead_time": 50.791
  },
  {
    "text": "信息记录的轨迹称为光道",
    "id": 6121,
    "annotator": 1,
    "annotation_id": 7554,
    "created_at": "2024-08-17T07:06:33.374046Z",
    "updated_at": "2024-08-17T07:06:33.374046Z",
    "lead_time": 0.777
  },
  {
    "text": "IA体系结构微处理机的虚拟存储器可以通过两种方式实现：分段和分页",
    "id": 6122,
    "label": [
      {
        "start": 11,
        "end": 16,
        "text": "虚拟存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "微处理机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "分页",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "分段",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7555,
    "created_at": "2024-08-17T07:06:34.803687Z",
    "updated_at": "2024-08-17T07:06:34.803687Z",
    "lead_time": 0.871
  },
  {
    "text": "图a是这种传送方式的时间图",
    "id": 6123,
    "annotator": 1,
    "annotation_id": 7556,
    "created_at": "2024-08-17T07:06:36.627409Z",
    "updated_at": "2024-08-17T07:06:36.627409Z",
    "lead_time": 1.322
  },
  {
    "text": "页式虚存地址映射页式虚拟存储系统中，虚地址空间被分成等长的页，称为逻辑页；主存空间也被分成同样大小的页，称为物理页",
    "id": 6124,
    "label": [
      {
        "start": 10,
        "end": 16,
        "text": "虚拟存储系统",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 23,
        "text": "虚地址空间",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 37,
        "end": 41,
        "text": "主存空间",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "地址映射",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "虚存",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 1,
        "text": "页",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 9,
        "text": "页",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 29,
        "end": 30,
        "text": "页",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 50,
        "end": 51,
        "text": "页",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 56,
        "end": 57,
        "text": "页",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "逻辑页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7557,
    "created_at": "2024-08-17T07:06:54.940240Z",
    "updated_at": "2024-08-17T07:06:54.940240Z",
    "lead_time": 17.758
  },
  {
    "text": "它比前一种形式节省存储空间，又便于直接完成十进制数的算术运算，是广泛采用的较为理想的方法",
    "id": 6125,
    "label": [
      {
        "start": 26,
        "end": 30,
        "text": "算术运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "存储空间",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7558,
    "created_at": "2024-08-17T07:06:57.411973Z",
    "updated_at": "2024-08-17T07:06:57.411973Z",
    "lead_time": 1.914
  },
  {
    "text": "ID的设备具有最高优先权，ID的设备优先权最低",
    "id": 6126,
    "annotator": 1,
    "annotation_id": 7559,
    "created_at": "2024-08-17T07:07:50.146086Z",
    "updated_at": "2024-08-17T07:07:50.146086Z",
    "lead_time": 52.169
  },
  {
    "text": "在三个cache中，一个是指令cache，一个是数据cache，它们能同时完成取指令和取数据，还有一个是目标指令cacheTIC，它用于保存转移目标指令",
    "id": 6127,
    "label": [
      {
        "start": 13,
        "end": 20,
        "text": "指令cache",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 54,
        "end": 61,
        "text": "指令cache",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 31,
        "text": "数据cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 8,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "取指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 74,
        "end": 76,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7560,
    "created_at": "2024-08-17T07:07:56.085971Z",
    "updated_at": "2024-08-17T07:07:56.085971Z",
    "lead_time": 5.416
  },
  {
    "text": "而且用这种分级的观点来设计计算机，对保证产生一个良好的系统结构也是很有帮助的",
    "id": 6128,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7561,
    "created_at": "2024-08-17T07:07:57.922268Z",
    "updated_at": "2024-08-17T07:07:57.922268Z",
    "lead_time": 1.215
  },
  {
    "text": "最后对结果进行舍入，舍入之后可能还需要再次进行规格化，才能得到最终的结果",
    "id": 6129,
    "label": [
      {
        "start": 23,
        "end": 26,
        "text": "规格化",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7562,
    "created_at": "2024-08-17T07:08:01.631155Z",
    "updated_at": "2024-08-17T07:08:01.632155Z",
    "lead_time": 3.15
  },
  {
    "text": "每个寄存器都可以用程序中的IO指令从CPU送入控制数据",
    "id": 6130,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "IO指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7563,
    "created_at": "2024-08-17T07:09:36.978653Z",
    "updated_at": "2024-08-17T07:09:36.978653Z",
    "lead_time": 94.805
  },
  {
    "text": "显然，从指令流程图出发，就可以一个不漏地确定在指令周期中各个时刻必须激活的所有操作控制信号",
    "id": 6131,
    "label": [
      {
        "start": 39,
        "end": 45,
        "text": "操作控制信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "指令流",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7564,
    "created_at": "2024-08-17T07:10:31.781847Z",
    "updated_at": "2024-08-17T07:10:31.781847Z",
    "lead_time": 54.318
  },
  {
    "text": "因此现在大多数磁盘驱动器中都使用了预读策略，而根据局部性原理预取一些不久将可能读入的数据放到磁盘cache中",
    "id": 6132,
    "label": [
      {
        "start": 46,
        "end": 53,
        "text": "磁盘cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 25,
        "end": 30,
        "text": "局部性原理",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 12,
        "text": "磁盘驱动器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7565,
    "created_at": "2024-08-17T07:11:06.908680Z",
    "updated_at": "2024-08-17T07:11:06.908680Z",
    "lead_time": 34.604
  },
  {
    "text": "人们习惯于十进制数的运算，但是考虑到电子器件的特性，计算机中通常采用二进制数",
    "id": 6133,
    "label": [
      {
        "start": 18,
        "end": 22,
        "text": "电子器件",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7566,
    "created_at": "2024-08-17T07:11:15.107065Z",
    "updated_at": "2024-08-17T07:11:15.107065Z",
    "lead_time": 7.649
  },
  {
    "text": "之所以达到高速，一是因为串行传送比并行传送容易提高数据传送时钟速率；二是因为采用了DSLink编码技术，把时钟信号的变化转变为选通信号的变化，即使在高的时钟速率下也不易引起信号失真",
    "id": 6134,
    "label": [
      {
        "start": 12,
        "end": 16,
        "text": "串行传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 53,
        "end": 57,
        "text": "时钟信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "并行传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 76,
        "end": 78,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7567,
    "created_at": "2024-08-17T07:11:21.039170Z",
    "updated_at": "2024-08-17T07:11:21.039170Z",
    "lead_time": 5.342
  },
  {
    "text": "为此，CPU送出的地址线中最低两位的A和A并不送出，而是送出由连续四字节组成的一个位字的字地址字地址的最低两位固定为，外加个字节低位地址排列关系",
    "id": 6135,
    "label": [
      {
        "start": 9,
        "end": 11,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 65,
        "end": 68,
        "text": "位地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 44,
        "end": 47,
        "text": "字地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 47,
        "end": 50,
        "text": "字地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 62,
        "end": 64,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 17,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 41,
        "end": 42,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 54,
        "end": 55,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 42,
        "end": 43,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7568,
    "created_at": "2024-08-17T07:11:26.110057Z",
    "updated_at": "2024-08-17T07:11:26.110057Z",
    "lead_time": 4.441
  },
  {
    "text": "cache工作原理要求它尽量保存最新数据",
    "id": 6136,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7569,
    "created_at": "2024-08-17T07:11:27.552340Z",
    "updated_at": "2024-08-17T07:11:27.552340Z",
    "lead_time": 0.863
  },
  {
    "text": "常规的内存被称为主存",
    "id": 6137,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7570,
    "created_at": "2024-08-17T07:11:28.908081Z",
    "updated_at": "2024-08-17T07:11:28.908081Z",
    "lead_time": 0.928
  },
  {
    "text": "第二种简单办法是，运算过程中保留右移中移出的若干高位的值，最后再按某种规则用这些位上的值修正尾数",
    "id": 6138,
    "label": [
      {
        "start": 16,
        "end": 18,
        "text": "右移",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 26,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 40,
        "end": 41,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7571,
    "created_at": "2024-08-17T07:11:32.120816Z",
    "updated_at": "2024-08-17T07:11:32.120816Z",
    "lead_time": 2.694
  },
  {
    "text": "朝舍入即朝数轴原点方向舍入，就是简单的截尾",
    "id": 6139,
    "label": [
      {
        "start": 19,
        "end": 21,
        "text": "截尾",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7572,
    "created_at": "2024-08-17T07:13:43.367862Z",
    "updated_at": "2024-08-17T07:13:43.367862Z",
    "lead_time": 130.653
  },
  {
    "text": "中断机构当字计数器溢出时全，意味着一组数据交换完毕，由溢出信号触发中断机构，向CPU提出中断报告",
    "id": 6140,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 5,
        "end": 6,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7573,
    "created_at": "2024-08-17T07:14:40.808805Z",
    "updated_at": "2024-08-17T07:14:40.808805Z",
    "lead_time": 56.889
  },
  {
    "text": "为此，本节先介绍多功能算术逻辑运算单元ALU，它不仅具有多种算术运算和逻辑运算的功能，而且具有先行进位逻辑，从而能实现高速运算",
    "id": 6141,
    "label": [
      {
        "start": 11,
        "end": 19,
        "text": "算术逻辑运算单元",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "算术运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 35,
        "end": 39,
        "text": "逻辑运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 50,
        "end": 51,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7574,
    "created_at": "2024-08-17T07:14:41.907817Z",
    "updated_at": "2024-08-17T07:14:41.907817Z",
    "lead_time": 0.66
  },
  {
    "text": "如果只有上述硬件，计算机并不能进行运算，它仍然是一个“死”东西",
    "id": 6142,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7575,
    "created_at": "2024-08-17T07:14:42.646091Z",
    "updated_at": "2024-08-17T07:14:42.646091Z",
    "lead_time": 0.351
  },
  {
    "text": "计算机自诞生到现在，人们追求的目标之一是很高的运算速度，因此并行处理技术便成为计算机发展的主流",
    "id": 6143,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 36,
        "text": "并行处理技术",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7576,
    "created_at": "2024-08-17T07:14:43.287969Z",
    "updated_at": "2024-08-17T07:14:43.287969Z",
    "lead_time": 0.266
  },
  {
    "text": "而对于内存寻址，既可以在指令中直接给出操作数的实际访存地址称为有效地址，也可以在指令的地址字段给出所谓的形式地址，在指令执行时，将形式地址依据某种方式变换为有效地址再取操作数",
    "id": 6144,
    "label": [
      {
        "start": 52,
        "end": 56,
        "text": "形式地址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 65,
        "end": 69,
        "text": "形式地址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 31,
        "end": 35,
        "text": "有效地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 78,
        "end": 82,
        "text": "有效地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 43,
        "end": 47,
        "text": "地址字段",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 84,
        "end": 87,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 58,
        "end": 60,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7577,
    "created_at": "2024-08-17T07:14:43.890119Z",
    "updated_at": "2024-08-17T07:14:43.890119Z",
    "lead_time": 0.211
  },
  {
    "text": "一个完整的PCIe体系结构由上到下包括应用层、事务层、数据链路层和物理层，如图所示",
    "id": 6145,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "PCIe",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7578,
    "created_at": "2024-08-17T07:14:45.494628Z",
    "updated_at": "2024-08-17T07:14:45.494628Z",
    "lead_time": 1.125
  },
  {
    "text": "PCI有三个相互独立的物理地址空间，即存储器、IO、配置空间",
    "id": 6146,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "地址空间",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "PCI",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7579,
    "created_at": "2024-08-17T07:14:46.269239Z",
    "updated_at": "2024-08-17T07:14:46.269239Z",
    "lead_time": 0.387
  },
  {
    "text": "如果分配的内存不够，则只调入当前正在运行的或将要运行的程序块或数据块，其余部分暂时驻留在辅存中",
    "id": 6147,
    "label": [
      {
        "start": 44,
        "end": 46,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7580,
    "created_at": "2024-08-17T07:14:47.023438Z",
    "updated_at": "2024-08-17T07:14:47.023438Z",
    "lead_time": 0.349
  },
  {
    "text": "若该表项的有效位为，则将虚地址的段内偏移量d与该表项的段长字段比较：若偏移量较大则说明地址越界，将产生地址越界中断；否则，将该表项的段起址与段内偏移量相加，求得主存实地址并访存",
    "id": 6148,
    "label": [
      {
        "start": 16,
        "end": 20,
        "text": "段内偏移",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 70,
        "end": 74,
        "text": "段内偏移",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "虚地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "偏移量",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "有效位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 82,
        "end": 85,
        "text": "实地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 66,
        "end": 69,
        "text": "段起址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 80,
        "end": 82,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 51,
        "end": 53,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7581,
    "created_at": "2024-08-17T07:14:49.704174Z",
    "updated_at": "2024-08-17T07:14:49.704174Z",
    "lead_time": 2.273
  },
  {
    "text": "表示一条指令的机器字，就称为指令字，通常简称指令",
    "id": 6149,
    "label": [
      {
        "start": 14,
        "end": 17,
        "text": "指令字",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "机器字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7582,
    "created_at": "2024-08-17T07:14:51.660045Z",
    "updated_at": "2024-08-17T07:14:51.660045Z",
    "lead_time": 1.535
  },
  {
    "text": "不分段分页模式相当于页式虚拟存储器",
    "id": 6150,
    "label": [
      {
        "start": 10,
        "end": 17,
        "text": "页式虚拟存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 7,
        "text": "不分段分页模式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7583,
    "created_at": "2024-08-17T07:14:52.599798Z",
    "updated_at": "2024-08-17T07:14:52.599798Z",
    "lead_time": 0.515
  },
  {
    "text": "当外部发生某些随机的事件需要及时处理时，无论CPU正在执行哪一条指令，都可以通过中断响应的方式暂停正在执行的主程序的执行，转而执行另外一段中断服务程序",
    "id": 6151,
    "label": [
      {
        "start": 22,
        "end": 25,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 69,
        "end": 75,
        "text": "中断服务程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7584,
    "created_at": "2024-08-17T07:14:58.949932Z",
    "updated_at": "2024-08-17T07:14:58.949932Z",
    "lead_time": 5.962
  },
  {
    "text": "逻辑运算指令这类指令包括逻辑加、逻辑乘、按位加、逻辑移位等指令，主要用于无符号数的位操作、代码的转换、判断及运算",
    "id": 6152,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "逻辑运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "逻辑移位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 36,
        "end": 40,
        "text": "无符号数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "逻辑加",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "逻辑乘",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 21,
        "end": 22,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 41,
        "end": 42,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7585,
    "created_at": "2024-08-17T07:15:00.118638Z",
    "updated_at": "2024-08-17T07:15:00.118638Z",
    "lead_time": 0.72
  },
  {
    "text": "节中曾经提到，在程序中断方式中，某一外设的数据准备就绪后，它“主动”向CPU发出请求中断的信号，请求CPU暂时中断目前正在执行的程序而进行数据交换",
    "id": 6153,
    "label": [
      {
        "start": 35,
        "end": 38,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 50,
        "end": 53,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 64,
        "end": 66,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 8,
        "end": 14,
        "text": "程序中断方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7586,
    "created_at": "2024-08-17T07:15:16.836876Z",
    "updated_at": "2024-08-17T07:15:16.836876Z",
    "lead_time": 16.279
  },
  {
    "text": "而普通的硬磁盘要求具有超净环境，只能用于大型计算机中",
    "id": 6154,
    "label": [
      {
        "start": 22,
        "end": 25,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7587,
    "created_at": "2024-08-17T07:15:17.790170Z",
    "updated_at": "2024-08-17T07:15:17.791184Z",
    "lead_time": 0.518
  },
  {
    "text": "这样，每当CPU芯片升级时只需改变CPU总线和北桥芯片，全部原有的外围设备可自动继续工作",
    "id": 6155,
    "label": [
      {
        "start": 17,
        "end": 22,
        "text": "CPU总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "北桥芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7588,
    "created_at": "2024-08-17T07:15:19.012032Z",
    "updated_at": "2024-08-17T07:15:19.012032Z",
    "lead_time": 0.829
  },
  {
    "text": "计算机系统是一个由硬件、软件组成的多级层次结构，它通常由微程序级、一般机器级、操作系统级、汇编语言级、高级语言级组成，每一级上都能进行程序设计，且得到下面各级的支持",
    "id": 6156,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 39,
        "end": 43,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 45,
        "end": 50,
        "text": "汇编语言级",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 67,
        "end": 71,
        "text": "程序设计",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 51,
        "end": 55,
        "text": "高级语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7589,
    "created_at": "2024-08-17T07:15:35.588647Z",
    "updated_at": "2024-08-17T07:15:35.588647Z",
    "lead_time": 2.767
  },
  {
    "text": "磁盘控制器包括控制逻辑与时序、数据并串变换电路和串并变换电路",
    "id": 6157,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "磁盘控制器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7590,
    "created_at": "2024-08-17T07:15:37.311744Z",
    "updated_at": "2024-08-17T07:15:37.311744Z",
    "lead_time": 1.357
  },
  {
    "text": "第章输入输出系统向CPU报告DMA操作的结束",
    "id": 6158,
    "label": [
      {
        "start": 14,
        "end": 17,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7591,
    "created_at": "2024-08-17T07:15:38.986760Z",
    "updated_at": "2024-08-17T07:15:38.986760Z",
    "lead_time": 1.334
  },
  {
    "text": "虽然DMA控制器复杂程度差不多接近于CPU，但使用起来非常方便",
    "id": 6159,
    "label": [
      {
        "start": 18,
        "end": 21,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 8,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7592,
    "created_at": "2024-08-17T07:15:44.541444Z",
    "updated_at": "2024-08-17T07:15:44.541444Z",
    "lead_time": 5.217
  },
  {
    "text": "中断通常称为外部中断，它是由CPU的外部硬件信号引发的",
    "id": 6160,
    "label": [
      {
        "start": 20,
        "end": 22,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "外部中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7593,
    "created_at": "2024-08-17T07:15:52.551981Z",
    "updated_at": "2024-08-17T07:15:52.551981Z",
    "lead_time": 7.672
  },
  {
    "text": "无符号双字用作位地址指针",
    "id": 6161,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "位地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "指针",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 4,
        "end": 5,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7594,
    "created_at": "2024-08-17T07:15:53.676245Z",
    "updated_at": "2024-08-17T07:15:53.676245Z",
    "lead_time": 0.759
  },
  {
    "text": "DMA控制器获得总线控制权以后，开始进行数据传送",
    "id": 6162,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 13,
        "text": "总线控制权",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7595,
    "created_at": "2024-08-17T07:15:54.687088Z",
    "updated_at": "2024-08-17T07:15:54.687088Z",
    "lead_time": 0.668
  },
  {
    "text": "每次操作之后，变址寄存器内容增",
    "id": 6163,
    "label": [
      {
        "start": 7,
        "end": 12,
        "text": "变址寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7596,
    "created_at": "2024-08-17T07:15:55.427322Z",
    "updated_at": "2024-08-17T07:15:55.427322Z",
    "lead_time": 0.391
  },
  {
    "text": "例如，IBM计算机，根据一个机器周期输出一条指令的要求、存储器的存取周期、CPU访问存储器的频率，采用了模交叉存储器",
    "id": 6164,
    "label": [
      {
        "start": 53,
        "end": 58,
        "text": "交叉存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "机器周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "存取周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 42,
        "end": 45,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "IBM",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7597,
    "created_at": "2024-08-17T07:15:57.075752Z",
    "updated_at": "2024-08-17T07:15:57.075752Z",
    "lead_time": 1.301
  },
  {
    "text": "每个表项至少包含下面三个字段：有效位指明该段是否已经调入实存",
    "id": 6165,
    "label": [
      {
        "start": 15,
        "end": 18,
        "text": "有效位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "实存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7598,
    "created_at": "2024-08-17T07:15:58.518794Z",
    "updated_at": "2024-08-17T07:15:58.518794Z",
    "lead_time": 1.09
  },
  {
    "text": "直接内存访问DMA方式是一种完全由硬件执行IO交换的工作方式",
    "id": 6166,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7599,
    "created_at": "2024-08-17T07:16:00.388556Z",
    "updated_at": "2024-08-17T07:16:00.388556Z",
    "lead_time": 1.531
  },
  {
    "text": "所谓逻辑数，是指不带符号的二进制数",
    "id": 6167,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "逻辑数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7600,
    "created_at": "2024-08-17T07:16:01.092424Z",
    "updated_at": "2024-08-17T07:16:01.092424Z",
    "lead_time": 0.375
  },
  {
    "text": "常见的流水线形式有：指令流水线指指令步骤的并行",
    "id": 6168,
    "label": [
      {
        "start": 10,
        "end": 15,
        "text": "指令流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7601,
    "created_at": "2024-08-17T07:16:01.889286Z",
    "updated_at": "2024-08-17T07:16:01.889286Z",
    "lead_time": 0.463
  },
  {
    "text": "主存和CPU之间设置高速缓存cache是为了弥补主存和CPU之间速度上的差异",
    "id": 6169,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "高速缓存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 19,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7602,
    "created_at": "2024-08-17T07:16:02.554901Z",
    "updated_at": "2024-08-17T07:16:02.554901Z",
    "lead_time": 0.308
  },
  {
    "text": "虚地址到实主存地址的变换通过段表实现",
    "id": 6170,
    "label": [
      {
        "start": 4,
        "end": 9,
        "text": "实主存地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "虚地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "段表",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7603,
    "created_at": "2024-08-17T07:16:03.180689Z",
    "updated_at": "2024-08-17T07:16:03.180689Z",
    "lead_time": 0.251
  },
  {
    "text": "具有通道的机器一般是大型计算机和服务器，数据流量很大",
    "id": 6171,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7604,
    "created_at": "2024-08-17T07:16:03.782180Z",
    "updated_at": "2024-08-17T07:16:03.782180Z",
    "lead_time": 0.228
  },
  {
    "text": "半导体存储器的存储容量毕竟有限，因此计算机中又配备了存储容量更大的磁盘存储器和光盘存储器，称为外存储器",
    "id": 6172,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "半导体存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 33,
        "end": 38,
        "text": "磁盘存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 41,
        "end": 44,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 48,
        "end": 51,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7605,
    "created_at": "2024-08-17T07:16:04.401959Z",
    "updated_at": "2024-08-17T07:16:04.401959Z",
    "lead_time": 0.293
  },
  {
    "text": "采用同步时序协议",
    "id": 6173,
    "label": [
      {
        "start": 2,
        "end": 8,
        "text": "同步时序协议",
        "labels": [
          "PROT"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7606,
    "created_at": "2024-08-17T07:16:05.199015Z",
    "updated_at": "2024-08-17T07:16:05.199015Z",
    "lead_time": 0.409
  },
  {
    "text": "这就告诉我们如何设计微程序，也将使我们进一步体验到机器指令与微指令的关系",
    "id": 6174,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7607,
    "created_at": "2024-08-17T07:16:06.356410Z",
    "updated_at": "2024-08-17T07:16:06.356410Z",
    "lead_time": 0.833
  },
  {
    "text": "目前的发展趋势是机械化的击打式设备逐步转向电子化的非击打式设备",
    "id": 6175,
    "annotator": 1,
    "annotation_id": 7608,
    "created_at": "2024-08-17T07:16:07.159942Z",
    "updated_at": "2024-08-17T07:16:07.159942Z",
    "lead_time": 0.457
  },
  {
    "text": "于是，每当判定是否发射一条指令STO存数指令和转移指令除外时，一个必须满足的条件是：该指令的所有目的寄存器、源寄存器在位向量中的相应位都已被清除",
    "id": 6176,
    "label": [
      {
        "start": 50,
        "end": 53,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "转移指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 54,
        "end": 58,
        "text": "源寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "存数指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 59,
        "end": 62,
        "text": "位向量",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 66,
        "end": 67,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7609,
    "created_at": "2024-08-17T07:16:10.013110Z",
    "updated_at": "2024-08-17T07:16:10.013110Z",
    "lead_time": 2.523
  },
  {
    "text": "最上面一行所执行的初始操作一定是减法",
    "id": 6177,
    "annotator": 1,
    "annotation_id": 7610,
    "created_at": "2024-08-17T07:16:10.907902Z",
    "updated_at": "2024-08-17T07:16:10.907902Z",
    "lead_time": 0.489
  },
  {
    "text": "反之，若两数阶码不同，表示小数点位置没有对齐，此时必须使两数的阶码相同，这个过程叫做对阶",
    "id": 6178,
    "label": [
      {
        "start": 42,
        "end": 44,
        "text": "对阶",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7611,
    "created_at": "2024-08-17T07:16:14.463143Z",
    "updated_at": "2024-08-17T07:16:14.463143Z",
    "lead_time": 3.25
  },
  {
    "text": "此时的指令格式，称为I型立即数指令，其指令格式如下所示：位字段address地址提供取字指令IW，存字指令SW访问存储器的基值地址码也称位移量",
    "id": 6179,
    "label": [
      {
        "start": 57,
        "end": 60,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 63,
        "end": 66,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "立即数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 51,
        "end": 53,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 29,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 68,
        "end": 69,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 43,
        "end": 44,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 50,
        "end": 51,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7612,
    "created_at": "2024-08-17T07:16:20.740201Z",
    "updated_at": "2024-08-17T07:16:20.740201Z",
    "lead_time": 5.923
  },
  {
    "text": "第章输入输出系统这个接口电路是在中断接口的基础上再加DMA机构组成的",
    "id": 6180,
    "label": [
      {
        "start": 26,
        "end": 29,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7613,
    "created_at": "2024-08-17T07:16:22.080574Z",
    "updated_at": "2024-08-17T07:16:22.080574Z",
    "lead_time": 0.928
  },
  {
    "text": "为了提高数据的表示精度，当尾数的值不为时，尾数域的最高有效位应为，这称为浮点数的规格化表示",
    "id": 6181,
    "label": [
      {
        "start": 27,
        "end": 30,
        "text": "有效位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "规格化",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7614,
    "created_at": "2024-08-17T07:16:51.107529Z",
    "updated_at": "2024-08-17T07:16:51.107529Z",
    "lead_time": 28.652
  },
  {
    "text": "在超时之前，可以通过不断读取该地址的方式轮询闪存的状态，直到DQ翻转",
    "id": 6182,
    "label": [
      {
        "start": 22,
        "end": 24,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7615,
    "created_at": "2024-08-17T07:18:14.348341Z",
    "updated_at": "2024-08-17T07:18:14.348341Z",
    "lead_time": 82.608
  },
  {
    "text": "一是突发操作的速度高，如果连续访问的地址的高位相同属于同一行地址，那么只需连续变动位列地址就能从SRAM中快速读出数据",
    "id": 6183,
    "label": [
      {
        "start": 48,
        "end": 52,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "行地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 42,
        "end": 45,
        "text": "列地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 23,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 41,
        "end": 42,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7616,
    "created_at": "2024-08-17T07:18:44.298320Z",
    "updated_at": "2024-08-17T07:18:44.298320Z",
    "lead_time": 29.432
  },
  {
    "text": "与内页表对应的还有外页表，用于虚地址与辅存地址之间的变换",
    "id": 6184,
    "label": [
      {
        "start": 19,
        "end": 23,
        "text": "辅存地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "虚地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7617,
    "created_at": "2024-08-17T07:18:45.592767Z",
    "updated_at": "2024-08-17T07:18:45.592767Z",
    "lead_time": 0.917
  },
  {
    "text": "例如，对活动头磁盘组来说，磁盘地址是由记录面号也称磁头号、磁道号和扇区号三部分组成的",
    "id": 6185,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "记录面",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "扇区",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "磁道",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7618,
    "created_at": "2024-08-17T07:18:46.613767Z",
    "updated_at": "2024-08-17T07:18:46.613767Z",
    "lead_time": 0.622
  },
  {
    "text": "图的右边列出了汇编语言所写的查询程序，其中使用了跳步指令SKP和无条件转移指令JMP",
    "id": 6186,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "汇编语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 33,
        "end": 39,
        "text": "条件转移指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "JMP",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7619,
    "created_at": "2024-08-17T07:18:49.252695Z",
    "updated_at": "2024-08-17T07:18:49.252695Z",
    "lead_time": 2.269
  },
  {
    "text": "理想的输出设备应该是“会写”和“会讲”",
    "id": 6187,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "输出设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7620,
    "created_at": "2024-08-17T07:18:50.058390Z",
    "updated_at": "2024-08-17T07:18:50.058390Z",
    "lead_time": 0.46
  },
  {
    "text": "有符号半字用于位算术运算",
    "id": 6188,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "算术运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 7,
        "end": 8,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 4,
        "end": 5,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7621,
    "created_at": "2024-08-17T07:18:50.807251Z",
    "updated_at": "2024-08-17T07:18:50.807251Z",
    "lead_time": 0.411
  },
  {
    "text": "由分段部件将二维的虚拟地址转换为一维的线性地址",
    "id": 6189,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "分段部件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "虚拟地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "线性地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7622,
    "created_at": "2024-08-17T07:18:51.624417Z",
    "updated_at": "2024-08-17T07:18:51.624417Z",
    "lead_time": 0.45
  },
  {
    "text": "DRAM存储密度高，大容量DRAM价格相对较低，因而适合用作系统主存",
    "id": 6190,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "存储密度",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7623,
    "created_at": "2024-08-17T07:18:52.454520Z",
    "updated_at": "2024-08-17T07:18:52.454520Z",
    "lead_time": 0.439
  },
  {
    "text": "串行传送的主要优点是只需要一条传输线，这一点对长距离传输显得特别重要，不管传送的数据量有多少，只需要一条传输线，成本比较低廉",
    "id": 6191,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "串行传送",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7624,
    "created_at": "2024-08-17T07:18:53.186086Z",
    "updated_at": "2024-08-17T07:18:53.186086Z",
    "lead_time": 0.381
  },
  {
    "text": "主频时钟周期CPU的工作节拍受主时钟控制，主时钟不断产生固定频率的时钟，主时钟的频率f叫CPU的主频",
    "id": 6192,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 44,
        "end": 47,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "主频",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 48,
        "end": 50,
        "text": "主频",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7625,
    "created_at": "2024-08-17T07:18:54.025090Z",
    "updated_at": "2024-08-17T07:18:54.025090Z",
    "lead_time": 0.484
  },
  {
    "text": "第级是高级语言级，它是面向用户的，为方便用户编写应用程序而设置的",
    "id": 6193,
    "label": [
      {
        "start": 24,
        "end": 28,
        "text": "应用程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "高级语言",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7626,
    "created_at": "2024-08-17T07:18:54.859763Z",
    "updated_at": "2024-08-17T07:18:54.859763Z",
    "lead_time": 0.43
  },
  {
    "text": "其中两个算前求补器的作用是：将两个操作数A和B在被不带符号的乘法阵列核心部件相乘以前，先变成正整数",
    "id": 6194,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "求补器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7627,
    "created_at": "2024-08-17T07:18:55.571793Z",
    "updated_at": "2024-08-17T07:18:55.571793Z",
    "lead_time": 0.352
  },
  {
    "text": "对应于一台计算机的机器指令只有一组微程序，而且这一组微程序设计好之后，一般无须改变而且也不好改变，这种微程序设计技术称为静态微程序设计",
    "id": 6195,
    "label": [
      {
        "start": 26,
        "end": 31,
        "text": "微程序设计",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 51,
        "end": 56,
        "text": "微程序设计",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 62,
        "end": 67,
        "text": "微程序设计",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7628,
    "created_at": "2024-08-17T07:19:02.195061Z",
    "updated_at": "2024-08-17T07:19:02.195061Z",
    "lead_time": 2.086
  },
  {
    "text": "这意味着每条指令的指令周期可由多少不等的机器周期数组成；也可以是当控制器发出某一操作控制信号后，等待执行部件完成操作后发回“回答”信号，再开始新的操作",
    "id": 6196,
    "label": [
      {
        "start": 40,
        "end": 46,
        "text": "操作控制信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "机器周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7629,
    "created_at": "2024-08-17T07:19:04.200624Z",
    "updated_at": "2024-08-17T07:19:04.200624Z",
    "lead_time": 1.515
  },
  {
    "text": "funct字段函数码，指定R型指令的特定操作",
    "id": 6197,
    "label": [
      {
        "start": 15,
        "end": 17,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7630,
    "created_at": "2024-08-17T07:19:04.888433Z",
    "updated_at": "2024-08-17T07:19:04.888433Z",
    "lead_time": 0.287
  },
  {
    "text": "通道是一个具有特殊功能的简化版处理器，它可以实现对外围设备的统一管理和外围设备与内存之间的数据传送控制",
    "id": 6198,
    "label": [
      {
        "start": 15,
        "end": 18,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 35,
        "end": 39,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7631,
    "created_at": "2024-08-17T07:19:06.791794Z",
    "updated_at": "2024-08-17T07:19:06.791794Z",
    "lead_time": 1.379
  },
  {
    "text": "配置采用菊花链式配置，但也允许树形结构配置",
    "id": 6199,
    "annotator": 1,
    "annotation_id": 7632,
    "created_at": "2024-08-17T07:19:07.745425Z",
    "updated_at": "2024-08-17T07:19:07.745425Z",
    "lead_time": 0.492
  },
  {
    "text": "透明DMA方式如果CPU的工作周期比内存存取周期长很多，则采用交替访内的方法可以使DMA传送和CPU同时发挥最高的效率，其原理示意图如图c所示",
    "id": 6200,
    "label": [
      {
        "start": 41,
        "end": 46,
        "text": "DMA传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "存取周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 47,
        "end": 50,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7633,
    "created_at": "2024-08-17T07:19:08.543751Z",
    "updated_at": "2024-08-17T07:19:08.543751Z",
    "lead_time": 0.322
  },
  {
    "text": "当微程序转向公操作用符号表示时，如果没有外围设备请求服务，那么又转向取下一条机器指令",
    "id": 6201,
    "label": [
      {
        "start": 38,
        "end": 42,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7634,
    "created_at": "2024-08-17T07:19:09.217774Z",
    "updated_at": "2024-08-17T07:19:09.217774Z",
    "lead_time": 0.062
  },
  {
    "text": "显然，这里采用了独立请求方式与链式查询方式相结合的方法决定首先响应哪个中断源",
    "id": 6202,
    "label": [
      {
        "start": 35,
        "end": 38,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 14,
        "text": "独立请求方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7635,
    "created_at": "2024-08-17T07:19:09.846908Z",
    "updated_at": "2024-08-17T07:19:09.846908Z",
    "lead_time": 0.054
  },
  {
    "text": "光盘扇区分为个区域",
    "id": 6203,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "扇区",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7636,
    "created_at": "2024-08-17T07:19:10.483205Z",
    "updated_at": "2024-08-17T07:19:10.483205Z",
    "lead_time": 0.052
  },
  {
    "text": "然而这种提高CPU效率的方式是以耗费更多硬件为代价的",
    "id": 6204,
    "label": [
      {
        "start": 20,
        "end": 22,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7637,
    "created_at": "2024-08-17T07:19:11.137882Z",
    "updated_at": "2024-08-17T07:19:11.137882Z",
    "lead_time": 0.053
  },
  {
    "text": "二模块的总容量为MBK位",
    "id": 6205,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "MB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7638,
    "created_at": "2024-08-17T07:19:11.696301Z",
    "updated_at": "2024-08-17T07:19:11.696301Z",
    "lead_time": 0.056
  },
  {
    "text": "另一种是舍入法，即当丢失的最高位的值为时，把这个加到最低数值位上进行修正",
    "id": 6206,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "最高位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 30,
        "end": 31,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7639,
    "created_at": "2024-08-17T07:19:12.395711Z",
    "updated_at": "2024-08-17T07:19:12.395711Z",
    "lead_time": 0.057
  },
  {
    "text": "设备选择电路实际上是设备地址的译码器",
    "id": 6207,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "设备地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "译码器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7640,
    "created_at": "2024-08-17T07:19:12.991275Z",
    "updated_at": "2024-08-17T07:19:12.991275Z",
    "lead_time": 0.062
  },
  {
    "text": "进行状态分析或其他控制功能",
    "id": 6208,
    "annotator": 1,
    "annotation_id": 7641,
    "created_at": "2024-08-17T07:19:14.266068Z",
    "updated_at": "2024-08-17T07:19:14.266068Z",
    "lead_time": 0.7
  },
  {
    "text": "逻辑网络N的输出信号就是微操作控制信号，它用来对执行部件进行控制",
    "id": 6209,
    "label": [
      {
        "start": 12,
        "end": 19,
        "text": "微操作控制信号",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7642,
    "created_at": "2024-08-17T07:19:15.163716Z",
    "updated_at": "2024-08-17T07:19:15.163716Z",
    "lead_time": 0.497
  },
  {
    "text": "不过，凹陷区的大小相对更小一些，使得圆形光道上存储的数据总量更大",
    "id": 6210,
    "annotator": 1,
    "annotation_id": 7643,
    "created_at": "2024-08-17T07:19:28.108447Z",
    "updated_at": "2024-08-17T07:19:28.108447Z",
    "lead_time": 12.534
  },
  {
    "text": "指令的操作码OP表示该指令应进行什么性质的操作，如进行加法、减法、乘法、除法、取数、存数等",
    "id": 6211,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "OP",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7644,
    "created_at": "2024-08-17T07:19:30.291944Z",
    "updated_at": "2024-08-17T07:19:30.291944Z",
    "lead_time": 1.756
  },
  {
    "text": "而未读写的存储元也要定期刷新，因为电荷量会逐渐泄漏而减少",
    "id": 6212,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "存储元",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7645,
    "created_at": "2024-08-17T07:19:35.622630Z",
    "updated_at": "2024-08-17T07:19:35.622630Z",
    "lead_time": 2.421
  },
  {
    "text": "寻址方式特征位，此处由间址位和变址位组成",
    "id": 6213,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "变址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 7,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 14,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 17,
        "end": 18,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7646,
    "created_at": "2024-08-17T07:19:43.769396Z",
    "updated_at": "2024-08-17T07:19:43.769396Z",
    "lead_time": 7.502
  },
  {
    "text": "显然，主存的第块，第m块，第m块，，第sm块只能映射到cache的第行；而主存的第块，第m块，第m块，，第sm块只能映射到cache的第行",
    "id": 6214,
    "label": [
      {
        "start": 27,
        "end": 32,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 61,
        "end": 66,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7647,
    "created_at": "2024-08-17T07:20:30.010038Z",
    "updated_at": "2024-08-17T07:20:30.010038Z",
    "lead_time": 45.644
  },
  {
    "text": "半导体存储器中，RAM是易失性存储器，一旦掉电，储存信息全部丢失",
    "id": 6215,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "半导体",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 18,
        "text": "易失性存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "RAM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7648,
    "created_at": "2024-08-17T07:20:59.809647Z",
    "updated_at": "2024-08-17T07:20:59.810695Z",
    "lead_time": 29.28
  },
  {
    "text": "激光印字机的结构见图",
    "id": 6216,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "激光印字机",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7649,
    "created_at": "2024-08-17T07:21:02.208914Z",
    "updated_at": "2024-08-17T07:21:02.208914Z",
    "lead_time": 1.585
  },
  {
    "text": "一个PCIe链路可以由多条通道组成，目前可支持、、、、、和宽度的PCIe链路",
    "id": 6217,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "PCIe",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "PCIe",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7650,
    "created_at": "2024-08-17T07:21:03.564095Z",
    "updated_at": "2024-08-17T07:21:03.564095Z",
    "lead_time": 0.709
  },
  {
    "text": "采用完全统一的机器周期执行各种不同的指令",
    "id": 6218,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "机器周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7651,
    "created_at": "2024-08-17T07:21:04.985613Z",
    "updated_at": "2024-08-17T07:21:04.985613Z",
    "lead_time": 0.609
  },
  {
    "text": "在大多数系统中，每个进程对应一个页表",
    "id": 6219,
    "label": [
      {
        "start": 16,
        "end": 18,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "进程",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7652,
    "created_at": "2024-08-17T07:21:06.346934Z",
    "updated_at": "2024-08-17T07:21:06.346934Z",
    "lead_time": 0.483
  },
  {
    "text": "此时，外围设备通过与CPU中的总线控制部件交换控制信号的方式占有总线",
    "id": 6220,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7653,
    "created_at": "2024-08-17T07:21:07.762134Z",
    "updated_at": "2024-08-17T07:21:07.762134Z",
    "lead_time": 0.734
  },
  {
    "text": "外围设备的功能是在计算机和其他机器之间，以及计算机与用户之间提供联系",
    "id": 6221,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7654,
    "created_at": "2024-08-17T07:21:09.654506Z",
    "updated_at": "2024-08-17T07:21:09.654506Z",
    "lead_time": 0.972
  },
  {
    "text": "因此，指令发射和定向传送是同时进行的",
    "id": 6222,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7655,
    "created_at": "2024-08-17T07:21:10.907147Z",
    "updated_at": "2024-08-17T07:21:10.907147Z",
    "lead_time": 0.463
  },
  {
    "text": "在IBMPC系统中，屏幕上共显示列行个字符，故字符窗口数目为",
    "id": 6223,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "IBM",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 19,
        "end": 20,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7656,
    "created_at": "2024-08-17T07:21:12.148835Z",
    "updated_at": "2024-08-17T07:21:12.148835Z",
    "lead_time": 0.475
  },
  {
    "text": "这就是说，当磁性材料被磁化后，会形成两个稳定的剩磁状态，就像触发器电路有两个稳定的状态一样",
    "id": 6224,
    "label": [
      {
        "start": 30,
        "end": 33,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7657,
    "created_at": "2024-08-17T07:21:13.477233Z",
    "updated_at": "2024-08-17T07:21:13.477233Z",
    "lead_time": 0.689
  },
  {
    "text": "多级中断中的每一级可以只有一个中断源，也可以有多个中断源",
    "id": 6225,
    "label": [
      {
        "start": 15,
        "end": 18,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7658,
    "created_at": "2024-08-17T07:21:14.504930Z",
    "updated_at": "2024-08-17T07:21:14.504930Z",
    "lead_time": 0.459
  },
  {
    "text": "内存地址修改、传送字个数的计数等，也不是由软件实现，而是用硬件线路直接实现的",
    "id": 6226,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "内存地址",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7659,
    "created_at": "2024-08-17T07:21:16.835145Z",
    "updated_at": "2024-08-17T07:21:16.835145Z",
    "lead_time": 1.121
  },
  {
    "text": "除此以外，还可以进行逻辑运算，因此通常称为ALU算术逻辑运算部件",
    "id": 6227,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "逻辑运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "逻辑运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7660,
    "created_at": "2024-08-17T07:21:19.977325Z",
    "updated_at": "2024-08-17T07:21:19.977325Z",
    "lead_time": 1.143
  },
  {
    "text": "从磁滞回线可以看出，磁性材料被磁化以后，工作点总是在磁滞回线上",
    "id": 6228,
    "annotator": 1,
    "annotation_id": 7661,
    "created_at": "2024-08-17T07:21:22.257259Z",
    "updated_at": "2024-08-17T07:21:22.257259Z",
    "lead_time": 1.648
  },
  {
    "text": "而且当执行一条微指令时，水平型微指令的微命令一般直接控制对象，而垂直型微指令要经过译码，会影响速度",
    "id": 6229,
    "label": [
      {
        "start": 32,
        "end": 38,
        "text": "垂直型微指令",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 18,
        "text": "水平型微指令",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "译码",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7662,
    "created_at": "2024-08-17T07:21:24.904564Z",
    "updated_at": "2024-08-17T07:21:24.904564Z",
    "lead_time": 2.081
  },
  {
    "text": "根据需要，可以扩充其数目",
    "id": 6230,
    "annotator": 1,
    "annotation_id": 7663,
    "created_at": "2024-08-17T07:21:26.590755Z",
    "updated_at": "2024-08-17T07:21:26.590755Z",
    "lead_time": 1.138
  },
  {
    "text": "图示出了它的指令类型与格式",
    "id": 6231,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7664,
    "created_at": "2024-08-17T07:21:27.831848Z",
    "updated_at": "2024-08-17T07:21:27.831848Z",
    "lead_time": 0.858
  },
  {
    "text": "下面用条垂直型微指令的微指令格式加以说明",
    "id": 6232,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7665,
    "created_at": "2024-08-17T07:21:28.805778Z",
    "updated_at": "2024-08-17T07:21:28.805778Z",
    "lead_time": 0.515
  },
  {
    "text": "TIC是一个项的全相联cache，每项能保存转移目标路径的前两条指令",
    "id": 6233,
    "label": [
      {
        "start": 11,
        "end": 16,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "全相联",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "IC",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7666,
    "created_at": "2024-08-17T07:21:29.658518Z",
    "updated_at": "2024-08-17T07:21:29.659564Z",
    "lead_time": 0.364
  },
  {
    "text": "在分散式刷新策略中，每一行的刷新操作被均匀地分配到刷新周期时间内",
    "id": 6234,
    "label": [
      {
        "start": 25,
        "end": 29,
        "text": "刷新周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7667,
    "created_at": "2024-08-17T07:21:30.484117Z",
    "updated_at": "2024-08-17T07:21:30.484117Z",
    "lead_time": 0.174
  },
  {
    "text": "根据段内逻辑页号P检索页表，得到物理页号图中为",
    "id": 6235,
    "label": [
      {
        "start": 4,
        "end": 8,
        "text": "逻辑页号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "物理页号",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7668,
    "created_at": "2024-08-17T07:21:31.997076Z",
    "updated_at": "2024-08-17T07:21:31.997076Z",
    "lead_time": 0.954
  },
  {
    "text": "Cn是本片组的最后进位输出",
    "id": 6236,
    "label": [
      {
        "start": 10,
        "end": 11,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7669,
    "created_at": "2024-08-17T07:21:33.585233Z",
    "updated_at": "2024-08-17T07:21:33.585233Z",
    "lead_time": 0.995
  },
  {
    "text": "与QIC相比，价格上比较昂贵",
    "id": 6237,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "IC",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7670,
    "created_at": "2024-08-17T07:21:34.720010Z",
    "updated_at": "2024-08-17T07:21:34.720010Z",
    "lead_time": 0.565
  },
  {
    "text": "直接内存访问DMA方式用中断方式交换数据，是通过CPU执行程序来实现数据传送的",
    "id": 6238,
    "label": [
      {
        "start": 12,
        "end": 16,
        "text": "中断方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7671,
    "created_at": "2024-08-17T07:21:36.136944Z",
    "updated_at": "2024-08-17T07:21:36.137955Z",
    "lead_time": 0.904
  },
  {
    "text": "用压缩的十进制数串表示一个数，也要占用主存连续的多字节",
    "id": 6239,
    "label": [
      {
        "start": 19,
        "end": 21,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7672,
    "created_at": "2024-08-17T07:21:36.877368Z",
    "updated_at": "2024-08-17T07:21:36.877368Z",
    "lead_time": 0.069
  },
  {
    "text": "指令中最多出现RS型指令，绝不出现SS型指令",
    "id": 6240,
    "label": [
      {
        "start": 7,
        "end": 12,
        "text": "RS型指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 17,
        "end": 22,
        "text": "SS型指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7673,
    "created_at": "2024-08-17T07:21:37.631868Z",
    "updated_at": "2024-08-17T07:21:37.631868Z",
    "lead_time": 0.061
  },
  {
    "text": "空间并行指资源重复，在并行性概念中引入空间因素，以“数量取胜”为原则来大幅度提高计算机的处理速度",
    "id": 6241,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "空间并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "并行性",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7674,
    "created_at": "2024-08-17T07:21:38.364107Z",
    "updated_at": "2024-08-17T07:21:38.364107Z",
    "lead_time": 0.06
  },
  {
    "text": "其次，把计算式中给定的四个数a、b、c和x分别写到横格纸的第、、、行上，每一行只写一个数",
    "id": 6242,
    "annotator": 1,
    "annotation_id": 7675,
    "created_at": "2024-08-17T07:21:39.028015Z",
    "updated_at": "2024-08-17T07:21:39.028015Z",
    "lead_time": 0.052
  },
  {
    "text": "用这种对求补器来转换一个n位带符号的数，所需的总时间延迟为tTCnTTnT其中每个扫描级需T延迟，而T则是由于“与”门和“异或”门引起的",
    "id": 6243,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "求补器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 14,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7676,
    "created_at": "2024-08-17T07:21:39.582566Z",
    "updated_at": "2024-08-17T07:21:39.582566Z",
    "lead_time": 0.052
  },
  {
    "text": "另外，ISA总线控制逻辑还通过主板上的片级总线与实时钟日历、ROM、键盘和鼠标控制器微处理器等芯片相连接",
    "id": 6244,
    "label": [
      {
        "start": 42,
        "end": 46,
        "text": "微处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 12,
        "text": "总线控制逻辑",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "ISA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "键盘",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7677,
    "created_at": "2024-08-17T07:21:40.391257Z",
    "updated_at": "2024-08-17T07:21:40.391257Z",
    "lead_time": 0.11
  },
  {
    "text": "每一个基本操作就叫做一条指令，而解算某一问题的一串指令序列，叫做该问题的计算程序，简称为程序",
    "id": 6245,
    "label": [
      {
        "start": 25,
        "end": 29,
        "text": "指令序列",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7678,
    "created_at": "2024-08-17T07:21:41.280806Z",
    "updated_at": "2024-08-17T07:21:41.280806Z",
    "lead_time": 0.085
  },
  {
    "text": "一旦接口和外设确认同步，它们之间的数据交换便靠时钟脉冲控制来进行",
    "id": 6246,
    "label": [
      {
        "start": 23,
        "end": 25,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7679,
    "created_at": "2024-08-17T07:21:41.968299Z",
    "updated_at": "2024-08-17T07:21:41.968299Z",
    "lead_time": 0.058
  },
  {
    "text": "读出过程破坏了电容上存储的信息，所以要把信息重新写入，即刷新",
    "id": 6247,
    "annotator": 1,
    "annotation_id": 7680,
    "created_at": "2024-08-17T07:21:42.694913Z",
    "updated_at": "2024-08-17T07:21:42.694913Z",
    "lead_time": 0.042
  },
  {
    "text": "多模块交叉存储器就是基于这种思想提出来的",
    "id": 6248,
    "label": [
      {
        "start": 0,
        "end": 8,
        "text": "多模块交叉存储器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7681,
    "created_at": "2024-08-17T07:21:43.788997Z",
    "updated_at": "2024-08-17T07:21:43.788997Z",
    "lead_time": 0.604
  },
  {
    "text": "由于参加竞争的各设备速度不一致，这个比较过程反复自动进行，才有最后稳定的结果",
    "id": 6249,
    "annotator": 1,
    "annotation_id": 7682,
    "created_at": "2024-08-17T07:21:44.905385Z",
    "updated_at": "2024-08-17T07:21:44.905385Z",
    "lead_time": 0.51
  },
  {
    "text": "已经了解了微程序控制器的基本原理",
    "id": 6250,
    "label": [
      {
        "start": 5,
        "end": 11,
        "text": "微程序控制器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7683,
    "created_at": "2024-08-17T07:21:46.100280Z",
    "updated_at": "2024-08-17T07:21:46.100280Z",
    "lead_time": 0.743
  },
  {
    "text": "为便于读者建立计算机的整机概念，突出主要矛盾，给出图所示的CPU模型",
    "id": 6251,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7684,
    "created_at": "2024-08-17T07:21:47.220927Z",
    "updated_at": "2024-08-17T07:21:47.221001Z",
    "lead_time": 0.677
  },
  {
    "text": "资源相关所谓资源相关，是指多条指令进入流水线后在同一机器时钟周期内争用同一个功能部件所发生的冲突",
    "id": 6252,
    "label": [
      {
        "start": 28,
        "end": 32,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7685,
    "created_at": "2024-08-17T07:21:49.077215Z",
    "updated_at": "2024-08-17T07:21:49.077215Z",
    "lead_time": 1.384
  },
  {
    "text": "信息从什么地方开始，中间经过哪个寄存器或三态门，最后传送到哪个寄存器，都要加以控制",
    "id": 6253,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "三态门",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7686,
    "created_at": "2024-08-17T07:21:50.934915Z",
    "updated_at": "2024-08-17T07:21:50.934915Z",
    "lead_time": 1.343
  },
  {
    "text": "如此反复多次，直到显示结果满意",
    "id": 6254,
    "annotator": 1,
    "annotation_id": 7687,
    "created_at": "2024-08-17T07:21:51.956196Z",
    "updated_at": "2024-08-17T07:21:51.956196Z",
    "lead_time": 0.465
  },
  {
    "text": "每一行最左边的单元的进位输出决定着商的数值",
    "id": 6255,
    "annotator": 1,
    "annotation_id": 7688,
    "created_at": "2024-08-17T07:21:52.885121Z",
    "updated_at": "2024-08-17T07:21:59.930180Z",
    "lead_time": 4.924
  },
  {
    "text": "正因为如此，硬布线控制器被微程序控制器所取代",
    "id": 6256,
    "label": [
      {
        "start": 6,
        "end": 12,
        "text": "硬布线控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 19,
        "text": "微程序控制器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7689,
    "created_at": "2024-08-17T07:22:01.777053Z",
    "updated_at": "2024-08-17T07:22:01.777053Z",
    "lead_time": 0.605
  },
  {
    "text": "内存又可分为主存和高速缓冲存储器",
    "id": 6257,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 16,
        "text": "高速缓冲存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7690,
    "created_at": "2024-08-17T07:22:02.741423Z",
    "updated_at": "2024-08-17T07:22:02.741423Z",
    "lead_time": 0.485
  },
  {
    "text": "MrC分辨率r越高，颜色深度C越多，刷新存储器容量越大",
    "id": 6258,
    "label": [
      {
        "start": 18,
        "end": 23,
        "text": "刷新存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7691,
    "created_at": "2024-08-17T07:22:03.955048Z",
    "updated_at": "2024-08-17T07:22:03.955048Z",
    "lead_time": 0.676
  },
  {
    "text": "可靠性进一步提高，体积进一步缩小，成本进一步下降，运算速度提高到每秒几十万次至几百万次",
    "id": 6259,
    "annotator": 1,
    "annotation_id": 7692,
    "created_at": "2024-08-17T07:28:58.591262Z",
    "updated_at": "2024-08-17T07:28:58.591262Z",
    "lead_time": 413.782
  },
  {
    "text": "之后撤销写命令WE和CS",
    "id": 6260,
    "annotator": 1,
    "annotation_id": 7693,
    "created_at": "2024-08-17T07:29:00.828321Z",
    "updated_at": "2024-08-17T07:29:00.828321Z",
    "lead_time": 1.826
  },
  {
    "text": "为了判断“溢出”是否发生，可采用两种检测方法",
    "id": 6261,
    "label": [
      {
        "start": 5,
        "end": 7,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7694,
    "created_at": "2024-08-17T07:29:01.967219Z",
    "updated_at": "2024-08-17T07:29:01.967219Z",
    "lead_time": 0.698
  },
  {
    "text": "例如“中”字位于第区位，区位码为",
    "id": 6262,
    "label": [
      {
        "start": 6,
        "end": 7,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 11,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 14,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 5,
        "end": 6,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7695,
    "created_at": "2024-08-17T07:29:02.869503Z",
    "updated_at": "2024-08-17T07:29:02.869503Z",
    "lead_time": 0.481
  },
  {
    "text": "这里我们假定指令系统只有条指令，所以操作码只需位二进制",
    "id": 6263,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7696,
    "created_at": "2024-08-17T07:29:04.321140Z",
    "updated_at": "2024-08-17T07:29:04.321140Z",
    "lead_time": 0.926
  },
  {
    "text": "如图所示五条指令的指令周期，其指令流程可用图来表示",
    "id": 6264,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "指令流",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7697,
    "created_at": "2024-08-17T07:29:38.584479Z",
    "updated_at": "2024-08-17T07:29:38.584479Z",
    "lead_time": 33.748
  },
  {
    "text": "更具体地讲，控制器的任务是从内存中取出解题步骤加以分析，然后执行某种操作",
    "id": 6265,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7698,
    "created_at": "2024-08-17T07:29:41.292628Z",
    "updated_at": "2024-08-17T07:29:41.292628Z",
    "lead_time": 2.275
  },
  {
    "text": "若第一条指令能发射而第二条指令不能发射，则只发射第一条指令，而第二条指令停顿并与新取的指令之一进行配对等待发射，此时原第二条指令作为配对的第一条指令对待",
    "id": 6266,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 62,
        "end": 64,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 72,
        "end": 74,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7699,
    "created_at": "2024-08-17T07:29:43.676409Z",
    "updated_at": "2024-08-17T07:29:43.676409Z",
    "lead_time": 1.943
  },
  {
    "text": "这对用户安装和使用设备很有利",
    "id": 6267,
    "annotator": 1,
    "annotation_id": 7700,
    "created_at": "2024-08-17T07:29:45.047938Z",
    "updated_at": "2024-08-17T07:29:45.047938Z",
    "lead_time": 0.83
  },
  {
    "text": "其结构框图如图所示",
    "id": 6268,
    "annotator": 1,
    "annotation_id": 7701,
    "created_at": "2024-08-17T07:29:45.838594Z",
    "updated_at": "2024-08-17T07:29:45.838594Z",
    "lead_time": 0.377
  },
  {
    "text": "十进制数串在计算机内主要有两种表示形式：字符串形式，即字节存放一个十进制的数位或符号位",
    "id": 6269,
    "label": [
      {
        "start": 27,
        "end": 29,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 39,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 21,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7702,
    "created_at": "2024-08-17T07:29:47.546588Z",
    "updated_at": "2024-08-17T07:29:47.546588Z",
    "lead_time": 1.271
  },
  {
    "text": "奔腾CPU的片内数据cache就采用了写一次法",
    "id": 6270,
    "label": [
      {
        "start": 19,
        "end": 23,
        "text": "写一次法",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 15,
        "text": "数据cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7703,
    "created_at": "2024-08-17T07:29:48.278699Z",
    "updated_at": "2024-08-17T07:29:48.278699Z",
    "lead_time": 0.147
  },
  {
    "text": "表列出了比较典型而常用的寻址方式，而图画出了它们形成有效地址的示意图",
    "id": 6271,
    "label": [
      {
        "start": 26,
        "end": 30,
        "text": "有效地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7704,
    "created_at": "2024-08-17T07:29:49.347179Z",
    "updated_at": "2024-08-17T07:29:49.347179Z",
    "lead_time": 0.414
  },
  {
    "text": "在向量中断方式中，每个中断源都对应一个中断服务程序，而中断服务程序的入口地址被称为中断向量",
    "id": 6272,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 25,
        "text": "中断服务程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 27,
        "end": 33,
        "text": "中断服务程序",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 41,
        "end": 45,
        "text": "中断向量",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 1,
        "end": 7,
        "text": "向量中断方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7705,
    "created_at": "2024-08-17T07:30:08.449005Z",
    "updated_at": "2024-08-17T07:30:08.449005Z",
    "lead_time": 18.521
  },
  {
    "text": "在决定方案时，需要考虑数据传送的方便性和操作速度，在微型机和单片机中还要考虑在硅片上制作总线的工艺",
    "id": 6273,
    "label": [
      {
        "start": 26,
        "end": 29,
        "text": "微型机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "单片机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 40,
        "text": "硅",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7706,
    "created_at": "2024-08-17T07:30:11.530366Z",
    "updated_at": "2024-08-17T07:30:11.530366Z",
    "lead_time": 2.51
  },
  {
    "text": "CPU不能直接访问外存储器，外存储器的信息必须调入内存储器后才能由CPU处理",
    "id": 6274,
    "label": [
      {
        "start": 25,
        "end": 29,
        "text": "内存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7707,
    "created_at": "2024-08-17T07:30:12.681200Z",
    "updated_at": "2024-08-17T07:30:12.681200Z",
    "lead_time": 0.651
  },
  {
    "text": "目前CPU中的通用寄存器，可多达个，甚至更多",
    "id": 6275,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7708,
    "created_at": "2024-08-17T07:30:13.520135Z",
    "updated_at": "2024-08-17T07:30:13.520135Z",
    "lead_time": 0.39
  },
  {
    "text": "中断服务子程序最后的IRET指令使中断返回",
    "id": 6276,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7709,
    "created_at": "2024-08-17T07:30:14.507157Z",
    "updated_at": "2024-08-17T07:30:14.507157Z",
    "lead_time": 0.589
  },
  {
    "text": "根据存储元工作原理和制造工艺的不同，闪存可以分为NOR技术、DINOR技术、AND技术和NAND技术等不同类别",
    "id": 6277,
    "label": [
      {
        "start": 18,
        "end": 20,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "AND",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "AND",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "存储元",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7710,
    "created_at": "2024-08-17T07:30:15.233364Z",
    "updated_at": "2024-08-17T07:30:15.233364Z",
    "lead_time": 0.294
  },
  {
    "text": "当设备要求使用总线时，便发出该设备的请求信号",
    "id": 6278,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7711,
    "created_at": "2024-08-17T07:30:15.989824Z",
    "updated_at": "2024-08-17T07:30:15.989824Z",
    "lead_time": 0.301
  },
  {
    "text": "程序查询方式和程序中断方式适用于数据传输率比较低的外围设备，而DMA方式、通道方式和IOP方式适用于数据传输率比较高的设备",
    "id": 6279,
    "label": [
      {
        "start": 25,
        "end": 29,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "OP",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "程序查询方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 13,
        "text": "程序中断方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7712,
    "created_at": "2024-08-17T07:30:16.689366Z",
    "updated_at": "2024-08-17T07:30:28.849649Z",
    "lead_time": 10.737
  },
  {
    "text": "为了解决这些矛盾，人们找到了补码表示法",
    "id": 6280,
    "label": [
      {
        "start": 14,
        "end": 19,
        "text": "补码表示法",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7713,
    "created_at": "2024-08-17T07:30:33.692052Z",
    "updated_at": "2024-08-17T07:30:33.692052Z",
    "lead_time": 2.003
  },
  {
    "text": "主轴系统的作用是安装盘片，并驱动它们以额定转速稳定旋转",
    "id": 6281,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "盘片",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7714,
    "created_at": "2024-08-17T07:30:34.658049Z",
    "updated_at": "2024-08-17T07:30:34.658272Z",
    "lead_time": 0.53
  },
  {
    "text": "不同的指令系统采用不同的方式指定寻址方式",
    "id": 6282,
    "label": [
      {
        "start": 16,
        "end": 20,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7715,
    "created_at": "2024-08-17T07:30:35.690645Z",
    "updated_at": "2024-08-17T07:30:35.690645Z",
    "lead_time": 0.495
  },
  {
    "text": "这在超标量流水中十分有用",
    "id": 6283,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "超标量流水",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7716,
    "created_at": "2024-08-17T07:30:41.779413Z",
    "updated_at": "2024-08-17T07:30:41.779413Z",
    "lead_time": 5.58
  },
  {
    "text": "转移预测法硬件方法来实现，依据指令过去的行为来预测将来的行为",
    "id": 6284,
    "label": [
      {
        "start": 5,
        "end": 7,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "转移预测",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7717,
    "created_at": "2024-08-17T07:30:43.764441Z",
    "updated_at": "2024-08-17T07:30:43.764441Z",
    "lead_time": 1.496
  },
  {
    "text": "处理机流水线又称为宏流水线，是指程序步骤的并行",
    "id": 6285,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "处理机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7718,
    "created_at": "2024-08-17T07:31:29.896147Z",
    "updated_at": "2024-08-17T07:31:29.896147Z",
    "lead_time": 45.591
  },
  {
    "text": "由一串级联的处理机构成流水线的各个过程段，每台处理机负责某一特定的任务",
    "id": 6286,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "处理机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "处理机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7719,
    "created_at": "2024-08-17T07:31:32.214411Z",
    "updated_at": "2024-08-17T07:31:32.215411Z",
    "lead_time": 1.861
  },
  {
    "text": "由于自动刷新不需要给出列地址，而行地址由片内刷新计数器自动生成，故可利用CAS信号先于RAS信号有效来启动一次刷新操作，此时地址线上的地址无效",
    "id": 6287,
    "label": [
      {
        "start": 62,
        "end": 65,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "RAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "行地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "CAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "列地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 67,
        "end": 69,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7720,
    "created_at": "2024-08-17T07:31:46.694467Z",
    "updated_at": "2024-08-17T07:31:46.694467Z",
    "lead_time": 13.796
  },
  {
    "text": "由此，我们可以得出如下结论：当以变形补码运算，运算结果的二符号位相异时，表示溢出；相同时，表示未溢出",
    "id": 6288,
    "label": [
      {
        "start": 16,
        "end": 20,
        "text": "变形补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 48,
        "end": 50,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7721,
    "created_at": "2024-08-17T07:32:23.451088Z",
    "updated_at": "2024-08-17T07:32:23.451088Z",
    "lead_time": 36.278
  },
  {
    "text": "字符显示显示字符的方法以点阵为基础",
    "id": 6289,
    "label": [
      {
        "start": 12,
        "end": 14,
        "text": "点阵",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7722,
    "created_at": "2024-08-17T07:32:29.041331Z",
    "updated_at": "2024-08-17T07:32:29.041331Z",
    "lead_time": 5.154
  },
  {
    "text": "为了实现流水，首先把输入的任务或过程分割为一系列子任务，并使各子任务能在流水线的各个阶段并发地执行",
    "id": 6290,
    "label": [
      {
        "start": 36,
        "end": 39,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "并发",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "流水",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7723,
    "created_at": "2024-08-17T07:32:34.054286Z",
    "updated_at": "2024-08-17T07:32:34.054286Z",
    "lead_time": 4.588
  },
  {
    "text": "如果地址匹配且在CE之前有效，片上的控制逻辑在CEL和CER之间进行判断来选择端口CE判断",
    "id": 6291,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7724,
    "created_at": "2024-08-17T07:32:35.948193Z",
    "updated_at": "2024-08-17T07:32:35.948193Z",
    "lead_time": 1.39
  },
  {
    "text": "根据产生图形的方法，分随机扫描图形显示器和光栅扫描图形显示器",
    "id": 6292,
    "label": [
      {
        "start": 15,
        "end": 20,
        "text": "图形显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 25,
        "end": 30,
        "text": "图形显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "随机扫描",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "光栅扫描",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7725,
    "created_at": "2024-08-17T07:32:50.719376Z",
    "updated_at": "2024-08-17T07:32:50.719376Z",
    "lead_time": 14.311
  },
  {
    "text": "SDRAM的控制方式下面以读周期为例说明SDRAM的控制方式",
    "id": 6293,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "读周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 25,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7726,
    "created_at": "2024-08-17T07:33:41.137040Z",
    "updated_at": "2024-08-17T07:33:41.137040Z",
    "lead_time": 49.828
  },
  {
    "text": "微处理器演变中的另一个主要进步是年出现的Intel，这是第一个位微处理器，它比复杂一倍",
    "id": 6294,
    "label": [
      {
        "start": 20,
        "end": 25,
        "text": "Intel",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "微处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "微处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 32,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7727,
    "created_at": "2024-08-17T07:33:42.154832Z",
    "updated_at": "2024-08-17T07:33:42.154832Z",
    "lead_time": 0.356
  },
  {
    "text": "控制接口模块靠指令信息来控制外围设备的动作，如启动、关闭设备等",
    "id": 6295,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7728,
    "created_at": "2024-08-17T07:33:53.754792Z",
    "updated_at": "2024-08-17T07:33:53.754792Z",
    "lead_time": 1.914
  },
  {
    "text": "但是，随着软件复杂度的提高、多媒体技术和网络技术的普及，对存储器容量的要求不断提高",
    "id": 6296,
    "label": [
      {
        "start": 29,
        "end": 32,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7729,
    "created_at": "2024-08-17T07:33:55.993333Z",
    "updated_at": "2024-08-17T07:33:55.993333Z",
    "lead_time": 1.444
  },
  {
    "text": "指令执行流程前面在介绍微程序控制器时曾提到，一个机器指令对应一个微程序，而一个微指令周期则对应一个节拍电位时间",
    "id": 6297,
    "label": [
      {
        "start": 49,
        "end": 53,
        "text": "节拍电位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 17,
        "text": "微程序控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 44,
        "text": "微指令周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7730,
    "created_at": "2024-08-17T07:34:27.228100Z",
    "updated_at": "2024-08-17T07:34:27.228100Z",
    "lead_time": 30.442
  },
  {
    "text": "一种是图所示的简单图像显示器，它仅仅显示由计算机送来的数字图像",
    "id": 6298,
    "label": [
      {
        "start": 9,
        "end": 14,
        "text": "图像显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7731,
    "created_at": "2024-08-17T07:34:31.250150Z",
    "updated_at": "2024-08-17T07:34:31.250150Z",
    "lead_time": 2.971
  },
  {
    "text": "但是随着ULSI技术的发展和对机器速度的要求，硬布线逻辑设计思想又得到了重视",
    "id": 6299,
    "annotator": 1,
    "annotation_id": 7732,
    "created_at": "2024-08-17T07:34:39.663935Z",
    "updated_at": "2024-08-17T07:34:39.663935Z",
    "lead_time": 7.648
  },
  {
    "text": "CPU识别中断类型取得中断向量号的途径有三种：指令给出，如软件中断指令INTn中的n即为中断向量号",
    "id": 6300,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 11,
        "end": 16,
        "text": "中断向量号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 44,
        "end": 49,
        "text": "中断向量号",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7733,
    "created_at": "2024-08-17T07:35:26.267224Z",
    "updated_at": "2024-08-17T07:35:26.267224Z",
    "lead_time": 46.095
  },
  {
    "text": "而尾数右移虽引起最低有效位的丢失，但造成的误差较小",
    "id": 6301,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "右移",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "有效位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7734,
    "created_at": "2024-08-17T07:35:28.226925Z",
    "updated_at": "2024-08-17T07:35:28.226925Z",
    "lead_time": 1.373
  },
  {
    "text": "此逻辑表达式可用异或门实现",
    "id": 6302,
    "label": [
      {
        "start": 1,
        "end": 6,
        "text": "逻辑表达式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "异或门",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7735,
    "created_at": "2024-08-17T07:35:41.150053Z",
    "updated_at": "2024-08-17T07:35:41.150053Z",
    "lead_time": 12.317
  },
  {
    "text": "在DRAM阵列的行中，此地址指定行的全部位数据被读取到SRAM中暂存",
    "id": 6303,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 21,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7736,
    "created_at": "2024-08-17T07:35:43.967166Z",
    "updated_at": "2024-08-17T07:35:43.967166Z",
    "lead_time": 2.091
  },
  {
    "text": "当采用EPROM作为控制存储器时，还可以通过改变微指令和微程序来改变机器的指令系统，这种微程序设计技术称为动态微程序设计",
    "id": 6304,
    "label": [
      {
        "start": 53,
        "end": 58,
        "text": "动态微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 44,
        "end": 49,
        "text": "微程序设计",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 3,
        "end": 8,
        "text": "EPROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 15,
        "text": "控制存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 37,
        "end": 41,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7737,
    "created_at": "2024-08-17T07:35:44.781815Z",
    "updated_at": "2024-08-17T07:35:44.781815Z",
    "lead_time": 0.157
  },
  {
    "text": "位线性地址分为高位的页号和低位的页内偏移量两个字段",
    "id": 6305,
    "label": [
      {
        "start": 16,
        "end": 21,
        "text": "页内偏移量",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "线性地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "页号",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 1,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 9,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 15,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7738,
    "created_at": "2024-08-17T07:35:45.565090Z",
    "updated_at": "2024-08-17T07:35:45.566122Z",
    "lead_time": 0.081
  },
  {
    "text": "在完成yaxbc的计算过程中，用到了什么东西呢首先，用到了带横格且编有序号的纸，把原始的数据及解题步骤记录在纸上，即纸“存储”了算题的原始信息",
    "id": 6306,
    "annotator": 1,
    "annotation_id": 7739,
    "created_at": "2024-08-17T07:35:46.394080Z",
    "updated_at": "2024-08-17T07:35:46.394080Z",
    "lead_time": 0.137
  },
  {
    "text": "图b表示写操作：高功率激光束照射加热点记录点，磁头线圈中外加电流后产生的磁场使其对应的记录点产生相反的磁性微粒，从而写入“”",
    "id": 6307,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7740,
    "created_at": "2024-08-17T07:35:47.058071Z",
    "updated_at": "2024-08-17T07:35:47.058071Z",
    "lead_time": 0.074
  },
  {
    "text": "指令派遣单元总是发出单一地址，然后从指令cache取出此地址及下一地址的两条指令",
    "id": 6308,
    "label": [
      {
        "start": 18,
        "end": 25,
        "text": "指令cache",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7741,
    "created_at": "2024-08-17T07:35:47.933334Z",
    "updated_at": "2024-08-17T07:35:47.933334Z",
    "lead_time": 0.089
  },
  {
    "text": "由于大多数IO设备是旋转性的设备，读写信号具有实时性，不及时处理会丢失数据，所以通道与CPU同时要求访存储器时，通道优先权高于CPU",
    "id": 6309,
    "label": [
      {
        "start": 51,
        "end": 54,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 63,
        "end": 66,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7742,
    "created_at": "2024-08-17T07:35:48.964752Z",
    "updated_at": "2024-08-17T07:35:48.964752Z",
    "lead_time": 0.116
  },
  {
    "text": "这种IOP可应用于服务器及微型计算机中",
    "id": 6310,
    "label": [
      {
        "start": 13,
        "end": 18,
        "text": "微型计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "OP",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7743,
    "created_at": "2024-08-17T07:35:50.691142Z",
    "updated_at": "2024-08-17T07:35:50.691142Z",
    "lead_time": 1.073
  },
  {
    "text": "由于不同的计算机其指令系统也不同，所以人们使用计算机时必须先花很多时间熟悉这台机器的指令系统，然后再用它的符号语言来编写程序，因此还是很不方便，节省的人力时间也有限",
    "id": 6311,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 46,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 60,
        "end": 62,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7744,
    "created_at": "2024-08-17T07:35:53.444096Z",
    "updated_at": "2024-08-17T07:35:53.444096Z",
    "lead_time": 1.786
  },
  {
    "text": "MIPSR指令格式MIPSR是世纪年代后期推出的RISC系统，字长位，字节寻址",
    "id": 6312,
    "label": [
      {
        "start": 35,
        "end": 39,
        "text": "字节寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "MIPS",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "MIPS",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "RISC",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "字长位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7745,
    "created_at": "2024-08-17T07:35:54.412377Z",
    "updated_at": "2024-08-17T07:35:54.412377Z",
    "lead_time": 0.119
  },
  {
    "text": "专用计算机是针对某一任务设计的计算机，一般来说，其结构要比通用计算机简单",
    "id": 6313,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "专用计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 34,
        "text": "通用计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7746,
    "created_at": "2024-08-17T07:35:55.569008Z",
    "updated_at": "2024-08-17T07:35:55.569008Z",
    "lead_time": 0.111
  },
  {
    "text": "这种指令字结构灵活，能充分利用指令长度，但指令的控制较复杂",
    "id": 6314,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "指令字",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7747,
    "created_at": "2024-08-17T07:35:56.948899Z",
    "updated_at": "2024-08-17T07:35:56.948899Z",
    "lead_time": 0.144
  },
  {
    "text": "SDRAM的操作时序都是确定的，在系统时钟控制下，CPU向SDRAM送出地址和控制命令后，需等待事先确定好的一定数量的时钟周期",
    "id": 6315,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 29,
        "end": 34,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 59,
        "end": 63,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7748,
    "created_at": "2024-08-17T07:35:58.008251Z",
    "updated_at": "2024-08-17T07:35:58.008251Z",
    "lead_time": 0.149
  },
  {
    "text": "其中CPU按流水线方式组织，通常由三大部分组成：指令部件、指令队列、执行部件",
    "id": 6316,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "指令队列",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7749,
    "created_at": "2024-08-17T07:35:59.401650Z",
    "updated_at": "2024-08-17T07:35:59.401650Z",
    "lead_time": 0.371
  },
  {
    "text": "另外，图中左边还表示出单符号位法的溢出检测逻辑：当CnCn时，运算无溢出；而当CnCn时，运算有溢出，经异或门产生溢出信号",
    "id": 6317,
    "label": [
      {
        "start": 11,
        "end": 16,
        "text": "单符号位法",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 52,
        "end": 55,
        "text": "异或门",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 48,
        "end": 50,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 57,
        "end": 59,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7750,
    "created_at": "2024-08-17T07:36:00.633149Z",
    "updated_at": "2024-08-17T07:36:00.633149Z",
    "lead_time": 0.144
  },
  {
    "text": "PCI总线命令类型如表所示",
    "id": 6318,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7751,
    "created_at": "2024-08-17T07:36:01.878622Z",
    "updated_at": "2024-08-17T07:36:01.878622Z",
    "lead_time": 0.101
  },
  {
    "text": "DRAM读写校验DRAM通常用作主存储器，其读写操作的正确性与可靠性至关重要",
    "id": 6319,
    "label": [
      {
        "start": 16,
        "end": 20,
        "text": "主存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7752,
    "created_at": "2024-08-17T07:36:02.907147Z",
    "updated_at": "2024-08-17T07:36:02.907147Z",
    "lead_time": 0.287
  },
  {
    "text": "以此类推，直到乘数各位乘完为止，最后将它们统统加起来，便得到最后乘积z",
    "id": 6320,
    "label": [
      {
        "start": 10,
        "end": 11,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7753,
    "created_at": "2024-08-17T07:36:04.873230Z",
    "updated_at": "2024-08-17T07:36:04.873230Z",
    "lead_time": 1.14
  },
  {
    "text": "以这种编码，每个字符被表示成唯一的位代码，共有个可表示字符，加上最高位b用作奇偶校验，因此每个字符总是以位的字节来存储和传送",
    "id": 6321,
    "label": [
      {
        "start": 38,
        "end": 42,
        "text": "奇偶校验",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "最高位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 54,
        "end": 56,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 17,
        "end": 18,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 52,
        "end": 53,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 9,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 27,
        "end": 28,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 47,
        "end": 48,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7754,
    "created_at": "2024-08-17T07:36:05.788989Z",
    "updated_at": "2024-08-17T07:36:05.788989Z",
    "lead_time": 0.147
  },
  {
    "text": "与直接控制法相比，字段译码控制法可使微指令字大大缩短，但由于增加译码电路，使微程序的执行速度稍稍减慢",
    "id": 6322,
    "label": [
      {
        "start": 32,
        "end": 36,
        "text": "译码电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "字段译码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 21,
        "end": 22,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7755,
    "created_at": "2024-08-17T07:36:09.626378Z",
    "updated_at": "2024-08-17T07:36:09.626378Z",
    "lead_time": 2.946
  },
  {
    "text": "对于负逻辑操作数来说，正好相反",
    "id": 6323,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "逻辑操作",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7756,
    "created_at": "2024-08-17T07:36:11.452473Z",
    "updated_at": "2024-08-17T07:36:11.452473Z",
    "lead_time": 1.037
  },
  {
    "text": "高档微机采用位长度的单字长形式",
    "id": 6324,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "高档微机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "字长",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 7,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7757,
    "created_at": "2024-08-17T07:38:50.823063Z",
    "updated_at": "2024-08-17T07:38:50.823063Z",
    "lead_time": 158.485
  },
  {
    "text": "从预置开始，一直到这个数据块传送结束，DMA控制器只为所选设备服务",
    "id": 6325,
    "label": [
      {
        "start": 19,
        "end": 25,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7758,
    "created_at": "2024-08-17T07:38:52.855176Z",
    "updated_at": "2024-08-17T07:38:52.855176Z",
    "lead_time": 1.196
  },
  {
    "text": "增加的附加位也要同数据位一起写入DRAM中保存",
    "id": 6326,
    "label": [
      {
        "start": 16,
        "end": 20,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "数据位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 5,
        "end": 6,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7759,
    "created_at": "2024-08-17T07:38:55.337929Z",
    "updated_at": "2024-08-17T07:38:55.337929Z",
    "lead_time": 1.718
  },
  {
    "text": "数据相关在一个程序中，如果必须等前一条指令执行完毕后，才能执行后一条指令，那么这两条指令就是数据相关的",
    "id": 6327,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "数据相关",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 46,
        "end": 50,
        "text": "数据相关",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7760,
    "created_at": "2024-08-17T07:42:17.194521Z",
    "updated_at": "2024-08-17T07:42:17.194521Z",
    "lead_time": 201.289
  },
  {
    "text": "微程序设计技术是利用软件方法设计操作控制器的一门技术，具有规整性、灵活性、可维护性等一系列优点，因而在计算机设计中得到了广泛应用",
    "id": 6328,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 16,
        "end": 21,
        "text": "操作控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "微程序设计",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 51,
        "end": 54,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7761,
    "created_at": "2024-08-17T07:42:18.964288Z",
    "updated_at": "2024-08-17T07:42:18.964288Z",
    "lead_time": 1.135
  },
  {
    "text": "由几片大规模集成电路组成的微型计算机开始出现",
    "id": 6329,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "集成电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 18,
        "text": "微型计算机",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7762,
    "created_at": "2024-08-17T07:42:22.588168Z",
    "updated_at": "2024-08-17T07:42:22.588168Z",
    "lead_time": 2.843
  },
  {
    "text": "如果该表项的有效位为，则产生缺段中断，从辅存中调入该段，并修改段表",
    "id": 6330,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "有效位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "段表",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7763,
    "created_at": "2024-08-17T07:42:24.595176Z",
    "updated_at": "2024-08-17T07:42:24.595176Z",
    "lead_time": 1.223
  },
  {
    "text": "它们直接登记在IVT表中，每个中断向量号对应一个中断服务子程序入口地址",
    "id": 6331,
    "label": [
      {
        "start": 24,
        "end": 26,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 20,
        "text": "中断向量号",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7764,
    "created_at": "2024-08-17T07:42:26.356325Z",
    "updated_at": "2024-08-17T07:42:34.541964Z",
    "lead_time": 5.569999999999999
  },
  {
    "text": "每个磁芯的一种磁化方向代表一个，另一个磁化方向则代表一个",
    "id": 6332,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "磁芯",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7765,
    "created_at": "2024-08-17T07:42:38.753074Z",
    "updated_at": "2024-08-17T07:42:38.753074Z",
    "lead_time": 0.539
  },
  {
    "text": "根据需要，这些时间间隔可以相等，也可以不相等",
    "id": 6333,
    "annotator": 1,
    "annotation_id": 7766,
    "created_at": "2024-08-17T07:42:40.050118Z",
    "updated_at": "2024-08-17T07:42:40.050118Z",
    "lead_time": 0.604
  },
  {
    "text": "与PCI总线相比，PCIe总线的主要改进有如下几点",
    "id": 6334,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "PCI",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 15,
        "text": "PCIe总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7767,
    "created_at": "2024-08-17T07:42:44.857124Z",
    "updated_at": "2024-08-17T07:42:44.857124Z",
    "lead_time": 4.27
  },
  {
    "text": "主存与cache的地址映射有全相联、直接、组相联三种方式",
    "id": 6335,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 8,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "地址映射",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "全相联",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "组相联",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7768,
    "created_at": "2024-08-17T07:44:26.687344Z",
    "updated_at": "2024-08-17T07:44:26.687344Z",
    "lead_time": 101.189
  },
  {
    "text": "通过“桥”芯片，上面与更高速的CPU总线相连，下面与低速的ISA总线相接",
    "id": 6336,
    "label": [
      {
        "start": 29,
        "end": 34,
        "text": "ISA总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 20,
        "text": "CPU总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 4,
        "text": "桥",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7769,
    "created_at": "2024-08-17T07:44:27.919094Z",
    "updated_at": "2024-08-17T07:44:27.919094Z",
    "lead_time": 0.509
  },
  {
    "text": "一旦控制部件构成后，除非重新设计和物理上对它重新布线，否则要想增加新的控制功能是不可能的",
    "id": 6337,
    "annotator": 1,
    "annotation_id": 7770,
    "created_at": "2024-08-17T07:44:29.163340Z",
    "updated_at": "2024-08-17T07:44:29.163340Z",
    "lead_time": 0.529
  },
  {
    "text": "平均而言，所有指令的执行时间为一个处理时钟周期",
    "id": 6338,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "执行时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7771,
    "created_at": "2024-08-17T07:44:30.873671Z",
    "updated_at": "2024-08-17T07:44:30.873671Z",
    "lead_time": 1.167
  },
  {
    "text": "因而其读操作与传统ROM完全兼容",
    "id": 6339,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "读操作",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7772,
    "created_at": "2024-08-17T07:44:33.189255Z",
    "updated_at": "2024-08-17T07:44:33.189255Z",
    "lead_time": 1.777
  },
  {
    "text": "这就相当于我们把表所示的横格纸的内容原封不动地搬到存储器，因而所编的程序如表所示",
    "id": 6340,
    "label": [
      {
        "start": 25,
        "end": 28,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7773,
    "created_at": "2024-08-17T07:45:31.933224Z",
    "updated_at": "2024-08-17T07:45:31.933224Z",
    "lead_time": 57.978
  },
  {
    "text": "检查状态字中的标志，看看数据交换是否可以进行",
    "id": 6341,
    "label": [
      {
        "start": 4,
        "end": 5,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7774,
    "created_at": "2024-08-17T07:45:33.390199Z",
    "updated_at": "2024-08-17T07:45:33.390199Z",
    "lead_time": 0.79
  },
  {
    "text": "存储器带宽单位时间内从存储器读出的二进制数信息量，一般用字节数秒表示",
    "id": 6342,
    "label": [
      {
        "start": 11,
        "end": 15,
        "text": "存储器读",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "带宽",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7775,
    "created_at": "2024-08-17T07:45:40.091469Z",
    "updated_at": "2024-08-17T07:45:40.091469Z",
    "lead_time": 5.92
  },
  {
    "text": "指令中的操作数称为立即数",
    "id": 6343,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "立即数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7776,
    "created_at": "2024-08-17T07:46:34.561141Z",
    "updated_at": "2024-08-17T07:46:34.561141Z",
    "lead_time": 53.794
  },
  {
    "text": "表中列出了RISC与CISC的主要特征对比",
    "id": 6344,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "CISC",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "RISC",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7777,
    "created_at": "2024-08-17T07:46:39.925139Z",
    "updated_at": "2024-08-17T07:46:39.925139Z",
    "lead_time": 4.858
  },
  {
    "text": "尾数处理浮点加减法对结果的规格化及舍入处理也适用于浮点乘除法",
    "id": 6345,
    "label": [
      {
        "start": 17,
        "end": 21,
        "text": "舍入处理",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "规格化",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7778,
    "created_at": "2024-08-17T07:47:19.167800Z",
    "updated_at": "2024-08-17T07:47:19.167800Z",
    "lead_time": 38.69
  },
  {
    "text": "桥芯片在此起到了信号速度缓冲、电平转换和控制协议的转换作用",
    "id": 6346,
    "label": [
      {
        "start": 1,
        "end": 3,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "电平",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 1,
        "text": "桥",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7779,
    "created_at": "2024-08-17T07:47:20.789956Z",
    "updated_at": "2024-08-17T07:47:20.789956Z",
    "lead_time": 0.852
  },
  {
    "text": "EX段执行的结果在WB段写回寄存器堆，WB段只需时钟周期的一半",
    "id": 6347,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "寄存器堆",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7780,
    "created_at": "2024-08-17T07:47:47.526412Z",
    "updated_at": "2024-08-17T07:47:47.526412Z",
    "lead_time": 26.152
  },
  {
    "text": "由于数据传输率很高，所以在数据传送期间只为一台设备服务是合理的",
    "id": 6348,
    "annotator": 1,
    "annotation_id": 7781,
    "created_at": "2024-08-17T07:48:56.927886Z",
    "updated_at": "2024-08-17T07:48:56.927886Z",
    "lead_time": 68.888
  },
  {
    "text": "中断可以用于处理常见的硬件故障，如掉电、校验错、运算出错等；也可以处理常见的软件故障，如溢出、地址越界、非法指令等",
    "id": 6349,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 54,
        "end": 56,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7782,
    "created_at": "2024-08-17T07:51:44.209079Z",
    "updated_at": "2024-08-17T07:51:44.209079Z",
    "lead_time": 166.793
  },
  {
    "text": "由中断描述符表寄存器IDTR来指示IDT的内存地址",
    "id": 6350,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "内存地址",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7783,
    "created_at": "2024-08-17T07:52:30.781149Z",
    "updated_at": "2024-08-17T07:52:30.781149Z",
    "lead_time": 46.047
  },
  {
    "text": "即在nFRAME变为有效和目标地址送上AD线后，目标方在延迟一个时钟周期后必须以nDEVSEL信号有效予以响应",
    "id": 6351,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "FRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "目标地址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7784,
    "created_at": "2024-08-17T07:52:45.654261Z",
    "updated_at": "2024-08-17T07:52:45.654261Z",
    "lead_time": 14.38
  },
  {
    "text": "cache结构设计必须解决的问题从cache的基本工作原理可以看出，cache的设计需要遵循两个原则：一是希望cache的命中率尽可能高，实际应接近于；二是希望cache对CPU而言是透明的，即不论是否有cache，CPU访存的方法都是一样的，软件不需增加任何指令就可以访问cache",
    "id": 6352,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 22,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 34,
        "end": 39,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 55,
        "end": 60,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 80,
        "end": 85,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 102,
        "end": 107,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 137,
        "end": 142,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 86,
        "end": 89,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 108,
        "end": 111,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 61,
        "end": 64,
        "text": "命中率",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 130,
        "end": 132,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 122,
        "end": 124,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7785,
    "created_at": "2024-08-17T07:52:49.679836Z",
    "updated_at": "2024-08-17T07:52:49.679836Z",
    "lead_time": 3.493
  },
  {
    "text": "数码音频磁带DATDAT是数码音频磁带的英文缩写，它采用旋转扫描技术",
    "id": 6353,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7786,
    "created_at": "2024-08-17T07:52:52.505738Z",
    "updated_at": "2024-08-17T07:52:52.505738Z",
    "lead_time": 2.239
  },
  {
    "text": "而哈佛型计算机中指令寻址和数据寻址是独立进行的",
    "id": 6354,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7787,
    "created_at": "2024-08-17T07:53:00.807172Z",
    "updated_at": "2024-08-17T07:53:00.807172Z",
    "lead_time": 7.801
  },
  {
    "text": "而单片机是只用一片集成电路做成的计算机，体积小，结构简单，性能指标较低，价格便宜",
    "id": 6355,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "单片机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "性能指标",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "集成电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7788,
    "created_at": "2024-08-17T07:53:03.069187Z",
    "updated_at": "2024-08-17T07:53:03.069187Z",
    "lead_time": 1.736
  },
  {
    "text": "上述存储模块具有高速的突发存取能力",
    "id": 6356,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "存储模块",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7789,
    "created_at": "2024-08-17T07:53:58.911200Z",
    "updated_at": "2024-08-17T07:53:58.911200Z",
    "lead_time": 55.3
  },
  {
    "text": "图中，字母符号下标中L表示左端口，R表示右端口，LB表示低位字节，UB表示高位字节",
    "id": 6357,
    "label": [
      {
        "start": 37,
        "end": 41,
        "text": "高位字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "低位字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7790,
    "created_at": "2024-08-17T07:54:02.952001Z",
    "updated_at": "2024-08-17T07:54:02.952001Z",
    "lead_time": 3.507
  },
  {
    "text": "数据条带以轮转方式映射到连续的阵列磁盘中",
    "id": 6358,
    "label": [
      {
        "start": 17,
        "end": 19,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7791,
    "created_at": "2024-08-17T07:54:04.036607Z",
    "updated_at": "2024-08-17T07:54:04.036607Z",
    "lead_time": 0.543
  },
  {
    "text": "软中断不是随机发生的，而是与子程序调用功能相似，但其调用接口简单，不依赖于程序入口地址，便于软件的升级维护和调用",
    "id": 6359,
    "label": [
      {
        "start": 1,
        "end": 3,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7792,
    "created_at": "2024-08-17T07:54:11.753116Z",
    "updated_at": "2024-08-17T07:54:11.753116Z",
    "lead_time": 7.223
  },
  {
    "text": "直接内存访问DMA，是一种完全由硬件执行IO交换的工作方式",
    "id": 6360,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "直接内存访问",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7793,
    "created_at": "2024-08-17T07:54:30.170595Z",
    "updated_at": "2024-08-17T07:54:30.170595Z",
    "lead_time": 17.811
  },
  {
    "text": "图像处理操作在计算机中完成，显示器不做任何处理",
    "id": 6361,
    "label": [
      {
        "start": 14,
        "end": 17,
        "text": "显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "图像处理",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7794,
    "created_at": "2024-08-17T07:54:32.187350Z",
    "updated_at": "2024-08-17T07:54:32.187350Z",
    "lead_time": 1.444
  },
  {
    "text": "不同的磁化状态，所产生的感应电势方向不同",
    "id": 6362,
    "annotator": 1,
    "annotation_id": 7795,
    "created_at": "2024-08-17T07:54:33.238015Z",
    "updated_at": "2024-08-17T07:54:33.238015Z",
    "lead_time": 0.524
  },
  {
    "text": "这是补码加法的理论基础",
    "id": 6363,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7796,
    "created_at": "2024-08-17T07:54:34.450895Z",
    "updated_at": "2024-08-17T07:54:34.450895Z",
    "lead_time": 0.701
  },
  {
    "text": "将外设的中断请求和通道本身的中断请求，按次序及时报告CPU",
    "id": 6364,
    "label": [
      {
        "start": 26,
        "end": 29,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7797,
    "created_at": "2024-08-17T07:54:57.306512Z",
    "updated_at": "2024-08-17T07:54:57.306512Z",
    "lead_time": 22.229
  },
  {
    "text": "最简便的方法，是只要尾数最低位为，或移出的几位中有为的数值位，就使最低位的值为",
    "id": 6365,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 15,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 23,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 35,
        "end": 36,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7798,
    "created_at": "2024-08-17T07:55:02.653972Z",
    "updated_at": "2024-08-17T07:55:02.653972Z",
    "lead_time": 4.699
  },
  {
    "text": "此时由原码表示法变成补码表示法的规则如下：原码符号位为不变，整数的每一位二进制数位求反得到反码；反码符号位为不变，反码数值位最低位加，得到补码",
    "id": 6366,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "原码表示法",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 50,
        "end": 53,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "反码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 48,
        "end": 50,
        "text": "反码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 57,
        "end": 59,
        "text": "反码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 69,
        "end": 71,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "原码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 35,
        "end": 36,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 40,
        "end": 41,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 61,
        "end": 62,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 64,
        "end": 65,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7799,
    "created_at": "2024-08-17T07:55:04.273679Z",
    "updated_at": "2024-08-17T07:55:04.273679Z",
    "lead_time": 1.013
  },
  {
    "text": "当需要替换时，比较各特定行的计数值，将计数值最大的行换出",
    "id": 6367,
    "annotator": 1,
    "annotation_id": 7800,
    "created_at": "2024-08-17T07:55:05.500312Z",
    "updated_at": "2024-08-17T07:55:05.500312Z",
    "lead_time": 0.576
  },
  {
    "text": "接口电路中有一个工作标志触发器BS，就绪标志触发器RD，还有一个控制触发器，称为允许中断触发器EI",
    "id": 6368,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 44,
        "end": 47,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7801,
    "created_at": "2024-08-17T07:55:08.218245Z",
    "updated_at": "2024-08-17T07:55:08.218245Z",
    "lead_time": 2.176
  },
  {
    "text": "从SRAM读出时，个输出缓冲器被打开，个输入缓冲器被关闭，读出的数据送到条IO数据线上",
    "id": 6369,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "缓冲器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7802,
    "created_at": "2024-08-17T07:55:10.157810Z",
    "updated_at": "2024-08-17T07:55:10.157810Z",
    "lead_time": 1.38
  },
  {
    "text": "对正逻辑操作数来说，算术运算称高电平操作，逻辑运算称正逻辑操作即高电平为“”，低电平为“”",
    "id": 6370,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "算术运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "逻辑操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "逻辑操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "逻辑运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "低电平",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "高电平",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "高电平",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7803,
    "created_at": "2024-08-17T07:55:11.739921Z",
    "updated_at": "2024-08-17T07:55:11.739921Z",
    "lead_time": 0.988
  },
  {
    "text": "这样，读取个位字只使用了个总线时钟周期",
    "id": 6371,
    "label": [
      {
        "start": 13,
        "end": 17,
        "text": "总线时钟",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 7,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 8,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7804,
    "created_at": "2024-08-17T07:58:07.585756Z",
    "updated_at": "2024-08-17T07:58:07.585756Z",
    "lead_time": 170.0
  },
  {
    "text": "同步总线定时协定在同步定时协议中，事件出现在总线上的时刻由总线时钟信号来确定，所以总线中包含时钟信号线",
    "id": 6372,
    "label": [
      {
        "start": 9,
        "end": 15,
        "text": "同步定时协议",
        "labels": [
          "PROT"
        ]
      },
      {
        "start": 31,
        "end": 35,
        "text": "时钟信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 46,
        "end": 50,
        "text": "时钟信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "总线定时",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7805,
    "created_at": "2024-08-17T07:58:23.233170Z",
    "updated_at": "2024-08-17T07:58:23.233170Z",
    "lead_time": 14.126
  },
  {
    "text": "通道结构的进一步发展，出现了两种计算机IO系统结构",
    "id": 6373,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7806,
    "created_at": "2024-08-17T07:58:28.929583Z",
    "updated_at": "2024-08-17T07:58:28.929583Z",
    "lead_time": 3.761
  },
  {
    "text": "有效性有效性是指利用该指令系统所编写的程序能够高效率地运行",
    "id": 6374,
    "label": [
      {
        "start": 11,
        "end": 15,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7807,
    "created_at": "2024-08-17T07:58:38.037722Z",
    "updated_at": "2024-08-17T07:58:38.037722Z",
    "lead_time": 7.954
  },
  {
    "text": "执行周期中CPU根据对指令操作码的译码或测试，进行指令所要求的操作",
    "id": 6375,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 16,
        "text": "指令操作码",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "执行周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "译码",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7808,
    "created_at": "2024-08-17T07:58:47.361728Z",
    "updated_at": "2024-08-17T07:58:47.361728Z",
    "lead_time": 8.526
  },
  {
    "text": "其中空白段用来留出一定的时间作为磁盘控制器的读写准备时间，序标被用来作为磁盘控制器的同步定时信号",
    "id": 6376,
    "label": [
      {
        "start": 16,
        "end": 21,
        "text": "磁盘控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 41,
        "text": "磁盘控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7809,
    "created_at": "2024-08-17T07:59:18.223543Z",
    "updated_at": "2024-08-17T07:59:18.223543Z",
    "lead_time": 29.876
  },
  {
    "text": "例如，一个位二进制的字存储单元包含两字节，当采用字节编址方式时，该字占两字节地址",
    "id": 6377,
    "label": [
      {
        "start": 11,
        "end": 15,
        "text": "存储单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 36,
        "end": 40,
        "text": "字节地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "编址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 5,
        "end": 6,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 11,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 33,
        "end": 34,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7810,
    "created_at": "2024-08-17T07:59:31.043523Z",
    "updated_at": "2024-08-17T07:59:31.043523Z",
    "lead_time": 11.989
  },
  {
    "text": "shamt字段移位值，用于移位指令",
    "id": 6378,
    "label": [
      {
        "start": 13,
        "end": 17,
        "text": "移位指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "移位",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7811,
    "created_at": "2024-08-17T07:59:34.683572Z",
    "updated_at": "2024-08-17T07:59:34.683572Z",
    "lead_time": 2.697
  },
  {
    "text": "目前广泛使用的奔腾处理机的存储管理机制与英特尔和基本相同",
    "id": 6379,
    "label": [
      {
        "start": 20,
        "end": 23,
        "text": "英特尔",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "处理机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7812,
    "created_at": "2024-08-17T07:59:40.949530Z",
    "updated_at": "2024-08-17T07:59:40.949530Z",
    "lead_time": 5.603
  },
  {
    "text": "为强调比较器的规模和存放的灵活程度，常称之为v路组相联cache",
    "id": 6380,
    "label": [
      {
        "start": 27,
        "end": 32,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "组相联",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7813,
    "created_at": "2024-08-17T07:59:45.056070Z",
    "updated_at": "2024-08-17T07:59:45.056070Z",
    "lead_time": 3.53
  },
  {
    "text": "CPU和DMA控制器各自有自己的访内地址寄存器、数据寄存器和读写信号等控制寄存器",
    "id": 6381,
    "label": [
      {
        "start": 4,
        "end": 10,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 23,
        "text": "地址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 40,
        "text": "控制寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 29,
        "text": "数据寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7814,
    "created_at": "2024-08-17T07:59:49.084704Z",
    "updated_at": "2024-08-17T07:59:49.084704Z",
    "lead_time": 3.386
  },
  {
    "text": "第、位指定读操作或写操作取其之一",
    "id": 6382,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "读操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 2,
        "end": 3,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7815,
    "created_at": "2024-08-17T08:00:09.844546Z",
    "updated_at": "2024-08-17T08:00:09.844546Z",
    "lead_time": 20.097
  },
  {
    "text": "当输入线P时，CAS做加法运算；当P时，CAS做减法运算",
    "id": 6383,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "CAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "CAS",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7816,
    "created_at": "2024-08-17T08:00:17.696867Z",
    "updated_at": "2024-08-17T08:00:17.696867Z",
    "lead_time": 7.133
  },
  {
    "text": "如果第一级cache、第二级cache都不包含这个数据，就需要访问主存储器，产生更大的缺失损失",
    "id": 6384,
    "label": [
      {
        "start": 33,
        "end": 37,
        "text": "主存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 10,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 19,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7817,
    "created_at": "2024-08-17T08:00:20.156654Z",
    "updated_at": "2024-08-17T08:00:20.156654Z",
    "lead_time": 1.722
  },
  {
    "text": "但是，这种源程序如同汇编语言程序一样，是不能由机器直接识别和执行的，也必须给计算机配备一个既懂算法语言又懂机器语言的“翻译”，才能把源程序翻译为机器语言",
    "id": 6385,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "汇编语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 53,
        "end": 57,
        "text": "机器语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 72,
        "end": 76,
        "text": "机器语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "源程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 66,
        "end": 69,
        "text": "源程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "算法",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7818,
    "created_at": "2024-08-17T08:01:00.189971Z",
    "updated_at": "2024-08-17T08:01:00.189971Z",
    "lead_time": 39.197
  },
  {
    "text": "重写型：用户可对这类光盘进行随机写入、擦除或重写信息",
    "id": 6386,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7819,
    "created_at": "2024-08-17T08:01:35.458893Z",
    "updated_at": "2024-08-17T08:01:35.458893Z",
    "lead_time": 34.481
  },
  {
    "text": "为了同步主方、从方的操作，必须制订定时协议，通常采用同步定时与异步定时两种方式",
    "id": 6387,
    "label": [
      {
        "start": 31,
        "end": 35,
        "text": "异步定时",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7820,
    "created_at": "2024-08-17T08:02:09.671932Z",
    "updated_at": "2024-08-17T08:02:09.671932Z",
    "lead_time": 33.434
  },
  {
    "text": "因此A用于模块选择，连续的存储字位交错分布在两个模块上，偶字地址在模块，奇字地址在模块",
    "id": 6388,
    "label": [
      {
        "start": 29,
        "end": 32,
        "text": "字地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "字地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "存储字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 17,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7821,
    "created_at": "2024-08-17T08:02:20.295720Z",
    "updated_at": "2024-08-17T08:02:20.295720Z",
    "lead_time": 9.893
  },
  {
    "text": "垂直型微指令微指令中设置微操作码字段，采用微操作码编译法，由微操作码规定微指令的功能，称为垂直型微指令",
    "id": 6389,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "垂直型微指令",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 45,
        "end": 51,
        "text": "垂直型微指令",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "微操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "微操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "微操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "编译",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7822,
    "created_at": "2024-08-17T08:02:31.776531Z",
    "updated_at": "2024-08-17T08:02:31.776531Z",
    "lead_time": 10.681
  },
  {
    "text": "如果用位表示一像素，则只有级灰度或颜色；如果用位表示一像素，则有级灰度或颜色",
    "id": 6390,
    "label": [
      {
        "start": 3,
        "end": 4,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7823,
    "created_at": "2024-08-17T08:02:35.745023Z",
    "updated_at": "2024-08-17T08:02:35.745023Z",
    "lead_time": 2.998
  },
  {
    "text": "与SRAM相比，DRAM的存储元所需元件更少，所以存储密度更高",
    "id": 6391,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "存储元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "存储密度",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7824,
    "created_at": "2024-08-17T08:02:47.618458Z",
    "updated_at": "2024-08-17T08:02:47.618458Z",
    "lead_time": 11.07
  },
  {
    "text": "图为双端口存储器IDT的逻辑框图",
    "id": 6392,
    "label": [
      {
        "start": 2,
        "end": 8,
        "text": "双端口存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7825,
    "created_at": "2024-08-17T08:02:58.918527Z",
    "updated_at": "2024-08-17T08:02:58.918527Z",
    "lead_time": 10.525
  },
  {
    "text": "Pentium机也有条指令，种寻址方式",
    "id": 6393,
    "label": [
      {
        "start": 15,
        "end": 19,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7826,
    "created_at": "2024-08-17T08:03:05.121145Z",
    "updated_at": "2024-08-17T08:03:05.121145Z",
    "lead_time": 5.475
  },
  {
    "text": "而每个CAS单元的延迟时间为T单元，因此，对一个n位除以n位的加减交替阵列除法器来说，单元的数量为n，考虑最大情况下的信号延迟，其除法执行时间为tdnT其中n为尾数数位",
    "id": 6394,
    "label": [
      {
        "start": 35,
        "end": 40,
        "text": "阵列除法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 67,
        "end": 71,
        "text": "执行时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "CAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 80,
        "end": 82,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 26,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 29,
        "end": 30,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 83,
        "end": 84,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7827,
    "created_at": "2024-08-17T08:03:19.274918Z",
    "updated_at": "2024-08-17T08:03:19.274918Z",
    "lead_time": 13.333
  },
  {
    "text": "x，y，则xy",
    "id": 6395,
    "annotator": 1,
    "annotation_id": 7828,
    "created_at": "2024-08-17T08:03:21.184936Z",
    "updated_at": "2024-08-17T08:03:21.184936Z",
    "lead_time": 0.808
  },
  {
    "text": "与单级中断不同，在多级中断中，中断屏蔽寄存器的内容是一个很重要的程序现场，因此在响应中断时，需要把中断屏蔽寄存器的内容保存起来，并设置新的中断屏蔽状态",
    "id": 6396,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 53,
        "end": 56,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 69,
        "end": 71,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "屏蔽",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 51,
        "end": 53,
        "text": "屏蔽",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 71,
        "end": 73,
        "text": "屏蔽",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7829,
    "created_at": "2024-08-17T08:03:31.733348Z",
    "updated_at": "2024-08-17T08:03:31.733348Z",
    "lead_time": 9.771
  },
  {
    "text": "这是因为通道是一个特殊功能的处理器，它有自己的指令和程序专门负责数据输入输出的传输控制，而CPU将“传输控制”的功能下放给通道后只负责“数据处理”功能",
    "id": 6397,
    "label": [
      {
        "start": 14,
        "end": 17,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7830,
    "created_at": "2024-08-17T08:03:34.298498Z",
    "updated_at": "2024-08-17T08:03:34.298498Z",
    "lead_time": 1.515
  },
  {
    "text": "计算机的输入输出设备通常称为外围设备",
    "id": 6398,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 4,
        "end": 10,
        "text": "输入输出设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7831,
    "created_at": "2024-08-17T08:03:36.669566Z",
    "updated_at": "2024-08-17T08:03:36.669566Z",
    "lead_time": 1.234
  },
  {
    "text": "在行选通信号RAS作用下，内存地址的高位行地址经AA地址线输入，并被锁存在行地址锁存器和最后读出行地址锁存器中",
    "id": 6399,
    "label": [
      {
        "start": 1,
        "end": 6,
        "text": "行选通信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "内存地址",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "RAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "锁存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 51,
        "end": 54,
        "text": "锁存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "行地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "行地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 48,
        "end": 51,
        "text": "行地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 19,
        "end": 20,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7832,
    "created_at": "2024-08-17T08:03:40.178985Z",
    "updated_at": "2024-08-17T08:03:40.178985Z",
    "lead_time": 2.437
  },
  {
    "text": "当CPU执行完一条现行指令时，如果外设向CPU发出中断请求，那么CPU在满足响应条件的情况下，将发出中断响应信号，与此同时关闭中断“中断屏蔽”触发器置“”，表示CPU不再受理另外一个设备的中断请求",
    "id": 6400,
    "label": [
      {
        "start": 17,
        "end": 19,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 71,
        "end": 74,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 80,
        "end": 83,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 63,
        "end": 65,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 66,
        "end": 68,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 94,
        "end": 96,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 68,
        "end": 70,
        "text": "屏蔽",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7833,
    "created_at": "2024-08-17T08:03:41.427388Z",
    "updated_at": "2024-08-17T08:03:41.427388Z",
    "lead_time": 0.145
  },
  {
    "text": "如果只有算盘，没有运算法则和计算步骤，就不能用算盘来计算",
    "id": 6401,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "算法",
        "labels": [
          "ALG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7834,
    "created_at": "2024-08-17T08:03:42.561144Z",
    "updated_at": "2024-08-17T08:03:42.561144Z",
    "lead_time": 0.098
  },
  {
    "text": "这样，传统总线上用DMA方式工作的设备移植到PCI总线上时，采用主设备工作方式即可",
    "id": 6402,
    "label": [
      {
        "start": 22,
        "end": 25,
        "text": "PCI",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "主设备",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7835,
    "created_at": "2024-08-17T08:03:43.632495Z",
    "updated_at": "2024-08-17T08:03:43.632495Z",
    "lead_time": 0.113
  },
  {
    "text": "NOR闪存的区块划分SALJ是一种区块sector式闪存，外部按Mbit或Mbit组织，内部组织为个区块",
    "id": 6403,
    "label": [
      {
        "start": 33,
        "end": 36,
        "text": "bit",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "bit",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "区块",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "区块",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "区块",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7836,
    "created_at": "2024-08-17T08:03:44.935878Z",
    "updated_at": "2024-08-17T08:03:44.935878Z",
    "lead_time": 0.191
  },
  {
    "text": "这是因为，一条指令执行结束后，如果没有外设请求，CPU一定转入“取指令”操作",
    "id": 6404,
    "label": [
      {
        "start": 24,
        "end": 27,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "取指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "外设",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7837,
    "created_at": "2024-08-17T08:03:45.951034Z",
    "updated_at": "2024-08-17T08:03:45.951034Z",
    "lead_time": 0.1
  },
  {
    "text": "而SCSI也只有MBs相当于Mbs",
    "id": 6405,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "MBs",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7838,
    "created_at": "2024-08-17T08:03:46.864665Z",
    "updated_at": "2024-08-17T08:03:46.864665Z",
    "lead_time": 0.077
  },
  {
    "text": "可以明显地看到，所有指令的取指周期是完全相同的，而且是一个CPU周期",
    "id": 6406,
    "label": [
      {
        "start": 29,
        "end": 32,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "取指周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7839,
    "created_at": "2024-08-17T08:03:49.221824Z",
    "updated_at": "2024-08-17T08:03:49.221824Z",
    "lead_time": 0.263
  },
  {
    "text": "汉字总数虽多，但是由一笔一画组成，全部汉字的部件和笔画是有限的",
    "id": 6407,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "汉字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "汉字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7840,
    "created_at": "2024-08-17T08:03:50.611554Z",
    "updated_at": "2024-08-17T08:03:50.611554Z",
    "lead_time": 0.129
  },
  {
    "text": "假如计算机系统中只有一个基址寄存器，则基号可不要",
    "id": 6408,
    "label": [
      {
        "start": 12,
        "end": 17,
        "text": "基址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 7,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7841,
    "created_at": "2024-08-17T08:03:51.480756Z",
    "updated_at": "2024-08-17T08:03:51.480756Z",
    "lead_time": 0.094
  },
  {
    "text": "多通道设计增加了灵活性，较慢的设备可以分配较少的通道",
    "id": 6409,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "多通道",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7842,
    "created_at": "2024-08-17T08:03:52.500742Z",
    "updated_at": "2024-08-17T08:03:52.500742Z",
    "lead_time": 0.056
  },
  {
    "text": "RISCCPU是继承CISC的成功技术，并在克服CISC机器缺点的基础上发展起来的",
    "id": 6410,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "CISC",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "CISC",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "RISC",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7843,
    "created_at": "2024-08-17T08:03:53.232906Z",
    "updated_at": "2024-08-17T08:03:53.232906Z",
    "lead_time": 0.074
  },
  {
    "text": "为此需要由启停控制逻辑来控制TT的发送",
    "id": 6411,
    "annotator": 1,
    "annotation_id": 7844,
    "created_at": "2024-08-17T08:03:53.986795Z",
    "updated_at": "2024-08-17T08:03:53.986795Z",
    "lead_time": 0.058
  },
  {
    "text": "EPROM通常容量比较小，单位成本高，但可重复擦除的次数多，一般在一百万次左右，一般用于存储偶尔需要更新的系统配置信息、系统参数、加密保护数据或历史信息等",
    "id": 6412,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "EPROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 15,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7845,
    "created_at": "2024-08-17T08:03:54.754192Z",
    "updated_at": "2024-08-17T08:03:54.755191Z",
    "lead_time": 0.065
  },
  {
    "text": "由于成本很低，在没有更新需求的大批量的应用中适宜使用掩模ROM",
    "id": 6413,
    "label": [
      {
        "start": 26,
        "end": 31,
        "text": "掩模ROM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7846,
    "created_at": "2024-08-17T08:03:55.614607Z",
    "updated_at": "2024-08-17T08:03:55.614607Z",
    "lead_time": 0.084
  },
  {
    "text": "SATA总线用于与SATA硬盘和光盘驱动器连接，PCI总线上连接的第二个USB主机控制器接口用于与USB键盘和USB鼠标相连",
    "id": 6414,
    "label": [
      {
        "start": 24,
        "end": 29,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 44,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "驱动器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 52,
        "end": 54,
        "text": "键盘",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7847,
    "created_at": "2024-08-17T08:03:56.536467Z",
    "updated_at": "2024-08-17T08:03:56.536467Z",
    "lead_time": 0.118
  },
  {
    "text": "下面也只讲执行周期，CPU完成的动作如图所示",
    "id": 6415,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "执行周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7848,
    "created_at": "2024-08-17T08:03:57.761100Z",
    "updated_at": "2024-08-17T08:03:57.761100Z",
    "lead_time": 0.096
  },
  {
    "text": "除必有类信号外，还有种可选类信号线",
    "id": 6416,
    "annotator": 1,
    "annotation_id": 7849,
    "created_at": "2024-08-17T08:03:59.088852Z",
    "updated_at": "2024-08-17T08:03:59.088852Z",
    "lead_time": 0.111
  },
  {
    "text": "鉴于此，横向链式线路中的第i扫描级的输出Ci为的条件是：第i级的输入位ai，或者第i级链式输入来自右起前i级的链式输出Ci",
    "id": 6417,
    "label": [
      {
        "start": 34,
        "end": 35,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7850,
    "created_at": "2024-08-17T08:04:00.229751Z",
    "updated_at": "2024-08-17T08:04:00.229751Z",
    "lead_time": 0.114
  },
  {
    "text": "按照总线仲裁电路的位置不同，总线仲裁分为集中式仲裁和分布式仲裁",
    "id": 6418,
    "label": [
      {
        "start": 20,
        "end": 25,
        "text": "集中式仲裁",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 26,
        "end": 31,
        "text": "分布式仲裁",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "总线仲裁",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "总线仲裁",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7851,
    "created_at": "2024-08-17T08:04:01.423695Z",
    "updated_at": "2024-08-17T08:04:01.423695Z",
    "lead_time": 0.168
  },
  {
    "text": "存储程序并按地址顺序执行，这是冯诺依曼型计算机的工作原理，也是CPU自动工作的关键",
    "id": 6419,
    "label": [
      {
        "start": 20,
        "end": 23,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7852,
    "created_at": "2024-08-17T08:04:02.891790Z",
    "updated_at": "2024-08-17T08:04:02.891790Z",
    "lead_time": 0.161
  },
  {
    "text": "设备状态标志是接口中的标志触发器，如“忙”“准备就绪”“错误”等，用来标志设备的工作状态，以便接口对外设动作进行监视",
    "id": 6420,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7853,
    "created_at": "2024-08-17T08:04:04.074632Z",
    "updated_at": "2024-08-17T08:04:04.074632Z",
    "lead_time": 0.126
  },
  {
    "text": "这里仅介绍检错码",
    "id": 6421,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "检错码",
        "labels": [
          "ALG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7854,
    "created_at": "2024-08-17T08:04:05.607768Z",
    "updated_at": "2024-08-17T08:04:05.607768Z",
    "lead_time": 0.13
  },
  {
    "text": "还可以结合对主存信息的使用方式实现访问方式保护",
    "id": 6422,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7855,
    "created_at": "2024-08-17T08:04:06.969169Z",
    "updated_at": "2024-08-17T08:04:06.969169Z",
    "lead_time": 0.111
  },
  {
    "text": "平均等待时间和磁盘转速有关，它用磁盘旋转一周所需时间的一半来表示",
    "id": 6423,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "平均等待时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7856,
    "created_at": "2024-08-17T08:04:08.509814Z",
    "updated_at": "2024-08-17T08:04:08.509814Z",
    "lead_time": 0.165
  },
  {
    "text": "此后，SDRAM将完成内部准备操作，并在个时钟周期之后送出数据",
    "id": 6424,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7857,
    "created_at": "2024-08-17T08:04:09.885763Z",
    "updated_at": "2024-08-17T08:04:09.885763Z",
    "lead_time": 0.14
  },
  {
    "text": "否则，由于一条总线由多种功能部件共用，可能导致很大的时间延迟",
    "id": 6425,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7858,
    "created_at": "2024-08-17T08:04:11.407645Z",
    "updated_at": "2024-08-17T08:04:11.407645Z",
    "lead_time": 0.177
  },
  {
    "text": "图示出了单级中断示意图a和单级中断系统结构图b",
    "id": 6426,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7859,
    "created_at": "2024-08-17T08:04:12.838473Z",
    "updated_at": "2024-08-17T08:04:12.838473Z",
    "lead_time": 0.19
  },
  {
    "text": "但地址的分配方法与顺序方式不同：先将个线性地址、、、依次分配给M、M、M、M模块，再将线性地址、、、依次分配给M、M、M、M模块直到全部线性地址分配完毕为止",
    "id": 6427,
    "label": [
      {
        "start": 19,
        "end": 23,
        "text": "线性地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 47,
        "text": "线性地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 68,
        "end": 72,
        "text": "线性地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7860,
    "created_at": "2024-08-17T08:04:14.115548Z",
    "updated_at": "2024-08-17T08:04:14.115548Z",
    "lead_time": 0.241
  },
  {
    "text": "系统中由一个有个表项的页表实现地址转换",
    "id": 6428,
    "label": [
      {
        "start": 15,
        "end": 19,
        "text": "地址转换",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7861,
    "created_at": "2024-08-17T08:04:15.799196Z",
    "updated_at": "2024-08-17T08:04:15.799196Z",
    "lead_time": 0.239
  },
  {
    "text": "然而我们是通过画示意图或数据通路图来解释这些过程的",
    "id": 6429,
    "label": [
      {
        "start": 12,
        "end": 16,
        "text": "数据通路",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7862,
    "created_at": "2024-08-17T08:04:17.779518Z",
    "updated_at": "2024-08-17T08:04:17.779518Z",
    "lead_time": 0.544
  },
  {
    "text": "兼容性系列机各机种之间具有相同的基本结构和共同的基本指令系统，因而指令系统是兼容的，即各机种上基本软件可以通用",
    "id": 6430,
    "label": [
      {
        "start": 26,
        "end": 30,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7863,
    "created_at": "2024-08-17T08:04:19.688633Z",
    "updated_at": "2024-08-17T08:04:19.688633Z",
    "lead_time": 0.671
  },
  {
    "text": "SCSI采用分布式总线仲裁策略",
    "id": 6431,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "总线仲裁",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7864,
    "created_at": "2024-08-17T08:04:21.201309Z",
    "updated_at": "2024-08-17T08:04:21.201309Z",
    "lead_time": 0.158
  },
  {
    "text": "可控加法减法CAS单元和阵列乘法器相似，阵列除法器也是一种并行运算部件，采用大规模集成电路制造",
    "id": 6432,
    "label": [
      {
        "start": 41,
        "end": 45,
        "text": "集成电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 17,
        "text": "阵列乘法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 25,
        "text": "阵列除法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "CAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7865,
    "created_at": "2024-08-17T08:04:22.548946Z",
    "updated_at": "2024-08-17T08:04:22.548946Z",
    "lead_time": 0.165
  },
  {
    "text": "按人的视觉生理，刷新频率大于次秒时才不会感到闪烁",
    "id": 6433,
    "annotator": 1,
    "annotation_id": 7866,
    "created_at": "2024-08-17T08:04:24.388387Z",
    "updated_at": "2024-08-17T08:04:24.388387Z",
    "lead_time": 0.198
  },
  {
    "text": "在很快地传送完一个数据块后，控制器又可为其他设备服务",
    "id": 6434,
    "label": [
      {
        "start": 14,
        "end": 17,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7867,
    "created_at": "2024-08-17T08:04:25.785014Z",
    "updated_at": "2024-08-17T08:04:25.785014Z",
    "lead_time": 0.126
  },
  {
    "text": "图示出了独立请求方式的中断优先级排队与中断向量产生的逻辑结构",
    "id": 6435,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "优先级",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 10,
        "text": "独立请求方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7868,
    "created_at": "2024-08-17T08:04:27.325988Z",
    "updated_at": "2024-08-17T08:04:27.325988Z",
    "lead_time": 0.294
  },
  {
    "text": "假定指令存放在指存中，数据a、b及常数已存放在图中的R、R、R三寄存器中，因此，完成十进制加法的微程序流程图示于图中",
    "id": 6436,
    "label": [
      {
        "start": 42,
        "end": 45,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 48,
        "end": 51,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7869,
    "created_at": "2024-08-17T08:04:28.859827Z",
    "updated_at": "2024-08-17T08:04:28.859827Z",
    "lead_time": 0.17
  },
  {
    "text": "对位浮点数操作，要使用一对位寄存器",
    "id": 6437,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 2,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 14,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7870,
    "created_at": "2024-08-17T08:04:30.285328Z",
    "updated_at": "2024-08-17T08:04:30.285328Z",
    "lead_time": 0.139
  },
  {
    "text": "以上是由四条微指令序列组成的简单微程序",
    "id": 6438,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7871,
    "created_at": "2024-08-17T08:04:31.789062Z",
    "updated_at": "2024-08-17T08:04:31.789062Z",
    "lead_time": 0.136
  },
  {
    "text": "的电缆不需要与电缆阻抗匹配的终端，而且电缆上的设备随时可从插座拔出或插入，即具有热插入能力",
    "id": 6439,
    "annotator": 1,
    "annotation_id": 7872,
    "created_at": "2024-08-17T08:04:33.326984Z",
    "updated_at": "2024-08-17T08:04:33.326984Z",
    "lead_time": 0.098
  },
  {
    "text": "IO接口是指CPU、主存、外围设备之间通过总线进行连接的逻辑部件",
    "id": 6440,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "IO接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7873,
    "created_at": "2024-08-17T08:04:34.607817Z",
    "updated_at": "2024-08-17T08:04:34.607817Z",
    "lead_time": 0.198
  },
  {
    "text": "区位码是将国家标准局公布的个两级汉字分为个区，每个区分位，实际上把汉字表示成二维数组，每个汉字在数组中的下标就是区位码",
    "id": 6441,
    "label": [
      {
        "start": 16,
        "end": 18,
        "text": "汉字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "汉字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "汉字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 1,
        "end": 2,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 27,
        "end": 28,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 57,
        "end": 58,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7874,
    "created_at": "2024-08-17T08:04:36.268793Z",
    "updated_at": "2024-08-17T08:04:36.268793Z",
    "lead_time": 0.174
  },
  {
    "text": "那么DMA控制器与CPU怎样分时使用内存呢根据每提出一次DMA请求，DMA控制器将占用多少个总线周期，可以将DMA传送分成以下几种方式：成组连续传送方式停止CPU访存；周期挪用方式单字传送方式，周期窃取方式；透明DMA方式DMA与CPU交替操作方式，总线周期分时方式",
    "id": 6442,
    "label": [
      {
        "start": 2,
        "end": 8,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 40,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 54,
        "end": 59,
        "text": "DMA传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 46,
        "end": 50,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 125,
        "end": 129,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 106,
        "end": 109,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 111,
        "end": 114,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 78,
        "end": 81,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 115,
        "end": 118,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 91,
        "end": 92,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7875,
    "created_at": "2024-08-17T08:04:37.890836Z",
    "updated_at": "2024-08-17T08:04:37.890836Z",
    "lead_time": 0.253
  },
  {
    "text": "由于CPU根本不参加传送操作，因此就省去了CPU取指令、取数、送数等操作",
    "id": 6443,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "取指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7876,
    "created_at": "2024-08-17T08:04:39.431288Z",
    "updated_at": "2024-08-17T08:04:39.431795Z",
    "lead_time": 0.22
  },
  {
    "text": "水平型微指令的一般格式如下：按照控制字段的编码方法不同，水平型微指令又分为三种：第一种是全水平型不译码法微指令，第二种是字段译码法水平型微指令，第三种是直接和译码相混合的水平型微指令",
    "id": 6444,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "水平型微指令",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 34,
        "text": "水平型微指令",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 65,
        "end": 71,
        "text": "水平型微指令",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 85,
        "end": 91,
        "text": "水平型微指令",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 60,
        "end": 64,
        "text": "字段译码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 52,
        "end": 55,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "译码",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 79,
        "end": 81,
        "text": "译码",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7877,
    "created_at": "2024-08-17T08:04:43.576205Z",
    "updated_at": "2024-08-17T08:04:43.577193Z",
    "lead_time": 2.682
  },
  {
    "text": "计数器方式的基本特点是：微指令的顺序控制字段较短，微地址产生机构简单",
    "id": 6445,
    "label": [
      {
        "start": 25,
        "end": 28,
        "text": "微地址",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7878,
    "created_at": "2024-08-17T08:04:59.874988Z",
    "updated_at": "2024-08-17T08:04:59.874988Z",
    "lead_time": 14.88
  },
  {
    "text": "允许中断触发器EI可以用程序指令来置位",
    "id": 6446,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 18,
        "end": 19,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7879,
    "created_at": "2024-08-17T08:07:11.403606Z",
    "updated_at": "2024-08-17T08:07:11.403606Z",
    "lead_time": 130.331
  },
  {
    "text": "通过适配器可以实现高速CPU与低速外设之间工作速度上的匹配和同步，并完成计算机和外设之间的所有数据传送和控制",
    "id": 6447,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "适配器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7880,
    "created_at": "2024-08-17T08:07:21.740787Z",
    "updated_at": "2024-08-17T08:07:21.742001Z",
    "lead_time": 9.184
  },
  {
    "text": "正因为如此，包括微型机在内，DMA方式在计算机中被广泛采用",
    "id": 6448,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "微型机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7881,
    "created_at": "2024-08-17T08:09:46.729681Z",
    "updated_at": "2024-08-17T08:09:46.729681Z",
    "lead_time": 143.939
  },
  {
    "text": "完备性要求指令系统丰富、功能齐全、使用方便",
    "id": 6449,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7882,
    "created_at": "2024-08-17T08:09:48.570991Z",
    "updated_at": "2024-08-17T08:09:48.570991Z",
    "lead_time": 0.731
  },
  {
    "text": "有些系统中字节的最高位用于奇偶校验位，这种情况下用字节表示汉字内码",
    "id": 6450,
    "label": [
      {
        "start": 13,
        "end": 17,
        "text": "奇偶校验",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "汉字内码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "最高位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 17,
        "end": 18,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7883,
    "created_at": "2024-08-17T08:09:52.174696Z",
    "updated_at": "2024-08-17T08:09:52.174696Z",
    "lead_time": 2.617
  },
  {
    "text": "字符窗口为点阵，图形方式下分辨率为像素，种颜色",
    "id": 6451,
    "label": [
      {
        "start": 5,
        "end": 7,
        "text": "点阵",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7884,
    "created_at": "2024-08-17T08:09:54.138614Z",
    "updated_at": "2024-08-17T08:09:59.065708Z",
    "lead_time": 2.3
  },
  {
    "text": "思考题为什么一套加法器可以实现加法和减法操作？创新点在何处？在定点计算机中，两个原码表示的数相乘的运算规则是：乘积的符号位由两数的符号位按异或运算得到，而乘积的数值部分则是两个正数相乘之积",
    "id": 6452,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "加法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 36,
        "text": "定点计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 58,
        "end": 61,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 65,
        "end": 68,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "原码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7885,
    "created_at": "2024-08-17T08:10:03.336514Z",
    "updated_at": "2024-08-17T08:10:03.337511Z",
    "lead_time": 1.545
  },
  {
    "text": "当然在这种情况下，节拍信号发生器的电路相应就要复杂一些",
    "id": 6453,
    "annotator": 1,
    "annotation_id": 7886,
    "created_at": "2024-08-17T08:10:04.981580Z",
    "updated_at": "2024-08-17T08:10:04.981580Z",
    "lead_time": 0.557
  },
  {
    "text": "大约在同时，位微机被开发出来",
    "id": 6454,
    "label": [
      {
        "start": 6,
        "end": 7,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7887,
    "created_at": "2024-08-17T08:10:09.245954Z",
    "updated_at": "2024-08-17T08:10:09.245954Z",
    "lead_time": 3.074
  },
  {
    "text": "假设CPU工作周期为s，内存存取周期小于s，那么一个CPU周期可分为C和C两个分周期，其中C专供DMA控制器访内，C专供CPU访内",
    "id": 6455,
    "label": [
      {
        "start": 48,
        "end": 54,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 31,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "存取周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 60,
        "end": 63,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7888,
    "created_at": "2024-08-17T08:10:11.866805Z",
    "updated_at": "2024-08-17T08:10:11.866805Z",
    "lead_time": 1.442
  },
  {
    "text": "所以DMA方式能满足高速IO设备的要求，也有利于CPU效率的发挥",
    "id": 6456,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7889,
    "created_at": "2024-08-17T08:10:12.968822Z",
    "updated_at": "2024-08-17T08:10:12.968822Z",
    "lead_time": 0.086
  },
  {
    "text": "前一种情况以提高存储容量为目的，后一种情况则以地址变换为目的",
    "id": 6457,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "地址变换",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7890,
    "created_at": "2024-08-17T08:10:14.167850Z",
    "updated_at": "2024-08-17T08:10:14.167850Z",
    "lead_time": 0.091
  },
  {
    "text": "SCSI扩充了SCSI的命令集，通过提高时钟速率和数据线宽度，最高数据传输率可达MBs，采用芯电缆，且对电缆采用有源终端器",
    "id": 6458,
    "label": [
      {
        "start": 40,
        "end": 43,
        "text": "MBs",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7891,
    "created_at": "2024-08-17T08:10:15.329551Z",
    "updated_at": "2024-08-17T08:10:15.329551Z",
    "lead_time": 0.134
  },
  {
    "text": "所谓双向总线，就是信息可以向两个方向传送，既可以发送数据，也可以接收数据",
    "id": 6459,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7892,
    "created_at": "2024-08-17T08:10:16.739370Z",
    "updated_at": "2024-08-17T08:10:16.739370Z",
    "lead_time": 0.115
  },
  {
    "text": "主存的数据块大小称为块，用Bj表示，其中jn，共有ns块",
    "id": 6460,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7893,
    "created_at": "2024-08-17T08:11:14.808329Z",
    "updated_at": "2024-08-17T08:11:14.808329Z",
    "lead_time": 56.762
  },
  {
    "text": "在国际超级计算机强排序中，中国年“曙光A”位居第；年“星云号”位居第；年“天河号”位居第，运算速度达万亿次秒",
    "id": 6461,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "超级计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 21,
        "end": 22,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 31,
        "end": 32,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 41,
        "end": 42,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7894,
    "created_at": "2024-08-17T08:11:15.811357Z",
    "updated_at": "2024-08-17T08:11:15.811357Z",
    "lead_time": 0.138
  },
  {
    "text": "通常采用的方法是指定位时间，即指定一个二进制位在传输线上占用的时间长度",
    "id": 6462,
    "label": [
      {
        "start": 19,
        "end": 23,
        "text": "二进制位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 11,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7895,
    "created_at": "2024-08-17T08:11:17.142411Z",
    "updated_at": "2024-08-17T08:11:17.142411Z",
    "lead_time": 0.121
  },
  {
    "text": "注意，表中算术运算操作是用补码表示法来表示的",
    "id": 6463,
    "label": [
      {
        "start": 13,
        "end": 18,
        "text": "补码表示法",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "算术运算",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7896,
    "created_at": "2024-08-17T08:11:18.245541Z",
    "updated_at": "2024-08-17T08:11:18.245541Z",
    "lead_time": 0.103
  },
  {
    "text": "以下ADD、STO、JMP三条指令的取指周期中，CPU的动作完全与MOV指令一样，不再细述",
    "id": 6464,
    "label": [
      {
        "start": 33,
        "end": 36,
        "text": "MOV",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "取指周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "JMP",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "ADD",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7897,
    "created_at": "2024-08-17T08:11:19.707138Z",
    "updated_at": "2024-08-17T08:11:19.707138Z",
    "lead_time": 0.241
  },
  {
    "text": "但是直到世纪年代末才出现强大的通用位微处理器，Intel便是其中之一",
    "id": 6465,
    "label": [
      {
        "start": 23,
        "end": 28,
        "text": "Intel",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "微处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 18,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7898,
    "created_at": "2024-08-17T08:11:20.885177Z",
    "updated_at": "2024-08-17T08:11:20.885177Z",
    "lead_time": 0.131
  },
  {
    "text": "如图所示，如果一个位数ABCD按照大端模式存放在内存中，则最低地址存放最高有效字节A，最高地址存放最低有效字节D；而按照小端模式存放时，字节顺序刚好相反",
    "id": 6466,
    "label": [
      {
        "start": 18,
        "end": 21,
        "text": "端模式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 61,
        "end": 64,
        "text": "端模式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 53,
        "end": 55,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 68,
        "end": 70,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7899,
    "created_at": "2024-08-17T08:11:22.483057Z",
    "updated_at": "2024-08-17T08:11:22.483057Z",
    "lead_time": 0.277
  },
  {
    "text": "例如，在总线读周期，CPU首先将存储器地址放到地址线上，它亦可发出一个启动信号，指明控制信息和地址信息已出现在总线上",
    "id": 6467,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "读周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7900,
    "created_at": "2024-08-17T08:11:24.121229Z",
    "updated_at": "2024-08-17T08:11:24.121229Z",
    "lead_time": 0.209
  },
  {
    "text": "例如，假设图中请求源的优先级最高，请求源的优先级最低",
    "id": 6468,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "优先级",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "优先级",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7901,
    "created_at": "2024-08-17T08:11:25.465138Z",
    "updated_at": "2024-08-17T08:11:25.465138Z",
    "lead_time": 0.126
  },
  {
    "text": "其构造基础是利用数据分块技术和并行处理技术，在多个磁盘上交错存放数据，使之可以并行存取",
    "id": 6469,
    "label": [
      {
        "start": 15,
        "end": 21,
        "text": "并行处理技术",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7902,
    "created_at": "2024-08-17T08:11:26.814154Z",
    "updated_at": "2024-08-17T08:11:26.814154Z",
    "lead_time": 0.128
  },
  {
    "text": "编写程序的过程，称为程序设计，而程序设计所使用的工具则是计算机语言",
    "id": 6470,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "程序设计",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "程序设计",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7903,
    "created_at": "2024-08-17T08:11:28.264645Z",
    "updated_at": "2024-08-17T08:11:28.264645Z",
    "lead_time": 0.137
  },
  {
    "text": "若这对指令的第一条指令由于资源冲突或数据相关冲突，则这一对指令都不发射，两条指令在FD段停顿，等待资源的可用或数据相关的消除",
    "id": 6471,
    "label": [
      {
        "start": 18,
        "end": 24,
        "text": "数据相关冲突",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 55,
        "end": 59,
        "text": "数据相关",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7904,
    "created_at": "2024-08-17T08:11:29.541987Z",
    "updated_at": "2024-08-17T08:11:29.541987Z",
    "lead_time": 0.139
  },
  {
    "text": "E是阶码，占用位，阶符采用隐含方式，即采用移码方法来表示正负指数",
    "id": 6472,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "移码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 8,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7905,
    "created_at": "2024-08-17T08:11:31.540701Z",
    "updated_at": "2024-08-17T08:11:31.540701Z",
    "lead_time": 0.175
  },
  {
    "text": "也可以用改变程序的办法来改变询问次序",
    "id": 6473,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7906,
    "created_at": "2024-08-17T08:11:32.432585Z",
    "updated_at": "2024-08-17T08:11:32.432585Z",
    "lead_time": 0.081
  },
  {
    "text": "而并行处理则使得以上各个操作能同时进行，从而大大提高了计算机的速度",
    "id": 6474,
    "label": [
      {
        "start": 27,
        "end": 30,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7907,
    "created_at": "2024-08-17T08:11:33.359293Z",
    "updated_at": "2024-08-17T08:11:33.359293Z",
    "lead_time": 0.074
  },
  {
    "text": "这样的计算机，可以通过硬件直接解释执行高级语言的语句而不需要先经过编译程序的处理",
    "id": 6475,
    "label": [
      {
        "start": 11,
        "end": 13,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "高级语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "编译程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7908,
    "created_at": "2024-08-17T08:11:34.451623Z",
    "updated_at": "2024-08-17T08:11:34.451623Z",
    "lead_time": 0.12
  },
  {
    "text": "可以看出，用地址码的低位字段经过译码选择不同的模块，而高位字段指向相应模块内的存储字",
    "id": 6476,
    "label": [
      {
        "start": 39,
        "end": 42,
        "text": "存储字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "译码",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 28,
        "end": 29,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7909,
    "created_at": "2024-08-17T08:11:35.716146Z",
    "updated_at": "2024-08-17T08:11:35.716146Z",
    "lead_time": 0.176
  },
  {
    "text": "于是，CPU将进入一个循环程序中等待，并在每次循环中询问外设的状态，一直到外设发出“准备就绪”信号以后，才从外设接收数据",
    "id": 6477,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 54,
        "end": 56,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7910,
    "created_at": "2024-08-17T08:11:36.918334Z",
    "updated_at": "2024-08-17T08:11:36.918334Z",
    "lead_time": 0.119
  },
  {
    "text": "不论是加法运算还是减法运算，都按加法进行操作，其方法与定点加减运算完全一样",
    "id": 6478,
    "label": [
      {
        "start": 27,
        "end": 29,
        "text": "定点",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7911,
    "created_at": "2024-08-17T08:11:38.035171Z",
    "updated_at": "2024-08-17T08:11:38.035171Z",
    "lead_time": 0.097
  },
  {
    "text": "而单片机中多采用定点表示",
    "id": 6479,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "定点表示",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "单片机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7912,
    "created_at": "2024-08-17T08:11:39.206491Z",
    "updated_at": "2024-08-17T08:11:39.206491Z",
    "lead_time": 0.139
  },
  {
    "text": "如图所示，PCIe总线的物理链路的一个通道由两组差分信号组成，发送端的发送器与接收端的接收器通过一对儿差分信号连接，接收端的发送器与发送端的接收器通过另外一对儿差分信号连接",
    "id": 6480,
    "label": [
      {
        "start": 5,
        "end": 11,
        "text": "PCIe总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7913,
    "created_at": "2024-08-17T08:11:40.132994Z",
    "updated_at": "2024-08-17T08:11:40.132994Z",
    "lead_time": 0.09
  },
  {
    "text": "本节讲授双端口存储器和多体交叉存储器，前者采用空间并行技术，后者采用时间并行技术",
    "id": 6481,
    "label": [
      {
        "start": 4,
        "end": 10,
        "text": "双端口存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 18,
        "text": "多体交叉存储器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 29,
        "text": "空间并行技术",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 34,
        "end": 40,
        "text": "时间并行技术",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7914,
    "created_at": "2024-08-17T08:11:41.165730Z",
    "updated_at": "2024-08-17T08:11:41.165730Z",
    "lead_time": 0.153
  },
  {
    "text": "cache能高速地向CPU提供指令和数据，从而加快了程序的执行速度",
    "id": 6482,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7915,
    "created_at": "2024-08-17T08:11:42.504229Z",
    "updated_at": "2024-08-17T08:11:42.504229Z",
    "lead_time": 0.132
  },
  {
    "text": "多周期CPU把指令的执行分成多个阶段，每个阶段在一个时钟周期内完成，因而时钟周期短，不同指令所用周期数可以不同",
    "id": 6483,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 36,
        "end": 40,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7916,
    "created_at": "2024-08-17T08:11:44.120061Z",
    "updated_at": "2024-08-17T08:11:44.120061Z",
    "lead_time": 0.184
  },
  {
    "text": "在闪存完成上一命令之前，不能接收新的命令",
    "id": 6484,
    "label": [
      {
        "start": 1,
        "end": 3,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7917,
    "created_at": "2024-08-17T08:11:45.263110Z",
    "updated_at": "2024-08-17T08:11:45.263110Z",
    "lead_time": 0.092
  },
  {
    "text": "这种算法将计数周期限定在两次替换之间的间隔时间内，因而不能严格反映近期访问情况",
    "id": 6485,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "算法",
        "labels": [
          "ALG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7918,
    "created_at": "2024-08-17T08:11:46.707216Z",
    "updated_at": "2024-08-17T08:11:46.707216Z",
    "lead_time": 0.19
  },
  {
    "text": "侧重点不同cache主要解决主存与CPU的速度差异问题；而就性能价格比的提高而言，虚存主要是解决存储容量问题，另外还包括存储管理、主存分配和存储保护等方面",
    "id": 6486,
    "label": [
      {
        "start": 14,
        "end": 16,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 10,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 70,
        "end": 74,
        "text": "存储保护",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 48,
        "end": 52,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 65,
        "end": 67,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "虚存",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7919,
    "created_at": "2024-08-17T08:11:48.269644Z",
    "updated_at": "2024-08-17T08:11:48.269644Z",
    "lead_time": 0.198
  },
  {
    "text": "因此，从定性分析，对连续字的成块传送，交叉方式的存储器可以实现多模块流水式并行存取，大大提高存储器的带宽",
    "id": 6487,
    "label": [
      {
        "start": 24,
        "end": 27,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 46,
        "end": 49,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "带宽",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "流水",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 13,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7920,
    "created_at": "2024-08-17T08:11:50.398472Z",
    "updated_at": "2024-08-17T08:11:50.398472Z",
    "lead_time": 0.194
  },
  {
    "text": "另外增加了最后读出行地址锁存器和行地址比较器，如果后续访问的数据就在最近访问过的行中，则可直接从cache中读出数据而无须访问DRAM存储体",
    "id": 6488,
    "label": [
      {
        "start": 48,
        "end": 53,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 63,
        "end": 67,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "锁存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "行地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "行地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 67,
        "end": 70,
        "text": "存储体",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7921,
    "created_at": "2024-08-17T08:11:51.856985Z",
    "updated_at": "2024-08-17T08:11:51.856985Z",
    "lead_time": 0.203
  },
  {
    "text": "事实上，利用电子计算机进行计算、控制或做其他工作时，需要有各种用途的程序",
    "id": 6489,
    "label": [
      {
        "start": 6,
        "end": 11,
        "text": "电子计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7922,
    "created_at": "2024-08-17T08:11:53.029985Z",
    "updated_at": "2024-08-17T08:11:53.031024Z",
    "lead_time": 0.101
  },
  {
    "text": "这是一个实在的硬件级，由硬件直接执行",
    "id": 6490,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7923,
    "created_at": "2024-08-17T08:11:54.416112Z",
    "updated_at": "2024-08-17T08:11:54.416112Z",
    "lead_time": 0.216
  },
  {
    "text": "如果要用来控制图所示的运算器数据通路，势必会出现问题，因为前面的这些微命令信号还要加入时间控制，例如同节拍脉冲T相与而得到LDRLDR信号，如图a所示",
    "id": 6491,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 51,
        "end": 55,
        "text": "节拍脉冲",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "数据通路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 47,
        "text": "时间控制",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7924,
    "created_at": "2024-08-17T08:11:55.924097Z",
    "updated_at": "2024-08-17T08:11:55.924097Z",
    "lead_time": 0.217
  },
  {
    "text": "图所示的带求补器的阵列乘法器既适用于原码乘法，也适用于间接的补码乘法",
    "id": 6492,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "乘法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "求补器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "原码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7925,
    "created_at": "2024-08-17T08:11:59.853348Z",
    "updated_at": "2024-08-17T08:11:59.853348Z",
    "lead_time": 2.269
  },
  {
    "text": "虚地址到实主存地址的变换通过段表实现",
    "id": 6493,
    "label": [
      {
        "start": 4,
        "end": 9,
        "text": "实主存地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "虚地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "段表",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7926,
    "created_at": "2024-08-17T08:12:01.202948Z",
    "updated_at": "2024-08-17T08:12:01.202948Z",
    "lead_time": 0.132
  },
  {
    "text": "通用寄存器还用作地址指示器、变址寄存器、堆栈指示器等",
    "id": 6494,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 19,
        "text": "变址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 25,
        "text": "堆栈指示器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7927,
    "created_at": "2024-08-17T08:12:02.707133Z",
    "updated_at": "2024-08-17T08:12:02.707133Z",
    "lead_time": 0.204
  },
  {
    "text": "例如，图中从地址号单元读出的信息流是指令流，而从地址号单元读出的信息流是数据流",
    "id": 6495,
    "label": [
      {
        "start": 18,
        "end": 21,
        "text": "指令流",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7928,
    "created_at": "2024-08-17T08:12:04.606154Z",
    "updated_at": "2024-08-17T08:12:04.606154Z",
    "lead_time": 0.145
  },
  {
    "text": "如果采用这个选项指令如bcndn，则跟随在转移指令后的指令将被发射",
    "id": 6496,
    "label": [
      {
        "start": 21,
        "end": 25,
        "text": "转移指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7929,
    "created_at": "2024-08-17T08:12:06.162314Z",
    "updated_at": "2024-08-17T08:12:06.162314Z",
    "lead_time": 0.262
  },
  {
    "text": "看来这种新方法提高了工作效率，而且在未接到孩子们吃完糖的报告以前，她还可以腾出时间给孩子们批改作业",
    "id": 6497,
    "annotator": 1,
    "annotation_id": 7930,
    "created_at": "2024-08-17T08:12:07.361377Z",
    "updated_at": "2024-08-17T08:12:07.361377Z",
    "lead_time": 0.077
  },
  {
    "text": "注意，在DMA方式中，一批数据传送前的准备工作，以及传送结束后的处理工作，均由管理程序承担，而DMA控制器仅负责数据传送的工作",
    "id": 6498,
    "label": [
      {
        "start": 47,
        "end": 53,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7931,
    "created_at": "2024-08-17T08:12:10.070164Z",
    "updated_at": "2024-08-17T08:12:10.070164Z",
    "lead_time": 1.868
  },
  {
    "text": "这种逻辑电路是一种由门电路和触发器构成的复杂树形逻辑网络，故称之为硬布线控制器",
    "id": 6499,
    "label": [
      {
        "start": 33,
        "end": 39,
        "text": "硬布线控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "逻辑电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "门电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7932,
    "created_at": "2024-08-17T08:12:11.632463Z",
    "updated_at": "2024-08-17T08:12:11.632463Z",
    "lead_time": 0.261
  },
  {
    "text": "这种指令操作时都是涉及内存单元，即参与操作的数都放在内存里",
    "id": 6500,
    "label": [
      {
        "start": 11,
        "end": 15,
        "text": "内存单元",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7933,
    "created_at": "2024-08-17T08:12:13.289226Z",
    "updated_at": "2024-08-17T08:12:13.289226Z",
    "lead_time": 0.186
  },
  {
    "text": "通道的功能DMA控制器的出现已经减轻了CPU对数据输入输出的控制，使得CPU的效率有显著的提高",
    "id": 6501,
    "label": [
      {
        "start": 5,
        "end": 11,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7934,
    "created_at": "2024-08-17T08:12:15.499383Z",
    "updated_at": "2024-08-17T08:12:15.499383Z",
    "lead_time": 0.238
  },
  {
    "text": "RAM可以根据信息储存方法分为静态RAMSRAM和动态RAMDRAM",
    "id": 6502,
    "label": [
      {
        "start": 30,
        "end": 34,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "RAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "RAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "RAM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7935,
    "created_at": "2024-08-17T08:12:16.998112Z",
    "updated_at": "2024-08-17T08:12:16.998112Z",
    "lead_time": 0.173
  },
  {
    "text": "而程序计数器PC正是起到这种作用，所以它又称为指令计数器",
    "id": 6503,
    "label": [
      {
        "start": 1,
        "end": 6,
        "text": "程序计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 28,
        "text": "指令计数器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7936,
    "created_at": "2024-08-17T08:12:19.650042Z",
    "updated_at": "2024-08-17T08:12:19.650042Z",
    "lead_time": 1.642
  },
  {
    "text": "用半导体器件组成的存储器称为半导体存储器",
    "id": 6504,
    "label": [
      {
        "start": 14,
        "end": 20,
        "text": "半导体存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "半导体",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7937,
    "created_at": "2024-08-17T08:12:25.409152Z",
    "updated_at": "2024-08-17T08:12:25.409152Z",
    "lead_time": 4.964
  },
  {
    "text": "随着计算机系统的飞速发展和应用的扩大，系统要求外围设备类型越来越多，外围设备智能化的趋势越来越明显，特别是出现多媒体技术以后",
    "id": 6505,
    "label": [
      {
        "start": 23,
        "end": 27,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 2,
        "end": 7,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7938,
    "created_at": "2024-08-17T08:12:28.802171Z",
    "updated_at": "2024-08-17T08:12:28.802171Z",
    "lead_time": 1.637
  },
  {
    "text": "基本思想节中给出一位全加器FA的逻辑表达式为FiAiBiCiCiAiBiBiCiCiAi式中，Fi是第i位的和数，Ai、Bi是第i位的被加数和加数，Ci是第i位的进位输入，Ci为第i位的进位输出",
    "id": 6506,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "全加器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 21,
        "text": "逻辑表达式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 52,
        "end": 53,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 65,
        "end": 66,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 79,
        "end": 80,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 82,
        "end": 83,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 91,
        "end": 92,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 94,
        "end": 95,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7939,
    "created_at": "2024-08-17T08:12:30.350629Z",
    "updated_at": "2024-08-17T08:12:30.350629Z",
    "lead_time": 0.283
  },
  {
    "text": "这些技术的主要改进点在于提升存储矩阵输出的数据率",
    "id": 6507,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "存储矩阵",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7940,
    "created_at": "2024-08-17T08:12:31.987822Z",
    "updated_at": "2024-08-17T08:12:31.987822Z",
    "lead_time": 0.129
  },
  {
    "text": "访问地址按顺序分配给一个模块后，接着又按顺序为下一个模块分配访问地址",
    "id": 6508,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "访问地址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "访问地址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7941,
    "created_at": "2024-08-17T08:12:33.234084Z",
    "updated_at": "2024-08-17T08:12:33.234084Z",
    "lead_time": 0.192
  },
  {
    "text": "SCSI接口总线由条数据线、一条奇偶校验线、条控制线组成",
    "id": 6509,
    "label": [
      {
        "start": 16,
        "end": 20,
        "text": "奇偶校验",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "控制线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7942,
    "created_at": "2024-08-17T08:12:34.371021Z",
    "updated_at": "2024-08-17T08:12:34.371021Z",
    "lead_time": 0.123
  },
  {
    "text": "图示出了计算机的五大类外围设备，这只是一个典型化了的计算机环境",
    "id": 6510,
    "label": [
      {
        "start": 11,
        "end": 15,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7943,
    "created_at": "2024-08-17T08:12:35.702926Z",
    "updated_at": "2024-08-17T08:12:35.702926Z",
    "lead_time": 0.119
  },
  {
    "text": "在寻址一个内存具体单元时，由一个基地址再加上某些寄存器提供的位偏移量来形成实际的位物理地址",
    "id": 6511,
    "label": [
      {
        "start": 41,
        "end": 45,
        "text": "物理地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "偏移量",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 30,
        "end": 31,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 40,
        "end": 41,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7944,
    "created_at": "2024-08-17T08:12:37.183100Z",
    "updated_at": "2024-08-17T08:12:37.183100Z",
    "lead_time": 0.198
  },
  {
    "text": "一且结果写回寄存器堆，便可以从寄存器堆中直接取得操作数，就像一般流水线取得操作数的方式一样",
    "id": 6512,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "寄存器堆",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 19,
        "text": "寄存器堆",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7945,
    "created_at": "2024-08-17T08:12:38.687168Z",
    "updated_at": "2024-08-17T08:12:38.687168Z",
    "lead_time": 0.128
  },
  {
    "text": "图显示了SDRAM的逻辑结构，其主要特性如下",
    "id": 6513,
    "label": [
      {
        "start": 4,
        "end": 9,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7946,
    "created_at": "2024-08-17T08:12:40.258964Z",
    "updated_at": "2024-08-17T08:12:40.258964Z",
    "lead_time": 0.487
  },
  {
    "text": "这些修改数据一般利用扫描回程的消隐时间写入到刷存中，因此显示屏幕不会出现凌乱",
    "id": 6514,
    "annotator": 1,
    "annotation_id": 7947,
    "created_at": "2024-08-17T08:12:41.262248Z",
    "updated_at": "2024-08-17T08:12:41.262248Z",
    "lead_time": 0.077
  },
  {
    "text": "这种方法的优点是简单直观，其输出直接用于控制",
    "id": 6515,
    "annotator": 1,
    "annotation_id": 7948,
    "created_at": "2024-08-17T08:12:42.739277Z",
    "updated_at": "2024-08-17T08:12:42.739277Z",
    "lead_time": 0.098
  },
  {
    "text": "虚存缺页对系统性能的影响比cache未命中要大得多，因为调页需要访问辅存，并且要进行任务切换",
    "id": 6516,
    "label": [
      {
        "start": 13,
        "end": 18,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "缺页",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "虚存",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 30,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7949,
    "created_at": "2024-08-17T08:12:44.124123Z",
    "updated_at": "2024-08-17T08:12:44.124123Z",
    "lead_time": 0.155
  },
  {
    "text": "IRi是从各中断源设备来的中断请求信号，优先顺序从高到低是IR、IR、IR",
    "id": 6517,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7950,
    "created_at": "2024-08-17T08:12:45.274111Z",
    "updated_at": "2024-08-17T08:12:45.274111Z",
    "lead_time": 0.154
  },
  {
    "text": "电子计算机更是如此",
    "id": 6518,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "电子计算机",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7951,
    "created_at": "2024-08-17T08:12:46.504162Z",
    "updated_at": "2024-08-17T08:12:46.505161Z",
    "lead_time": 0.123
  },
  {
    "text": "公用线包括时钟信号线、电源线、地线、系统复位线以及加电或断电的时序信号线等",
    "id": 6519,
    "label": [
      {
        "start": 5,
        "end": 7,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 31,
        "end": 35,
        "text": "时序信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 22,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7952,
    "created_at": "2024-08-17T08:12:47.679958Z",
    "updated_at": "2024-08-17T08:12:47.679958Z",
    "lead_time": 0.128
  },
  {
    "text": "在计算机中对数据进行运算操作时，符号位如何表示呢是否也同数值位一道参加运算操作呢如参加，会给运算操作带来什么影响呢为了妥善地处理好这些问题，就产生了把符号位和数值位一起编码来表示相应的数的各种表示方法，如原码、补码、反码、移码",
    "id": 6520,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 75,
        "end": 78,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 108,
        "end": 110,
        "text": "反码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 105,
        "end": 107,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 84,
        "end": 86,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 102,
        "end": 104,
        "text": "原码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 111,
        "end": 113,
        "text": "移码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 30,
        "end": 31,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 81,
        "end": 82,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7953,
    "created_at": "2024-08-17T08:12:48.938164Z",
    "updated_at": "2024-08-17T08:12:48.938164Z",
    "lead_time": 0.176
  },
  {
    "text": "如图所示，中央部分是CPU和主存，通过系统总线与第二层的适配器接口部件相连，第三层是各种外围设备控制器，最外层则是外围设备",
    "id": 6521,
    "label": [
      {
        "start": 14,
        "end": 16,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 46,
        "end": 51,
        "text": "设备控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "系统总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 57,
        "end": 61,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 31,
        "end": 35,
        "text": "接口部件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "适配器",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7954,
    "created_at": "2024-08-17T08:12:50.141047Z",
    "updated_at": "2024-08-17T08:12:50.141047Z",
    "lead_time": 0.135
  },
  {
    "text": "盘片的膜层结构如图a所示，盘基为聚碳酸酯，反射层多为铝质，保护层为聚丙烯酸酯",
    "id": 6522,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "盘片",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7955,
    "created_at": "2024-08-17T08:12:51.616344Z",
    "updated_at": "2024-08-17T08:12:51.616344Z",
    "lead_time": 0.124
  },
  {
    "text": "CPU总线还接有L级cache",
    "id": 6523,
    "label": [
      {
        "start": 10,
        "end": 15,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "CPU总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7956,
    "created_at": "2024-08-17T08:12:55.594268Z",
    "updated_at": "2024-08-17T08:12:55.594268Z",
    "lead_time": 3.049
  },
  {
    "text": "当进行输入操作时，外围设备的数据一次一个字或一字节传向内存；当进行输出操作时，内存的数据传向外围设备",
    "id": 6524,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 46,
        "end": 50,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 21,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7957,
    "created_at": "2024-08-17T08:13:05.053225Z",
    "updated_at": "2024-08-17T08:13:05.053225Z",
    "lead_time": 3.553
  },
  {
    "text": "对于CPU主方存储器从方而言的块传送，常称为突发猝发式传送，其块长一般固定为数据线宽度存储器字长的倍",
    "id": 6525,
    "label": [
      {
        "start": 43,
        "end": 48,
        "text": "存储器字长",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7958,
    "created_at": "2024-08-17T08:13:17.483942Z",
    "updated_at": "2024-08-17T08:13:17.483942Z",
    "lead_time": 11.384
  },
  {
    "text": "但是这种加法减法器存在两个问题",
    "id": 6526,
    "label": [
      {
        "start": 4,
        "end": 9,
        "text": "加法减法器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7959,
    "created_at": "2024-08-17T08:13:27.781087Z",
    "updated_at": "2024-08-17T08:13:27.781087Z",
    "lead_time": 9.441
  },
  {
    "text": "如果一个操作数不需要修改，而直接从总线传送到总线，那么可以通过总线旁路器把数据传出；如果一个操作数传送时需要修改，那么就借助于ALU",
    "id": 6527,
    "label": [
      {
        "start": 63,
        "end": 66,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 46,
        "end": 49,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7960,
    "created_at": "2024-08-17T08:13:49.375294Z",
    "updated_at": "2024-08-17T08:13:49.375294Z",
    "lead_time": 20.682
  },
  {
    "text": "因此，NOR闪存更适用于擦除和编程操作较少而直接执行代码的场合，尤其是纯代码存储应用",
    "id": 6528,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7961,
    "created_at": "2024-08-17T08:14:11.350992Z",
    "updated_at": "2024-08-17T08:14:11.350992Z",
    "lead_time": 20.754
  },
  {
    "text": "假定只有种基本指令，那么这种指令的操作码可用位二进制代码来定义，如表所示",
    "id": 6529,
    "label": [
      {
        "start": 23,
        "end": 26,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 22,
        "end": 23,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7962,
    "created_at": "2024-08-17T08:14:14.290328Z",
    "updated_at": "2024-08-17T08:14:14.290328Z",
    "lead_time": 2.176
  },
  {
    "text": "第级是一般机器级，也称为机器语言级，它由微程序解释机器指令系统",
    "id": 6530,
    "label": [
      {
        "start": 25,
        "end": 31,
        "text": "机器指令系统",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "机器语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7963,
    "created_at": "2024-08-17T08:14:32.343963Z",
    "updated_at": "2024-08-17T08:14:32.343963Z",
    "lead_time": 16.95
  },
  {
    "text": "查询中断在查询中断方式中，硬件不直接提供中断服务程序的入口地址，而是为所有中断服务程序安排一个公共的中断服务程序",
    "id": 6531,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "中断方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 54,
        "end": 56,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7964,
    "created_at": "2024-08-17T08:14:33.723240Z",
    "updated_at": "2024-08-17T08:14:33.723240Z",
    "lead_time": 0.186
  },
  {
    "text": "相对控制器而言，运算器接受控制器的命令而进行动作，即运算器所进行的全部操作都是由控制器发出的控制信号来指挥的，所以它是执行部件",
    "id": 6532,
    "label": [
      {
        "start": 46,
        "end": 50,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7965,
    "created_at": "2024-08-17T08:14:35.167174Z",
    "updated_at": "2024-08-17T08:14:35.167174Z",
    "lead_time": 0.163
  },
  {
    "text": "这种技术又可用于仿真其他机器指令系统，以便扩大机器的功能",
    "id": 6533,
    "label": [
      {
        "start": 12,
        "end": 18,
        "text": "机器指令系统",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7966,
    "created_at": "2024-08-17T08:14:36.350362Z",
    "updated_at": "2024-08-17T08:14:36.350362Z",
    "lead_time": 0.104
  },
  {
    "text": "静态随机存取存储器SRAM的优点是存取速度快，但存储密度和容量不如DRAM大",
    "id": 6534,
    "label": [
      {
        "start": 17,
        "end": 21,
        "text": "存取速度",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "存储密度",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7967,
    "created_at": "2024-08-17T08:14:37.375602Z",
    "updated_at": "2024-08-17T08:14:37.375602Z",
    "lead_time": 0.129
  },
  {
    "text": "从节知道，机器指令的指令周期是由数目不等的CPU周期数组成，CPU周期数的多少反映了指令动作的复杂程度，即操作控制信号的多少",
    "id": 6535,
    "label": [
      {
        "start": 53,
        "end": 59,
        "text": "操作控制信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 26,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 30,
        "end": 35,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7968,
    "created_at": "2024-08-17T08:14:38.537223Z",
    "updated_at": "2024-08-17T08:14:38.537223Z",
    "lead_time": 0.13
  },
  {
    "text": "工业上制定了一个称为RAID的标准，它分为级RAIDRAID",
    "id": 6536,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "RAID",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "RAID",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "RAID",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7969,
    "created_at": "2024-08-17T08:14:39.621919Z",
    "updated_at": "2024-08-17T08:14:39.621919Z",
    "lead_time": 0.121
  },
  {
    "text": "二者的优点是体积小，可靠性高，价格低廉，缺点是断电后不能保存信息",
    "id": 6537,
    "annotator": 1,
    "annotation_id": 7970,
    "created_at": "2024-08-17T08:14:40.708210Z",
    "updated_at": "2024-08-17T08:14:40.708210Z",
    "lead_time": 0.092
  },
  {
    "text": "没有外围设备的计算机就像缺乏五官四肢的人一样，既不能从外界接收信息，又不能对处理的结果做出表达和反应",
    "id": 6538,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7971,
    "created_at": "2024-08-17T08:14:41.929088Z",
    "updated_at": "2024-08-17T08:14:41.929088Z",
    "lead_time": 0.153
  },
  {
    "text": "在操作系统的控制下，硬件和系统软件为用户解决了上述问题，从而使应用程序的编程大大简化",
    "id": 6539,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "系统软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 31,
        "end": 35,
        "text": "应用程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7972,
    "created_at": "2024-08-17T08:14:43.259312Z",
    "updated_at": "2024-08-17T08:14:43.259312Z",
    "lead_time": 0.219
  },
  {
    "text": "使用堆栈保存现场的好处是：控制逻辑简单，保存和恢复现场的过程按先进后出顺序进行",
    "id": 6540,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "堆栈",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7973,
    "created_at": "2024-08-17T08:14:44.692011Z",
    "updated_at": "2024-08-17T08:14:44.692011Z",
    "lead_time": 0.146
  },
  {
    "text": "第一台RISC精简指令系统计算机于年在美国加州大学伯克利分校问世",
    "id": 6541,
    "label": [
      {
        "start": 7,
        "end": 13,
        "text": "精简指令系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "RISC",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7974,
    "created_at": "2024-08-17T08:14:45.763110Z",
    "updated_at": "2024-08-17T08:14:45.763110Z",
    "lead_time": 0.109
  },
  {
    "text": "因此，这种方式称为同步定时方式",
    "id": 6542,
    "label": [
      {
        "start": 9,
        "end": 11,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7975,
    "created_at": "2024-08-17T08:14:47.101252Z",
    "updated_at": "2024-08-17T08:14:47.101252Z",
    "lead_time": 0.133
  },
  {
    "text": "数字计算机使用二进制数，它们或用电位的高、低来表示，或用脉冲的有、无来表示",
    "id": 6543,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "数字计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "电位",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7976,
    "created_at": "2024-08-17T08:14:48.522998Z",
    "updated_at": "2024-08-17T08:14:48.522998Z",
    "lead_time": 0.183
  },
  {
    "text": "在此期间，工业控制机开始得到应用",
    "id": 6544,
    "annotator": 1,
    "annotation_id": 7977,
    "created_at": "2024-08-17T08:14:49.683587Z",
    "updated_at": "2024-08-17T08:14:49.683587Z",
    "lead_time": 0.079
  },
  {
    "text": "对应于每个字符窗口，所需显示字符的ASCII代码被存放在视频存储器VRAM中，以备刷新，故VRAM应有个单元存放被显示的字符信息",
    "id": 6545,
    "label": [
      {
        "start": 28,
        "end": 33,
        "text": "视频存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 22,
        "text": "ASCII",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "RAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 46,
        "end": 49,
        "text": "RAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 6,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 15,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 60,
        "end": 61,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7978,
    "created_at": "2024-08-17T08:14:50.802143Z",
    "updated_at": "2024-08-17T08:14:50.802143Z",
    "lead_time": 0.144
  },
  {
    "text": "在串行传送时，按顺序来传送表示一个数码的所有二进制位bit的脉冲信号，每次一位，通常以第一个脉冲信号表示数码的最低有效位，最后一个脉冲信号表示数码的最高有效位",
    "id": 6546,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "串行传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "二进制位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 57,
        "end": 60,
        "text": "有效位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 76,
        "end": 79,
        "text": "有效位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "bit",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 38,
        "end": 39,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7979,
    "created_at": "2024-08-17T08:14:52.422259Z",
    "updated_at": "2024-08-17T08:14:52.422259Z",
    "lead_time": 0.141
  },
  {
    "text": "由于所有部件都接到同一总线上，所以数据可以在任何两个寄存器之间，或者在任一个寄存器和ALU之间传送",
    "id": 6547,
    "label": [
      {
        "start": 26,
        "end": 29,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 45,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7980,
    "created_at": "2024-08-17T08:14:53.546111Z",
    "updated_at": "2024-08-17T08:14:53.546111Z",
    "lead_time": 0.128
  },
  {
    "text": "但是由于它只控制一条总线，故控制电路比较简单",
    "id": 6548,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "控制电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7981,
    "created_at": "2024-08-17T08:14:54.516112Z",
    "updated_at": "2024-08-17T08:14:54.516112Z",
    "lead_time": 0.082
  },
  {
    "text": "最后，确认信号的撤销又使CPU撤销地址信息",
    "id": 6549,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7982,
    "created_at": "2024-08-17T08:14:55.467394Z",
    "updated_at": "2024-08-17T08:14:55.467394Z",
    "lead_time": 0.097
  },
  {
    "text": "同步控制方式在任何情况下，已定的指令在执行时所需的机器周期数和时钟周期数都是固定不变的，称为同步控制方式",
    "id": 6550,
    "label": [
      {
        "start": 25,
        "end": 29,
        "text": "机器周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 31,
        "end": 35,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7983,
    "created_at": "2024-08-17T08:14:56.658306Z",
    "updated_at": "2024-08-17T08:14:56.658306Z",
    "lead_time": 0.163
  },
  {
    "text": "外设状态信息可能是时刻变化的，给外设的控制命令也往往会不断改变，CPU与外设交互数据一般情况下也是成批连续进行的",
    "id": 6551,
    "label": [
      {
        "start": 32,
        "end": 35,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "外设",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7984,
    "created_at": "2024-08-17T08:14:57.601099Z",
    "updated_at": "2024-08-17T08:14:57.601099Z",
    "lead_time": 0.116
  },
  {
    "text": "一旦CPU用程序询问外部设备时，将状态标志信息取至CPU进行分析",
    "id": 6552,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "外部设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7985,
    "created_at": "2024-08-17T08:14:58.544011Z",
    "updated_at": "2024-08-17T08:14:58.545526Z",
    "lead_time": 0.135
  },
  {
    "text": "图表示独立请求方式的多路型DMA控制器的原理图",
    "id": 6553,
    "label": [
      {
        "start": 3,
        "end": 9,
        "text": "独立请求方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 19,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7986,
    "created_at": "2024-08-17T08:14:59.676037Z",
    "updated_at": "2024-08-17T08:14:59.676037Z",
    "lead_time": 0.105
  },
  {
    "text": "假定一条指令流水线由五段组成，分别为取指令IF、指令译码ID、计算有效地址或执行EX、访存取数MEM、结果写寄存器堆WB",
    "id": 6554,
    "label": [
      {
        "start": 54,
        "end": 58,
        "text": "寄存器堆",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 9,
        "text": "指令流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "有效地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "指令译码",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "取指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7987,
    "created_at": "2024-08-17T08:15:00.678932Z",
    "updated_at": "2024-08-17T08:15:00.678932Z",
    "lead_time": 0.149
  },
  {
    "text": "另一个变化是发展串行SCSI，使串行数据传输率达到Mbs电缆或Gbs光纤，从而使串行SCSI成为IEEE标准的基础",
    "id": 6555,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7988,
    "created_at": "2024-08-17T08:15:01.790245Z",
    "updated_at": "2024-08-17T08:15:01.790245Z",
    "lead_time": 0.123
  },
  {
    "text": "哪行的标记与之相符，哪行即命中",
    "id": 6556,
    "annotator": 1,
    "annotation_id": 7989,
    "created_at": "2024-08-17T08:15:02.869251Z",
    "updated_at": "2024-08-17T08:15:02.869251Z",
    "lead_time": 0.086
  },
  {
    "text": "只有在有效位为时才按照上述流程操作，否则需中断当前操作先进行建表或调页",
    "id": 6557,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "有效位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 34,
        "end": 35,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7990,
    "created_at": "2024-08-17T08:15:03.825714Z",
    "updated_at": "2024-08-17T08:15:03.825714Z",
    "lead_time": 0.11
  },
  {
    "text": "当CPU响应这个中断请求时，便暂停运行主程序，并自动转移到该设备的中断服务程序",
    "id": 6558,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7991,
    "created_at": "2024-08-17T08:15:04.957298Z",
    "updated_at": "2024-08-17T08:15:04.957298Z",
    "lead_time": 0.122
  },
  {
    "text": "三是允许在写操作完成的同时启动同一行的读操作，因为芯片内的数据输出路径由SRAM到IO与数据输入路径由IO到读出放大和列写选择是分开的",
    "id": 6559,
    "label": [
      {
        "start": 36,
        "end": 40,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "读操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7992,
    "created_at": "2024-08-17T08:15:05.893288Z",
    "updated_at": "2024-08-17T08:15:05.893288Z",
    "lead_time": 0.114
  },
  {
    "text": "以可见光的形式传递和处理信息的设备称为显示设备，它是目前计算机系统中应用最广泛的人机界面设备",
    "id": 6560,
    "label": [
      {
        "start": 28,
        "end": 33,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7993,
    "created_at": "2024-08-17T08:15:06.825376Z",
    "updated_at": "2024-08-17T08:15:06.825376Z",
    "lead_time": 0.085
  },
  {
    "text": "一般来讲，取指周期中从内存读出的信息流是指令流，它流向控制器；而在执行周期中从内存读出的信息流是数据流，它由内存流向运算器",
    "id": 6561,
    "label": [
      {
        "start": 27,
        "end": 30,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "取指周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "执行周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 58,
        "end": 61,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "指令流",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 54,
        "end": 56,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7994,
    "created_at": "2024-08-17T08:15:07.867016Z",
    "updated_at": "2024-08-17T08:15:07.867016Z",
    "lead_time": 0.144
  },
  {
    "text": "解决冲突的办法，一是第I条指令停顿一拍后再启动，二是增设一个存储器，将指令和数据分别放在两个存储器中",
    "id": 6562,
    "label": [
      {
        "start": 30,
        "end": 33,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 46,
        "end": 49,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7995,
    "created_at": "2024-08-17T08:15:09.052994Z",
    "updated_at": "2024-08-17T08:15:09.052994Z",
    "lead_time": 0.116
  },
  {
    "text": "借助于汇编器，计算机本身可以自动地把符号语言表示的程序称为汇编语言程序翻译成用机器语言表示的目的程序，从而实现了程序设计工作的部分自动化",
    "id": 6563,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "汇编器",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 56,
        "end": 60,
        "text": "程序设计",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "汇编语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 39,
        "end": 43,
        "text": "机器语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 48,
        "end": 50,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7996,
    "created_at": "2024-08-17T08:15:10.083313Z",
    "updated_at": "2024-08-17T08:15:10.083313Z",
    "lead_time": 0.125
  },
  {
    "text": "总线周期类型由CnBE线上的总线命令给出",
    "id": 6564,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7997,
    "created_at": "2024-08-17T08:15:11.054051Z",
    "updated_at": "2024-08-17T08:15:11.054051Z",
    "lead_time": 0.09
  },
  {
    "text": "这种设计使磁带驱动器能在磁带往两个方向上运动时，都可以确认刚写入的数据",
    "id": 6565,
    "label": [
      {
        "start": 5,
        "end": 10,
        "text": "磁带驱动器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7998,
    "created_at": "2024-08-17T08:15:12.260624Z",
    "updated_at": "2024-08-17T08:15:12.260624Z",
    "lead_time": 0.205
  },
  {
    "text": "平均寻道时间是最大寻道时间与最小寻道时间的平均值，一般由厂家给出，目前典型的平均寻道时间小于ms",
    "id": 6566,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "平均寻道时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 38,
        "end": 44,
        "text": "平均寻道时间",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 7999,
    "created_at": "2024-08-17T08:15:13.270548Z",
    "updated_at": "2024-08-17T08:15:13.270548Z",
    "lead_time": 0.109
  },
  {
    "text": "乘积的有效数位已经规格化，由于指数处在，故没有发生上溢和下溢",
    "id": 6567,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "规格化",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 7,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8000,
    "created_at": "2024-08-17T08:15:14.149811Z",
    "updated_at": "2024-08-17T08:15:14.149811Z",
    "lead_time": 0.095
  },
  {
    "text": "D为脏位若该页在调入主存后被修改过，则D被置为，表示在该页被换出主存时应写回辅存",
    "id": 6568,
    "label": [
      {
        "start": 38,
        "end": 40,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 4,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 7,
        "text": "页",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 28,
        "end": 29,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8001,
    "created_at": "2024-08-17T08:15:15.426284Z",
    "updated_at": "2024-08-17T08:15:15.426284Z",
    "lead_time": 0.157
  },
  {
    "text": "NOR闪存的外部接口与逻辑结构下面以飞索公司现赛普拉斯公司生产的SALJ系列Mbit闪存为例，说明NOR闪存的接口和工作方式",
    "id": 6569,
    "label": [
      {
        "start": 39,
        "end": 42,
        "text": "bit",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 52,
        "end": 54,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8002,
    "created_at": "2024-08-17T08:15:16.817323Z",
    "updated_at": "2024-08-17T08:15:20.393470Z",
    "lead_time": 2.028
  },
  {
    "text": "各种不同机器的输入输出指令差别很大",
    "id": 6570,
    "label": [
      {
        "start": 7,
        "end": 13,
        "text": "输入输出指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8003,
    "created_at": "2024-08-17T08:15:31.091267Z",
    "updated_at": "2024-08-17T08:15:31.091267Z",
    "lead_time": 1.167
  },
  {
    "text": "由图看到，n个位的全加器FA可级联成一个n位的行波进位加减器",
    "id": 6571,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "全加器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 8,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 21,
        "end": 22,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 27,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8004,
    "created_at": "2024-08-17T08:15:33.241158Z",
    "updated_at": "2024-08-17T08:15:33.241158Z",
    "lead_time": 1.277
  },
  {
    "text": "另外对尾数的溢出也需要处理",
    "id": 6572,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8005,
    "created_at": "2024-08-17T08:15:35.010150Z",
    "updated_at": "2024-08-17T08:15:35.010150Z",
    "lead_time": 0.974
  },
  {
    "text": "要使流水线具有良好的性能，必须使流水线畅通流动，不发生断流",
    "id": 6573,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8006,
    "created_at": "2024-08-17T08:15:38.448143Z",
    "updated_at": "2024-08-17T08:15:38.448143Z",
    "lead_time": 2.517
  },
  {
    "text": "一个数假定用位二进制代码来表示，那么就需要有个触发器来保存这些代码",
    "id": 6574,
    "label": [
      {
        "start": 23,
        "end": 26,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 7,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8007,
    "created_at": "2024-08-17T08:15:40.513920Z",
    "updated_at": "2024-08-17T08:15:40.513920Z",
    "lead_time": 1.239
  },
  {
    "text": "一个完善的指令系统应满足如下四方面的要求：完备性完备性是指用汇编语言编写各种程序时，指令系统直接提供的指令足够使用，而不必用软件来实现",
    "id": 6575,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "汇编语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 42,
        "end": 46,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 51,
        "end": 53,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 62,
        "end": 64,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8008,
    "created_at": "2024-08-17T08:15:43.713136Z",
    "updated_at": "2024-08-17T08:15:43.713136Z",
    "lead_time": 2.457
  },
  {
    "text": "浮点指令有三个源寄存器字段",
    "id": 6576,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "源寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8009,
    "created_at": "2024-08-17T08:15:46.042009Z",
    "updated_at": "2024-08-17T08:15:46.043033Z",
    "lead_time": 1.157
  },
  {
    "text": "隐含寻址这种类型的指令，不是明显地给出操作数的地址，而是在指令中隐含着操作数的地址，如图a所示",
    "id": 6577,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8010,
    "created_at": "2024-08-17T08:16:32.489011Z",
    "updated_at": "2024-08-17T08:16:32.489011Z",
    "lead_time": 45.262
  },
  {
    "text": "年代后期，随着集成电路的出现，硬件功能不断增强，指令系统越来越丰富，除以上基本指令外，还设置了乘除运算、浮点运算、十进制运算、字符串处理等指令，指令数目多达一二百条，寻址方式也趋多样化",
    "id": 6578,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "集成电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 83,
        "end": 87,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 57,
        "end": 60,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 69,
        "end": 71,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 72,
        "end": 74,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 63,
        "end": 64,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8011,
    "created_at": "2024-08-17T08:16:36.047043Z",
    "updated_at": "2024-08-17T08:16:36.047043Z",
    "lead_time": 2.467
  },
  {
    "text": "指令的操作码和地址码用二进制代码来表示，其中地址码部分和数据一样，是二进制数的数码，而操作码部分则是二进制代码的编码",
    "id": 6579,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 50,
        "end": 53,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 56,
        "end": 58,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8012,
    "created_at": "2024-08-17T08:16:37.448004Z",
    "updated_at": "2024-08-17T08:16:37.448004Z",
    "lead_time": 0.164
  },
  {
    "text": "早期计算机使用多字长指令的目的，在于提供足够的地址位来解决访问内存任何单元的寻址问题",
    "id": 6580,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "长指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 25,
        "end": 26,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 9,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8013,
    "created_at": "2024-08-17T08:16:38.612990Z",
    "updated_at": "2024-08-17T08:16:38.612990Z",
    "lead_time": 0.137
  },
  {
    "text": "存储周期存取周期是在存储器连续读写过程中一次完整的存取操作所需的时间，即CPU连续两次访问存储器的最小间隔时间",
    "id": 6581,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "存储周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "存取操作",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "存取周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8014,
    "created_at": "2024-08-17T08:16:39.755427Z",
    "updated_at": "2024-08-17T08:16:39.755427Z",
    "lead_time": 0.132
  },
  {
    "text": "例如，若外设是一条传送位秒的同步通信线路，那么接口即每隔秒执行一次串行的输入输出操作",
    "id": 6582,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8015,
    "created_at": "2024-08-17T08:16:40.823831Z",
    "updated_at": "2024-08-17T08:16:40.823831Z",
    "lead_time": 0.121
  },
  {
    "text": "这意味着所有指令周期具有相同的节拍电位数和相同的节拍脉冲数",
    "id": 6583,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "节拍脉冲",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 19,
        "text": "节拍电位",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8016,
    "created_at": "2024-08-17T08:16:41.955643Z",
    "updated_at": "2024-08-17T08:16:41.955643Z",
    "lead_time": 0.307
  },
  {
    "text": "前面已分析了指令周期中需要的一些典型时序",
    "id": 6584,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8017,
    "created_at": "2024-08-17T08:16:42.789679Z",
    "updated_at": "2024-08-17T08:16:42.789679Z",
    "lead_time": 0.101
  },
  {
    "text": "当前的代码段寄存器CS和指令指针EIP也压入此堆栈",
    "id": 6585,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "指针",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "堆栈",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8018,
    "created_at": "2024-08-17T08:16:43.833993Z",
    "updated_at": "2024-08-17T08:16:43.835504Z",
    "lead_time": 0.136
  },
  {
    "text": "由于同步总线必须按最慢的模块来设计公共时钟，当各功能模块存取时间相差很大时，会大大损失总线效率",
    "id": 6586,
    "label": [
      {
        "start": 28,
        "end": 32,
        "text": "存取时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "同步总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8019,
    "created_at": "2024-08-17T08:16:44.893964Z",
    "updated_at": "2024-08-17T08:16:44.893964Z",
    "lead_time": 0.176
  },
  {
    "text": "例如，磁盘，用记录在盘上的磁化元表示信息",
    "id": 6587,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8020,
    "created_at": "2024-08-17T08:16:45.903180Z",
    "updated_at": "2024-08-17T08:16:45.903180Z",
    "lead_time": 0.106
  },
  {
    "text": "这种方式和我们前述例子的第二种方法类似",
    "id": 6588,
    "annotator": 1,
    "annotation_id": 8021,
    "created_at": "2024-08-17T08:16:46.916173Z",
    "updated_at": "2024-08-17T08:16:46.916227Z",
    "lead_time": 0.071
  },
  {
    "text": "通用寄存器在我们的模型中，通用寄存器有个RR，其功能是：当算术逻辑单元ALU执行算术或逻辑运算时，为ALU提供一个工作区",
    "id": 6589,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 35,
        "text": "算术逻辑单元",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 18,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 47,
        "text": "逻辑运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 50,
        "end": 53,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8022,
    "created_at": "2024-08-17T08:16:48.062944Z",
    "updated_at": "2024-08-17T08:16:48.062944Z",
    "lead_time": 0.183
  },
  {
    "text": "图中没给出译码逻辑，只暗示了BEBE与CASCAS的对应关系",
    "id": 6590,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "CAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "CAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "译码",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8023,
    "created_at": "2024-08-17T08:16:49.268094Z",
    "updated_at": "2024-08-17T08:16:49.268144Z",
    "lead_time": 0.093
  },
  {
    "text": "目前流行的图形工作站就属于图形处理子系统",
    "id": 6591,
    "annotator": 1,
    "annotation_id": 8024,
    "created_at": "2024-08-17T08:16:50.225966Z",
    "updated_at": "2024-08-17T08:16:50.225966Z",
    "lead_time": 0.071
  },
  {
    "text": "运算控制型微指令",
    "id": 6592,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8025,
    "created_at": "2024-08-17T08:16:51.180008Z",
    "updated_at": "2024-08-17T08:16:52.181424Z",
    "lead_time": 1.117
  }
]