[
  {
    "text": "在日常生活中，人们学习、工作和休息都有一个严格的作息时间",
    "id": 6593,
    "annotator": 1,
    "annotation_id": 8026,
    "created_at": "2024-08-17T11:37:46.872009Z",
    "updated_at": "2024-08-17T11:37:46.872009Z",
    "lead_time": 2.709
  },
  {
    "text": "磁表面存储器的优点：存储容量大，位价格低；记录介质可以重复使用；记录信息可以长期保存而不丢失，甚至可以脱机存档；非破坏性读出，读出时不需要再生信息",
    "id": 6594,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "磁表面存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 16,
        "end": 17,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8027,
    "created_at": "2024-08-17T11:37:49.283120Z",
    "updated_at": "2024-08-17T11:37:49.283120Z",
    "lead_time": 2.062
  },
  {
    "text": "假如采用图a所示的一位全加器FA并考虑溢出检测，那么n位行波进位加法器的延迟时间ta为其中，T为最低位上的两级“异或”门再加上溢出“异或”门的总时间，T为每级进位链的延迟时间",
    "id": 6595,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "全加器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 35,
        "text": "行波进位加法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 63,
        "end": 65,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 11,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 27,
        "end": 28,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 50,
        "end": 51,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 80,
        "end": 81,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8028,
    "created_at": "2024-08-17T11:37:50.275447Z",
    "updated_at": "2024-08-17T11:37:50.275447Z",
    "lead_time": 0.643
  },
  {
    "text": "对于将被替换出去的空间，假如其内容没有被修改过，就不必进行额外处理；否则就需把该空间存储的内容重新写入辅存，以保证辅存中数据的正确性",
    "id": 6596,
    "label": [
      {
        "start": 51,
        "end": 53,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 57,
        "end": 59,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8029,
    "created_at": "2024-08-17T11:37:51.301731Z",
    "updated_at": "2024-08-17T11:37:51.301731Z",
    "lead_time": 0.673
  },
  {
    "text": "微操作在执行部件中是最基本的操作",
    "id": 6597,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "微操作",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8030,
    "created_at": "2024-08-17T11:37:52.511163Z",
    "updated_at": "2024-08-17T11:37:52.511163Z",
    "lead_time": 0.855
  },
  {
    "text": "以中断向量号乘以作为访问IDT的偏移，读取相应的中断门陷阱门描述符表项",
    "id": 6598,
    "label": [
      {
        "start": 1,
        "end": 6,
        "text": "中断向量号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8031,
    "created_at": "2024-08-17T11:37:54.125043Z",
    "updated_at": "2024-08-17T11:37:54.125043Z",
    "lead_time": 1.315
  },
  {
    "text": "可见虚拟存储器的地址映射与地址变换过程是相当复杂的过程",
    "id": 6599,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "虚拟存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "地址映射",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "地址变换",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8032,
    "created_at": "2024-08-17T12:01:24.265742Z",
    "updated_at": "2024-08-17T12:01:24.265742Z",
    "lead_time": 1409.442
  },
  {
    "text": "当需要替换时，对这些特定行的计数值进行比较，将计数值最小的行换出，同时将这些特定行的计数器都清零",
    "id": 6600,
    "label": [
      {
        "start": 42,
        "end": 45,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8033,
    "created_at": "2024-08-17T12:01:25.658577Z",
    "updated_at": "2024-08-17T12:01:25.658577Z",
    "lead_time": 0.922
  },
  {
    "text": "由于新一代多媒体计算机的发展，图像的处理与显示技术越来越受到人们的重视",
    "id": 6601,
    "label": [
      {
        "start": 5,
        "end": 11,
        "text": "多媒体计算机",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8034,
    "created_at": "2024-08-17T12:01:30.289092Z",
    "updated_at": "2024-08-17T12:01:30.289092Z",
    "lead_time": 4.059
  },
  {
    "text": "同样，当微指令第位信息为“”时，表示向ALU发出进行“”的微命令，因而ALU就执行“”的微操作",
    "id": 6602,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 44,
        "end": 47,
        "text": "微操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8035,
    "created_at": "2024-08-17T12:01:36.416964Z",
    "updated_at": "2024-08-17T12:01:36.416964Z",
    "lead_time": 5.715
  },
  {
    "text": "图中，处理一个子任务的过程为过程段Si",
    "id": 6603,
    "annotator": 1,
    "annotation_id": 8036,
    "created_at": "2024-08-17T12:01:43.300554Z",
    "updated_at": "2024-08-17T12:01:43.300554Z",
    "lead_time": 6.384
  },
  {
    "text": "该模块按小端模式安排地址，故每个字的最低有效字节与数据线DD对应安排在低地址最低两位地址为，而每个字的最高有效字节与数据线DD对应安排在高地址最低两位地址为",
    "id": 6604,
    "label": [
      {
        "start": 41,
        "end": 44,
        "text": "位地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 74,
        "end": 77,
        "text": "位地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 58,
        "end": 61,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "端模式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 69,
        "end": 71,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 17,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 49,
        "end": 50,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8037,
    "created_at": "2024-08-17T12:11:08.436114Z",
    "updated_at": "2024-08-17T12:11:08.436114Z",
    "lead_time": 564.29
  },
  {
    "text": "实模式为中断向量表IVT，保护模式为中断描述符表IDT",
    "id": 6605,
    "label": [
      {
        "start": 4,
        "end": 9,
        "text": "中断向量表",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8038,
    "created_at": "2024-08-17T12:11:10.612991Z",
    "updated_at": "2024-08-17T12:11:10.612991Z",
    "lead_time": 1.61
  },
  {
    "text": "时间并行性概念的实现方式就是采用流水处理部件",
    "id": 6606,
    "label": [
      {
        "start": 16,
        "end": 22,
        "text": "流水处理部件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "时间并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8039,
    "created_at": "2024-08-17T12:11:12.356511Z",
    "updated_at": "2024-08-17T12:11:12.356511Z",
    "lead_time": 1.185
  },
  {
    "text": "模n补码相加的结果，不论溢出与否，最高符号位始终指示正确的符号",
    "id": 6607,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8040,
    "created_at": "2024-08-17T12:11:15.453876Z",
    "updated_at": "2024-08-17T12:11:15.453876Z",
    "lead_time": 2.588
  },
  {
    "text": "这样，不同方向的感应电势经读出放大器放大鉴别，就可判知读出的信息是“”还是“”",
    "id": 6608,
    "label": [
      {
        "start": 15,
        "end": 18,
        "text": "放大器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8041,
    "created_at": "2024-08-17T12:11:17.061755Z",
    "updated_at": "2024-08-17T12:11:17.061755Z",
    "lead_time": 1.085
  },
  {
    "text": "适配器通常简称为接口",
    "id": 6609,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "适配器",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8042,
    "created_at": "2024-08-17T12:13:34.416076Z",
    "updated_at": "2024-08-17T12:13:34.417074Z",
    "lead_time": 136.859
  },
  {
    "text": "在各寄存器之间建立数据通路的任务，是由称为操作控制器的部件来完成的",
    "id": 6610,
    "label": [
      {
        "start": 21,
        "end": 26,
        "text": "操作控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "数据通路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8043,
    "created_at": "2024-08-17T12:13:36.089980Z",
    "updated_at": "2024-08-17T12:13:36.089980Z",
    "lead_time": 1.147
  },
  {
    "text": "早期的MDA等显示方式是由BIOS的一组功能调用INTh来设置和管理的，使用位的方式码",
    "id": 6611,
    "label": [
      {
        "start": 13,
        "end": 17,
        "text": "BIOS",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 38,
        "end": 39,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8044,
    "created_at": "2024-08-17T12:14:57.310972Z",
    "updated_at": "2024-08-17T12:14:57.310972Z",
    "lead_time": 80.625
  },
  {
    "text": "二进制数是以为基数来计数，也就是“逢二进一”",
    "id": 6612,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8045,
    "created_at": "2024-08-17T12:14:58.768317Z",
    "updated_at": "2024-08-17T12:14:58.768317Z",
    "lead_time": 0.804
  },
  {
    "text": "因此，若页目录表的长度表项数是m，每个页表的最大长度表项数为n，则一个进程最多可以有mn个页",
    "id": 6613,
    "label": [
      {
        "start": 4,
        "end": 5,
        "text": "页",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "进程",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 45,
        "end": 46,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8046,
    "created_at": "2024-08-17T12:15:00.967311Z",
    "updated_at": "2024-08-17T12:15:00.968313Z",
    "lead_time": 1.646
  },
  {
    "text": "存储密度存储密度分道密度、位密度和面密度",
    "id": 6614,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "存储密度",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "存储密度",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "道密度",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "位密度",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "面密度",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8047,
    "created_at": "2024-08-17T12:15:09.436566Z",
    "updated_at": "2024-08-17T12:15:09.436566Z",
    "lead_time": 7.861
  },
  {
    "text": "此例中，突发长度BL，故在随后的四个时钟周期内分别送出一个数据字",
    "id": 6615,
    "label": [
      {
        "start": 29,
        "end": 32,
        "text": "数据字",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8048,
    "created_at": "2024-08-17T12:15:38.901384Z",
    "updated_at": "2024-08-17T12:15:38.901384Z",
    "lead_time": 28.917
  },
  {
    "text": "若定点整数的原码形式为xnxnxxxn为符号位，则原码表示的定义是式中，x原是机器数，x是真值",
    "id": 6616,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "定点整数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "机器数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "真值",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "原码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "原码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8049,
    "created_at": "2024-08-17T12:15:41.307782Z",
    "updated_at": "2024-08-17T12:15:41.307782Z",
    "lead_time": 1.874
  },
  {
    "text": "而串行传输方式在每个方向只有一个差分信号，且时钟信息嵌入在数据信号中，故不会出现定时偏移",
    "id": 6617,
    "label": [
      {
        "start": 22,
        "end": 24,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8050,
    "created_at": "2024-08-17T12:16:23.476936Z",
    "updated_at": "2024-08-17T12:16:23.476936Z",
    "lead_time": 41.543
  },
  {
    "text": "注意，数据总线DBUS上分时进行了地址传送和数据传送，所以需要个CPU周期",
    "id": 6618,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 37,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8051,
    "created_at": "2024-08-17T12:16:25.590031Z",
    "updated_at": "2024-08-17T12:16:25.590031Z",
    "lead_time": 1.698
  },
  {
    "text": "在单片机中，由于指令字较短，为了充分利用指令字长度，指令字的操作码字段和地址码字段是不固定的，即不同类型的指令有不同的划分，以便尽可能用较短的指令字长来表示越来越多的操作种类，并在越来越大的存储空间中寻址",
    "id": 6619,
    "label": [
      {
        "start": 100,
        "end": 102,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 25,
        "text": "指令字长度",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 95,
        "end": 99,
        "text": "存储空间",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 71,
        "end": 75,
        "text": "指令字长",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "单片机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "指令字",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "指令字",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 53,
        "end": 55,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8052,
    "created_at": "2024-08-17T12:16:34.203685Z",
    "updated_at": "2024-08-17T12:16:34.203685Z",
    "lead_time": 8.167
  },
  {
    "text": "从上述输入输出过程看出，问题的关键就在于：究竟什么时候数据才成为有效事实上，各种外围设备的数据传输速率相差甚大",
    "id": 6620,
    "label": [
      {
        "start": 45,
        "end": 51,
        "text": "数据传输速率",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 40,
        "end": 44,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8053,
    "created_at": "2024-08-17T12:16:38.945505Z",
    "updated_at": "2024-08-17T12:16:38.945505Z",
    "lead_time": 4.24
  },
  {
    "text": "例如，设定VESA显示模式中的方式码为h时，其分辨率为像素，颜色深度为位字节，则显示一屏画面需要KB的存储器容量",
    "id": 6621,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "VESA",
        "labels": [
          "GRP"
        ]
      },
      {
        "start": 51,
        "end": 54,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 48,
        "end": 50,
        "text": "KB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 35,
        "end": 36,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8054,
    "created_at": "2024-08-17T12:16:41.447666Z",
    "updated_at": "2024-08-17T12:16:41.447666Z",
    "lead_time": 2.079
  },
  {
    "text": "因为不论数是正或负，机器总是做加法，减法运算可变成加法运算",
    "id": 6622,
    "annotator": 1,
    "annotation_id": 8055,
    "created_at": "2024-08-17T12:16:42.569038Z",
    "updated_at": "2024-08-17T12:16:42.569038Z",
    "lead_time": 0.635
  },
  {
    "text": "算法语言比较接近数学语言，它直观通用，与具体机器无关，只要稍加学习就能掌握，便于推广使用计算机",
    "id": 6623,
    "label": [
      {
        "start": 44,
        "end": 47,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "算法",
        "labels": [
          "ALG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8056,
    "created_at": "2024-08-17T12:16:44.348753Z",
    "updated_at": "2024-08-17T12:16:44.348753Z",
    "lead_time": 1.396
  },
  {
    "text": "分段存储器模型segmentedmemorymodel每个程序均使用一组独立的地址空间，每个地址空间就是一个段，段的最大长度为B",
    "id": 6624,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 39,
        "end": 43,
        "text": "地址空间",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 46,
        "end": 50,
        "text": "地址空间",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "分段",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8057,
    "created_at": "2024-08-17T12:16:47.038999Z",
    "updated_at": "2024-08-17T12:16:47.038999Z",
    "lead_time": 2.289
  },
  {
    "text": "程序查询轮询方式多数外设每传送完一次数据总要进行一段时间的处理或准备才能传送下一个数据，因此在数据传送之前，CPU需要通过接口对目标设备的状态进行查询：如果外设已准备好传送数据则进行数据传送；如果外设未准备好传送数据，则CPU不断地查询并等待，直到外设准备好信息交互",
    "id": 6625,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 54,
        "end": 57,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 110,
        "end": 113,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 61,
        "end": 63,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 78,
        "end": 80,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 98,
        "end": 100,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 124,
        "end": 126,
        "text": "外设",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8058,
    "created_at": "2024-08-17T12:16:52.332116Z",
    "updated_at": "2024-08-17T12:16:52.332116Z",
    "lead_time": 4.848
  },
  {
    "text": "图给出了一个中断向量表实例",
    "id": 6626,
    "label": [
      {
        "start": 6,
        "end": 11,
        "text": "中断向量表",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8059,
    "created_at": "2024-08-17T12:16:53.401114Z",
    "updated_at": "2024-08-17T12:16:53.401114Z",
    "lead_time": 0.615
  },
  {
    "text": "从图中可以看出，基本的总线传输周期由T到T四个时钟周期构成，但如果某个设备来不及在四个时钟周期内完成总线操作，可以使READY信号无效或者nWAIT信号有效以增加时钟周期数",
    "id": 6627,
    "label": [
      {
        "start": 11,
        "end": 15,
        "text": "总线传输",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 43,
        "end": 47,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 81,
        "end": 85,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8060,
    "created_at": "2024-08-17T12:16:54.941038Z",
    "updated_at": "2024-08-17T12:16:54.941038Z",
    "lead_time": 1.131
  },
  {
    "text": "CPU是这条总线的主控者，但必要时可放弃总线控制权",
    "id": 6628,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 25,
        "text": "总线控制权",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8061,
    "created_at": "2024-08-17T12:16:56.455013Z",
    "updated_at": "2024-08-17T12:16:56.455013Z",
    "lead_time": 1.064
  },
  {
    "text": "在三级存储体系中，cache主存和主存辅存这两个存储层次有许多相同点",
    "id": 6629,
    "label": [
      {
        "start": 9,
        "end": 14,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "存储体",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8062,
    "created_at": "2024-08-17T12:16:57.984864Z",
    "updated_at": "2024-08-17T12:16:57.984864Z",
    "lead_time": 1.105
  },
  {
    "text": "由此可见，PCI的数据传送以猝发式传送为基本机制，单一数据传送反而成为猝发式传送的一个特例",
    "id": 6630,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "PCI",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8063,
    "created_at": "2024-08-17T12:16:59.251978Z",
    "updated_at": "2024-08-17T12:16:59.251978Z",
    "lead_time": 0.839
  },
  {
    "text": "数据库和数据库管理软件一起，组成了数据库管理系统",
    "id": 6631,
    "label": [
      {
        "start": 17,
        "end": 24,
        "text": "数据库管理系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8064,
    "created_at": "2024-08-17T12:17:00.585094Z",
    "updated_at": "2024-08-17T12:17:00.585094Z",
    "lead_time": 0.937
  },
  {
    "text": "混合表示法这种方法是把直接表示法与字段编码法混合使用，以便能综合考虑微指令字长、灵活性、执行微程序速度等方面的要求",
    "id": 6632,
    "label": [
      {
        "start": 34,
        "end": 37,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 11,
        "end": 16,
        "text": "直接表示法",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 46,
        "end": 49,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "字长",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8065,
    "created_at": "2024-08-17T12:17:03.509176Z",
    "updated_at": "2024-08-17T12:17:03.509176Z",
    "lead_time": 2.489
  },
  {
    "text": "图示出了用两个位全先行进位部件级联组成的位ALU逻辑方框图",
    "id": 6633,
    "label": [
      {
        "start": 9,
        "end": 15,
        "text": "先行进位部件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 8,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 21,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8066,
    "created_at": "2024-08-17T12:17:05.920816Z",
    "updated_at": "2024-08-17T12:17:05.920816Z",
    "lead_time": 1.975
  },
  {
    "text": "Rd指明目标寄存器地址位，共个寄存器",
    "id": 6634,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8067,
    "created_at": "2024-08-17T12:17:08.282000Z",
    "updated_at": "2024-08-17T12:17:08.282000Z",
    "lead_time": 1.877
  },
  {
    "text": "外围设备可分为输入设备、输出设备、外存设备、数据通信设备和过程控制设备几大类",
    "id": 6635,
    "label": [
      {
        "start": 29,
        "end": 35,
        "text": "过程控制设备",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 28,
        "text": "数据通信设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "输出设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "外存设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "输入设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8068,
    "created_at": "2024-08-17T12:17:09.810755Z",
    "updated_at": "2024-08-17T12:17:09.811772Z",
    "lead_time": 1.068
  },
  {
    "text": "转速为转分的磁盘的平均等待时间约为ms",
    "id": 6636,
    "label": [
      {
        "start": 9,
        "end": 15,
        "text": "平均等待时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8069,
    "created_at": "2024-08-17T12:17:11.341626Z",
    "updated_at": "2024-08-17T12:17:11.341626Z",
    "lead_time": 1.091
  },
  {
    "text": "通常的方法是，在每个字上添加一些校验位，用来确定字中出现错误的位置",
    "id": 6637,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "校验位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 11,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 24,
        "end": 25,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8070,
    "created_at": "2024-08-17T12:17:22.632114Z",
    "updated_at": "2024-08-17T12:17:22.632114Z",
    "lead_time": 10.869
  },
  {
    "text": "磁带机的记录原理与磁盘机基本相同，只是它的载磁体是一种带状塑料，称为磁带",
    "id": 6638,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "磁盘机",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8071,
    "created_at": "2024-08-17T12:17:23.895195Z",
    "updated_at": "2024-08-17T12:17:23.895195Z",
    "lead_time": 0.836
  },
  {
    "text": "最后一个问题涉及cache的写操作策略，重点是在更新时保持主存与cache的一致性",
    "id": 6639,
    "label": [
      {
        "start": 8,
        "end": 13,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 32,
        "end": 37,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8072,
    "created_at": "2024-08-17T12:17:25.622968Z",
    "updated_at": "2024-08-17T12:17:25.622968Z",
    "lead_time": 1.326
  },
  {
    "text": "段式虚地址向实存地址的变换过程如图所示",
    "id": 6640,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "虚地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "实存地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8073,
    "created_at": "2024-08-17T12:17:27.396999Z",
    "updated_at": "2024-08-17T12:17:27.396999Z",
    "lead_time": 1.353
  },
  {
    "text": "例如，地址总线是输出线，数据总线是双向传送的信号线，这两类信号线都是高电平有效",
    "id": 6641,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "地址总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "高电平",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8074,
    "created_at": "2024-08-17T12:17:28.741067Z",
    "updated_at": "2024-08-17T12:17:28.741067Z",
    "lead_time": 0.926
  },
  {
    "text": "像素越密，分辨率越高，图像越清晰",
    "id": 6642,
    "annotator": 1,
    "annotation_id": 8075,
    "created_at": "2024-08-17T12:17:29.598951Z",
    "updated_at": "2024-08-17T12:17:29.598951Z",
    "lead_time": 0.476
  },
  {
    "text": "在我们的例子中，取出的是“十进制加法”指令",
    "id": 6643,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8076,
    "created_at": "2024-08-17T12:17:30.494846Z",
    "updated_at": "2024-08-17T12:17:30.495850Z",
    "lead_time": 0.494
  },
  {
    "text": "RISC指令系统是目前计算机发展的主流，也是CISC指令系统的改进，它的最大特点是：指令条数少；指令长度固定，指令格式和寻址方式种类少；只有取数存数指令访问存储器，其余指令的操作均在寄存器之间进行",
    "id": 6644,
    "label": [
      {
        "start": 0,
        "end": 8,
        "text": "RISC指令系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 78,
        "end": 81,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 55,
        "end": 59,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "CISC",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 72,
        "end": 76,
        "text": "存数指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 60,
        "end": 64,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 91,
        "end": 94,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 48,
        "end": 50,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 84,
        "end": 86,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8077,
    "created_at": "2024-08-17T12:17:32.250870Z",
    "updated_at": "2024-08-17T12:17:32.250870Z",
    "lead_time": 1.349
  },
  {
    "text": "运算器有两个主要功能：执行所有的算术运算",
    "id": 6645,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "算术运算",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8078,
    "created_at": "2024-08-17T12:17:33.314109Z",
    "updated_at": "2024-08-17T12:17:33.316097Z",
    "lead_time": 0.594
  },
  {
    "text": "当指令执行完毕并将结果写回此目的寄存器时，该位被清除",
    "id": 6646,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 22,
        "end": 23,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8079,
    "created_at": "2024-08-17T12:17:36.234072Z",
    "updated_at": "2024-08-17T12:17:36.234072Z",
    "lead_time": 2.529
  },
  {
    "text": "由于数据通路的结构关系，微操作可分为相容性和相斥性两种",
    "id": 6647,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "微操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "数据通路",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8080,
    "created_at": "2024-08-17T12:17:39.061439Z",
    "updated_at": "2024-08-17T12:17:39.061439Z",
    "lead_time": 2.356
  },
  {
    "text": "为了达到这个目的，在所有的存储器访问中由cache满足CPU需要的部分应占很高的比例，即cache的命中率应接近于",
    "id": 6648,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 25,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 44,
        "end": 49,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 50,
        "end": 53,
        "text": "命中率",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8081,
    "created_at": "2024-08-17T12:17:40.479181Z",
    "updated_at": "2024-08-17T12:17:40.479181Z",
    "lead_time": 0.991
  },
  {
    "text": "修改内存地址，为下一次数据传送做准备",
    "id": 6649,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "内存地址",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8082,
    "created_at": "2024-08-17T12:17:41.915122Z",
    "updated_at": "2024-08-17T12:17:41.915122Z",
    "lead_time": 0.998
  },
  {
    "text": "当然，相应的硬件逻辑也就更加复杂",
    "id": 6650,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8083,
    "created_at": "2024-08-17T12:17:43.059090Z",
    "updated_at": "2024-08-17T12:17:43.059090Z",
    "lead_time": 0.749
  },
  {
    "text": "数字编码输入的优点是无重码，且输入码与内部编码的转换比较方便，缺点是代码难以记忆",
    "id": 6651,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 1,
        "end": 2,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8084,
    "created_at": "2024-08-17T12:17:44.110052Z",
    "updated_at": "2024-08-17T12:17:44.110052Z",
    "lead_time": 0.619
  },
  {
    "text": "由于外部干扰噪声将同时附加到D和D两根信号上，因而在理论上并不影响二者的差值，对外界的电磁干扰也比较小",
    "id": 6652,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "噪声",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8085,
    "created_at": "2024-08-17T12:17:45.060204Z",
    "updated_at": "2024-08-17T12:17:45.060204Z",
    "lead_time": 0.533
  },
  {
    "text": "操作码规定了对数据要执行什么操作，以及数据是流进CPU还是流出CPU",
    "id": 6653,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8086,
    "created_at": "2024-08-17T12:17:46.065719Z",
    "updated_at": "2024-08-17T12:17:46.065719Z",
    "lead_time": 0.615
  },
  {
    "text": "如果忽略了时间因素，那么我们学习计算机硬件时往往就会感到困难，这一点务请读者加以注意",
    "id": 6654,
    "label": [
      {
        "start": 16,
        "end": 21,
        "text": "计算机硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8087,
    "created_at": "2024-08-17T12:18:05.210072Z",
    "updated_at": "2024-08-17T12:18:05.210072Z",
    "lead_time": 18.615
  },
  {
    "text": "因此，一条机器指令的功能是由若干条微指令组成的序列来实现的",
    "id": 6655,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8088,
    "created_at": "2024-08-17T12:18:08.176917Z",
    "updated_at": "2024-08-17T12:18:08.176917Z",
    "lead_time": 1.732
  },
  {
    "text": "这两种操作和猝发式操作一样，主方掌管总线直到整个操作完成",
    "id": 6656,
    "label": [
      {
        "start": 18,
        "end": 20,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8089,
    "created_at": "2024-08-17T12:18:10.678870Z",
    "updated_at": "2024-08-17T12:18:10.678870Z",
    "lead_time": 1.943
  },
  {
    "text": "在异步定时中，总线周期的长度是可变的",
    "id": 6657,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "异步定时",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8090,
    "created_at": "2024-08-17T12:18:20.611791Z",
    "updated_at": "2024-08-17T12:18:20.611791Z",
    "lead_time": 9.398
  },
  {
    "text": "节拍电位表示一个CPU周期的时间，而节拍脉冲把一个CPU周期划分成几个较小的时间间隔",
    "id": 6658,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "节拍电位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 13,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 25,
        "end": 30,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "节拍脉冲",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8091,
    "created_at": "2024-08-17T12:18:24.341930Z",
    "updated_at": "2024-08-17T12:18:24.341930Z",
    "lead_time": 3.336
  },
  {
    "text": "由于原码变反码很容易实现触发器互补输出端得到，所以用反码作为过渡，就可以很容易得到补码",
    "id": 6659,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "反码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "反码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "原码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8092,
    "created_at": "2024-08-17T12:18:25.971899Z",
    "updated_at": "2024-08-17T12:18:25.971899Z",
    "lead_time": 1.247
  },
  {
    "text": "因此习惯上将属于击打式打印方式的机种称为“打印机”",
    "id": 6660,
    "label": [
      {
        "start": 21,
        "end": 24,
        "text": "打印机",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8093,
    "created_at": "2024-08-17T12:20:47.887084Z",
    "updated_at": "2024-08-17T12:20:47.887084Z",
    "lead_time": 141.506
  },
  {
    "text": "因此每一个基本的CAS单元的延迟时间为T单位",
    "id": 6661,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "CAS",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8094,
    "created_at": "2024-08-17T12:22:04.582645Z",
    "updated_at": "2024-08-17T12:22:04.582645Z",
    "lead_time": 76.325
  },
  {
    "text": "上述这些寄存器用来暂存一个计算机字",
    "id": 6662,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "计算机字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8095,
    "created_at": "2024-08-17T12:23:05.319362Z",
    "updated_at": "2024-08-17T12:23:05.319362Z",
    "lead_time": 59.826
  },
  {
    "text": "换句话说，在某一段时间内只能为一个设备服务",
    "id": 6663,
    "annotator": 1,
    "annotation_id": 8096,
    "created_at": "2024-08-17T12:23:24.332515Z",
    "updated_at": "2024-08-17T12:23:24.332515Z",
    "lead_time": 17.713
  },
  {
    "text": "由于在刷新的过程中不允许读写操作，集中式刷新策略存在“死时间”",
    "id": 6664,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8097,
    "created_at": "2024-08-17T12:23:26.732441Z",
    "updated_at": "2024-08-17T12:23:26.732441Z",
    "lead_time": 1.52
  },
  {
    "text": "控制器的主要功能有：从指令cache中取出一条指令，并指出下一条指令在指令cache中的位置",
    "id": 6665,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 18,
        "text": "指令cache",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 42,
        "text": "指令cache",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8098,
    "created_at": "2024-08-17T12:23:32.147170Z",
    "updated_at": "2024-08-17T12:23:32.147170Z",
    "lead_time": 4.563
  },
  {
    "text": "假定串行数据是由位时间组成的，那么传送比特需要个位时间",
    "id": 6666,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 25,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 9,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8099,
    "created_at": "2024-08-17T12:23:57.650694Z",
    "updated_at": "2024-08-17T12:23:57.650694Z",
    "lead_time": 24.189
  },
  {
    "text": "这两种方法都能对准到点，由此看出，减和加是等价的",
    "id": 6667,
    "annotator": 1,
    "annotation_id": 8100,
    "created_at": "2024-08-17T12:23:59.020739Z",
    "updated_at": "2024-08-17T12:23:59.020739Z",
    "lead_time": 0.924
  },
  {
    "text": "狭义的ROM仅指掩模ROM",
    "id": 6668,
    "label": [
      {
        "start": 8,
        "end": 13,
        "text": "掩模ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8101,
    "created_at": "2024-08-17T12:24:03.978657Z",
    "updated_at": "2024-08-17T12:24:03.980170Z",
    "lead_time": 4.43
  },
  {
    "text": "若不符，则未命中，由主存读取所要求的字",
    "id": 6669,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 19,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8102,
    "created_at": "2024-08-17T12:24:46.697772Z",
    "updated_at": "2024-08-17T12:24:46.697772Z",
    "lead_time": 42.228
  },
  {
    "text": "根据表所示的真值表，三个输入端和两个输出端可按如下逻辑方程进行联系：SiAiBiCiCiAiBiBiCiCiAiAiBiAiBiCi按此表达式组成的FA示于图a，进位链采用个与门和个或门",
    "id": 6670,
    "label": [
      {
        "start": 87,
        "end": 89,
        "text": "与门",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "真值",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8103,
    "created_at": "2024-08-17T12:24:51.361811Z",
    "updated_at": "2024-08-17T12:24:51.361811Z",
    "lead_time": 4.208
  },
  {
    "text": "位密度是磁道单位长度上能记录的二进制代码位数，单位为位英寸",
    "id": 6671,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "磁道",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "位密度",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 20,
        "end": 21,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 27,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8104,
    "created_at": "2024-08-17T12:24:57.338402Z",
    "updated_at": "2024-08-17T12:24:57.338402Z",
    "lead_time": 5.489
  },
  {
    "text": "考虑到低成本比可靠性更重要，RAID未采用奇偶校验等冗余技术",
    "id": 6672,
    "label": [
      {
        "start": 21,
        "end": 25,
        "text": "奇偶校验",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "RAID",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8105,
    "created_at": "2024-08-17T12:25:00.132768Z",
    "updated_at": "2024-08-17T12:25:00.132768Z",
    "lead_time": 2.25
  },
  {
    "text": "注意，程序中的指令通常按顺序执行，所以这些指令是顺次放在存储器里",
    "id": 6673,
    "label": [
      {
        "start": 28,
        "end": 31,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8106,
    "created_at": "2024-08-17T12:25:03.363734Z",
    "updated_at": "2024-08-17T12:25:03.363734Z",
    "lead_time": 2.743
  },
  {
    "text": "后面讲到的段寻址方式中，就采用了段基址寄存器，它提供了一个范围很大的存储空间",
    "id": 6674,
    "label": [
      {
        "start": 17,
        "end": 22,
        "text": "基址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "存储空间",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8107,
    "created_at": "2024-08-17T12:25:08.824975Z",
    "updated_at": "2024-08-17T12:25:08.824975Z",
    "lead_time": 4.959
  },
  {
    "text": "此寄存器的内容加上形式地址A就产生有效地址EA",
    "id": 6675,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "形式地址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "有效地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8108,
    "created_at": "2024-08-17T12:26:01.754767Z",
    "updated_at": "2024-08-17T12:26:01.754767Z",
    "lead_time": 52.373
  },
  {
    "text": "来自通道的中断有两种，一种是数据传送结束中断，另一种是故障中断",
    "id": 6676,
    "label": [
      {
        "start": 5,
        "end": 7,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8109,
    "created_at": "2024-08-17T12:26:05.458154Z",
    "updated_at": "2024-08-17T12:26:05.458154Z",
    "lead_time": 3.16
  },
  {
    "text": "例如，R型和I型格式的前个字段长度相等，并且名称也一样；I型格式的第四个字段和R型后三个字段的长度相等",
    "id": 6677,
    "label": [
      {
        "start": 13,
        "end": 15,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8110,
    "created_at": "2024-08-17T12:26:11.344881Z",
    "updated_at": "2024-08-17T12:26:11.344881Z",
    "lead_time": 5.329
  },
  {
    "text": "表比较了传统异步DRAM和SDRAM的功能差异",
    "id": 6678,
    "label": [
      {
        "start": 6,
        "end": 12,
        "text": "异步DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 18,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8111,
    "created_at": "2024-08-17T12:26:15.686727Z",
    "updated_at": "2024-08-17T12:26:15.686727Z",
    "lead_time": 3.792
  },
  {
    "text": "目前由于大规模集成电路工艺的发展，很多厂家直接生产大规模集成电路的DMA控制器",
    "id": 6679,
    "label": [
      {
        "start": 33,
        "end": 39,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "集成电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "集成电路",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8112,
    "created_at": "2024-08-17T12:26:17.734798Z",
    "updated_at": "2024-08-17T12:26:17.734798Z",
    "lead_time": 1.555
  },
  {
    "text": "目前已经出现了多种型号的单片专用机及嵌入式单片机，用于测试或控制，成为计算机应用领域中最热门的产品",
    "id": 6680,
    "label": [
      {
        "start": 21,
        "end": 24,
        "text": "单片机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8113,
    "created_at": "2024-08-17T12:26:20.632666Z",
    "updated_at": "2024-08-17T12:26:20.632666Z",
    "lead_time": 2.267
  },
  {
    "text": "计算机所以能够准确、迅速、有条不紊地工作，正是因为在CPU中有一个时序信号产生器",
    "id": 6681,
    "label": [
      {
        "start": 33,
        "end": 40,
        "text": "时序信号产生器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8114,
    "created_at": "2024-08-17T12:26:30.034814Z",
    "updated_at": "2024-08-17T12:26:30.034814Z",
    "lead_time": 8.931
  },
  {
    "text": "面密度是位密度和道密度的乘积，单位为位英寸",
    "id": 6682,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "道密度",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "位密度",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 18,
        "end": 19,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8115,
    "created_at": "2024-08-17T12:26:39.069946Z",
    "updated_at": "2024-08-17T12:26:39.069946Z",
    "lead_time": 8.488
  },
  {
    "text": "例如，尾数超出规定的位的多余位数字是，多余位的值超过规定的最低有效位值的一半，故最低有效位应增",
    "id": 6683,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "有效位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 42,
        "end": 45,
        "text": "有效位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 11,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 15,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 21,
        "end": 22,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8116,
    "created_at": "2024-08-17T12:26:50.310686Z",
    "updated_at": "2024-08-17T12:26:50.310686Z",
    "lead_time": 10.689
  },
  {
    "text": "如果CPU写cache未命中，为了包含欲写字的主存块在cache分配一行，将此块整个复制到cache后对其进行修改",
    "id": 6684,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 11,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 27,
        "end": 32,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 45,
        "end": 50,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "主存块",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 22,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8117,
    "created_at": "2024-08-17T12:26:53.305021Z",
    "updated_at": "2024-08-17T12:26:53.305021Z",
    "lead_time": 2.438
  },
  {
    "text": "为支持虚存的替换，通常在页表或段表的每一表项中设置一个修改位，标识该表项所对应的主存页或段空间在被调入主存后是否被修改过",
    "id": 6685,
    "label": [
      {
        "start": 40,
        "end": 42,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "修改位",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 51,
        "end": 53,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "虚存",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "段表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 43,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8118,
    "created_at": "2024-08-17T12:27:01.625432Z",
    "updated_at": "2024-08-17T12:27:01.625432Z",
    "lead_time": 7.766
  },
  {
    "text": "命令寄存器本身并不占据单独的存储器片内地址，而是通过特定的地址和特定的数据组合给出不同的命令",
    "id": 6686,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8119,
    "created_at": "2024-08-17T12:27:16.951781Z",
    "updated_at": "2024-08-17T12:27:16.951781Z",
    "lead_time": 14.811
  },
  {
    "text": "虚拟存储器、TLB和cache的协同操作虚拟存储器和cache系统如同一个层次结构般一起工作",
    "id": 6687,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "虚拟存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 25,
        "text": "虚拟存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 15,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 26,
        "end": 31,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "TLB",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8120,
    "created_at": "2024-08-17T12:27:57.541865Z",
    "updated_at": "2024-08-17T12:27:57.541865Z",
    "lead_time": 40.016
  },
  {
    "text": "CPU与cache之间的数据交换是以字为单位，而cache与主存之间的数据交换是以块为单位",
    "id": 6688,
    "label": [
      {
        "start": 4,
        "end": 9,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 24,
        "end": 29,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 19,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8121,
    "created_at": "2024-08-17T12:28:03.068866Z",
    "updated_at": "2024-08-17T12:28:03.068866Z",
    "lead_time": 4.925
  },
  {
    "text": "IO模块的具体任务如下：从通道接受通道指令，控制外围设备完成所要求的操作",
    "id": 6689,
    "label": [
      {
        "start": 24,
        "end": 28,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "IO模块",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8122,
    "created_at": "2024-08-17T12:28:04.795876Z",
    "updated_at": "2024-08-17T12:28:04.795876Z",
    "lead_time": 1.131
  },
  {
    "text": "因此，串行信号在有些情况下传输速度反而更高",
    "id": 6690,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8123,
    "created_at": "2024-08-17T12:28:05.887665Z",
    "updated_at": "2024-08-17T12:28:05.887665Z",
    "lead_time": 0.515
  },
  {
    "text": "为了进一步扩展主存的信息交换能力，提出了多口存储器结构",
    "id": 6691,
    "label": [
      {
        "start": 22,
        "end": 25,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8124,
    "created_at": "2024-08-17T12:28:07.142809Z",
    "updated_at": "2024-08-17T12:28:07.142809Z",
    "lead_time": 0.636
  },
  {
    "text": "而计算机处理的结果又可以通过语音合成器变成声音输出，以实现真正的“人机对话”",
    "id": 6692,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8125,
    "created_at": "2024-08-17T12:28:08.498307Z",
    "updated_at": "2024-08-17T12:28:08.498307Z",
    "lead_time": 0.716
  },
  {
    "text": "浮点数的阶码运算浮点乘除法中，对阶码的运算有、、两阶码求和、两阶码求差四种，运算时还必须检查结果是否溢出",
    "id": 6693,
    "label": [
      {
        "start": 50,
        "end": 52,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8126,
    "created_at": "2024-08-17T12:28:11.606884Z",
    "updated_at": "2024-08-17T12:28:11.607899Z",
    "lead_time": 2.619
  },
  {
    "text": "本章小结总线是构成计算机系统的互联机构，是多个系统功能部件之间进行数据传送的公共通道，并在争用资源的基础上进行工作",
    "id": 6694,
    "label": [
      {
        "start": 9,
        "end": 14,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8127,
    "created_at": "2024-08-17T12:28:13.170111Z",
    "updated_at": "2024-08-17T12:28:13.170111Z",
    "lead_time": 1.04
  },
  {
    "text": "在三级存储系统中，cache用于提升访问速度，以便使存取速度和CPU的运算速度相匹配；外存储器则主要解决存储容量问题，以满足计算机的大容量存储要求；主存储器介于cache与外存之间，要求选取适当的存储容量和存取周期，使它能容纳系统的核心软件和较多的用户程序",
    "id": 6695,
    "label": [
      {
        "start": 43,
        "end": 47,
        "text": "外存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 14,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 80,
        "end": 85,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 103,
        "end": 107,
        "text": "存取周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 124,
        "end": 128,
        "text": "用户程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "存储系统",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "存取速度",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 52,
        "end": 56,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 98,
        "end": 102,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 74,
        "end": 78,
        "text": "主存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 62,
        "end": 65,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 118,
        "end": 120,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 86,
        "end": 88,
        "text": "外存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8128,
    "created_at": "2024-08-17T12:28:19.181706Z",
    "updated_at": "2024-08-17T12:28:19.181706Z",
    "lead_time": 1.596
  },
  {
    "text": "中央仲裁器不仅采样每个设备的nREQ信号线，而且采样公共的nFRAME和nIRDY信号线",
    "id": 6696,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "仲裁器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "FRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8129,
    "created_at": "2024-08-17T12:28:26.321059Z",
    "updated_at": "2024-08-17T12:28:26.321059Z",
    "lead_time": 6.455
  },
  {
    "text": "突发访问时先激活一行，然后按照一定的顺序依次发出列选择信号，访问相应的目标存储单元",
    "id": 6697,
    "label": [
      {
        "start": 37,
        "end": 41,
        "text": "存储单元",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8130,
    "created_at": "2024-08-17T12:28:30.570960Z",
    "updated_at": "2024-08-17T12:28:30.570960Z",
    "lead_time": 3.721
  },
  {
    "text": "舍入处理在对阶或向右规格化时，尾数要向右移位，这样，被右移的尾数的低位部分会被丢掉，从而造成一定误差，因此要进行舍入处理",
    "id": 6698,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "舍入处理",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 56,
        "end": 60,
        "text": "舍入处理",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "规格化",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "右移",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "右移",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "对阶",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 21,
        "end": 22,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 34,
        "end": 35,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8131,
    "created_at": "2024-08-17T12:28:35.865367Z",
    "updated_at": "2024-08-17T12:28:35.865367Z",
    "lead_time": 4.799
  },
  {
    "text": "硒鼓在未被激光束扫描之前，首先在黑暗中充电，使鼓表面均匀地沉积一层电荷",
    "id": 6699,
    "annotator": 1,
    "annotation_id": 8132,
    "created_at": "2024-08-17T12:28:37.372730Z",
    "updated_at": "2024-08-17T12:28:37.372730Z",
    "lead_time": 0.978
  },
  {
    "text": "而且，闪存内部有状态机，需要有状态控制逻辑，并且通过定时器给出内部操作定时",
    "id": 6700,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8133,
    "created_at": "2024-08-17T12:28:38.722898Z",
    "updated_at": "2024-08-17T12:28:38.722898Z",
    "lead_time": 0.815
  },
  {
    "text": "SCSI设备分为启动设备发命令的设备和目标设备接受并响应命令的设备",
    "id": 6701,
    "annotator": 1,
    "annotation_id": 8134,
    "created_at": "2024-08-17T12:28:39.842099Z",
    "updated_at": "2024-08-17T12:28:39.842431Z",
    "lead_time": 0.573
  },
  {
    "text": "运算器和控制器是组成CPU的两大核心部件",
    "id": 6702,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8135,
    "created_at": "2024-08-17T12:28:41.145057Z",
    "updated_at": "2024-08-17T12:28:41.145057Z",
    "lead_time": 0.85
  },
  {
    "text": "但与FIFO算法不同的是，如果某个页面命中，则将该页面移动到FIFO队列入口位置页面a所在的位置",
    "id": 6703,
    "label": [
      {
        "start": 2,
        "end": 8,
        "text": "FIFO算法",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "FIFO",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "页面",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "页面",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "页面",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "队列",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8136,
    "created_at": "2024-08-17T12:28:48.524342Z",
    "updated_at": "2024-08-17T12:28:48.524342Z",
    "lead_time": 6.815
  },
  {
    "text": "而ROM常用来储存不变或基本不变的程序和数据如监控程序、引导加载程序及常数表格等",
    "id": 6704,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8137,
    "created_at": "2024-08-17T12:28:49.871032Z",
    "updated_at": "2024-08-17T12:28:49.871032Z",
    "lead_time": 0.805
  },
  {
    "text": "不同的是，QIC标准有条磁道，数据并行记录，存储容量为MBGB",
    "id": 6705,
    "label": [
      {
        "start": 22,
        "end": 26,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "MB",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "GB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "磁道",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8138,
    "created_at": "2024-08-17T12:28:54.639044Z",
    "updated_at": "2024-08-17T12:28:54.639044Z",
    "lead_time": 4.177
  },
  {
    "text": "在加、减运算过程中要检查是否产生了溢出：若阶码正常，加减运算正常结束；若阶码溢出，则要进行相应的处理",
    "id": 6706,
    "label": [
      {
        "start": 17,
        "end": 19,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8139,
    "created_at": "2024-08-17T12:28:57.067475Z",
    "updated_at": "2024-08-17T12:28:57.067475Z",
    "lead_time": 1.885
  },
  {
    "text": "由于此段值是选择符，还必须访问GDT或LDT，才得到段的基地址",
    "id": 6707,
    "label": [
      {
        "start": 29,
        "end": 31,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8140,
    "created_at": "2024-08-17T12:28:59.184516Z",
    "updated_at": "2024-08-17T12:28:59.184516Z",
    "lead_time": 1.526
  },
  {
    "text": "图像显示器有两种类型",
    "id": 6708,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "图像显示器",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8141,
    "created_at": "2024-08-17T12:29:00.508930Z",
    "updated_at": "2024-08-17T12:29:00.508930Z",
    "lead_time": 0.83
  },
  {
    "text": "在最好的情况下，虚拟地址由TLB进行转换，然后被送到cache，找到正确的数据并取回处理器",
    "id": 6709,
    "label": [
      {
        "start": 42,
        "end": 45,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 31,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "虚拟地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "TLB",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8142,
    "created_at": "2024-08-17T12:29:02.745903Z",
    "updated_at": "2024-08-17T12:29:02.745903Z",
    "lead_time": 1.737
  },
  {
    "text": "假设有两个规格化的浮点数x，y第章运算方法和运算器当此二数相加时，因x具有较小的阶码，首先应使它向Y对阶，从而得到x，然后尾数再相加，即其结果要进行规格化，将尾数向右移位，阶码增",
    "id": 6710,
    "label": [
      {
        "start": 22,
        "end": 25,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "规格化",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 74,
        "end": 77,
        "text": "规格化",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 82,
        "end": 84,
        "text": "右移",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 61,
        "end": 63,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 79,
        "end": 81,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 86,
        "end": 88,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "对阶",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 84,
        "end": 85,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8143,
    "created_at": "2024-08-17T12:29:14.394773Z",
    "updated_at": "2024-08-17T12:29:14.394773Z",
    "lead_time": 10.99
  },
  {
    "text": "如分辨率为，级颜色深度的图像，存储容量MbitMB",
    "id": 6711,
    "label": [
      {
        "start": 15,
        "end": 19,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "bit",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "MB",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8144,
    "created_at": "2024-08-17T12:29:17.015162Z",
    "updated_at": "2024-08-17T12:29:17.015162Z",
    "lead_time": 1.996
  },
  {
    "text": "但是人们习惯的算法对机器并不完全适用",
    "id": 6712,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "算法",
        "labels": [
          "ALG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8145,
    "created_at": "2024-08-17T12:29:18.865913Z",
    "updated_at": "2024-08-17T12:29:18.865913Z",
    "lead_time": 1.325
  },
  {
    "text": "如何实现按序完成呢因为执行段有多个功能部件，很可能出现无序完成的情况",
    "id": 6713,
    "annotator": 1,
    "annotation_id": 8146,
    "created_at": "2024-08-17T12:29:20.648571Z",
    "updated_at": "2024-08-17T12:29:20.648571Z",
    "lead_time": 1.243
  },
  {
    "text": "专用和通用是根据计算机的效率、速度、价格、运行的经济性和适应性来划分的",
    "id": 6714,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8147,
    "created_at": "2024-08-17T12:29:23.570804Z",
    "updated_at": "2024-08-17T12:29:23.570804Z",
    "lead_time": 2.45
  },
  {
    "text": "同步定时适用于总线长度较短、各功能模块存取时间比较接近的情况",
    "id": 6715,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "同步定时",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "存取时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8148,
    "created_at": "2024-08-17T12:29:59.801339Z",
    "updated_at": "2024-08-17T12:29:59.801339Z",
    "lead_time": 35.681
  },
  {
    "text": "通常由片内地址线的最高一位或若干位选择存储体",
    "id": 6716,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "存储体",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 13,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 17,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8149,
    "created_at": "2024-08-17T12:30:03.062196Z",
    "updated_at": "2024-08-17T12:30:03.062196Z",
    "lead_time": 2.768
  },
  {
    "text": "这种转换借助汇编器可以自动完成，汇编器的作用相当于一个“翻译”",
    "id": 6717,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "汇编器",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "汇编器",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8150,
    "created_at": "2024-08-17T12:30:04.652812Z",
    "updated_at": "2024-08-17T12:30:04.652812Z",
    "lead_time": 1.063
  },
  {
    "text": "一旦数据线上的信号稳定，则存储器模块使确认线有效，通知CPU数据可用",
    "id": 6718,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8151,
    "created_at": "2024-08-17T12:30:06.622449Z",
    "updated_at": "2024-08-17T12:30:06.622449Z",
    "lead_time": 1.429
  },
  {
    "text": "每个长度寄存器和地址寄存器对应一个设备",
    "id": 6719,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 13,
        "text": "地址寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8152,
    "created_at": "2024-08-17T12:30:07.856314Z",
    "updated_at": "2024-08-17T12:30:07.856314Z",
    "lead_time": 0.645
  },
  {
    "text": "元件故障、噪声干扰等各种因素常常导致计算机在处理信息过程中出现错误",
    "id": 6720,
    "label": [
      {
        "start": 18,
        "end": 21,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "噪声",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8153,
    "created_at": "2024-08-17T12:30:09.814074Z",
    "updated_at": "2024-08-17T12:30:09.814074Z",
    "lead_time": 1.438
  },
  {
    "text": "换言之，指令周期是取出图取指令执行指令序列一条指令并执行这条指令的时间",
    "id": 6721,
    "label": [
      {
        "start": 17,
        "end": 21,
        "text": "指令序列",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "取指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8154,
    "created_at": "2024-08-17T12:30:13.132552Z",
    "updated_at": "2024-08-17T12:30:13.132552Z",
    "lead_time": 2.72
  },
  {
    "text": "第四代为年，大规模和超大规模集成电路计算机",
    "id": 6722,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "集成电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8155,
    "created_at": "2024-08-17T12:30:15.120777Z",
    "updated_at": "2024-08-17T12:30:15.120777Z",
    "lead_time": 1.467
  },
  {
    "text": "划分指令周期，是设计操作控制器的重要依据",
    "id": 6723,
    "label": [
      {
        "start": 10,
        "end": 15,
        "text": "操作控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8156,
    "created_at": "2024-08-17T12:30:16.958277Z",
    "updated_at": "2024-08-17T12:30:16.958277Z",
    "lead_time": 1.274
  },
  {
    "text": "当运行触发器为“”时，原始节拍脉冲TT和读写时序信号RD，WE通过门电路发送出去，变成CPU真正需要的节拍脉冲信号TT和读写时序RD，WE",
    "id": 6724,
    "label": [
      {
        "start": 51,
        "end": 57,
        "text": "节拍脉冲信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "节拍脉冲",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "时序信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "门电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8157,
    "created_at": "2024-08-17T12:30:19.938009Z",
    "updated_at": "2024-08-17T12:30:19.938009Z",
    "lead_time": 2.433
  },
  {
    "text": "对于条件转移指令，CR位字段指定条件寄存器中被测试的位，选项字段指向转移发生的条件如无条件转移；计数转移；计数转移；条件是真转移；条件是假转移；等等",
    "id": 6725,
    "label": [
      {
        "start": 2,
        "end": 8,
        "text": "条件转移指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 16,
        "end": 21,
        "text": "条件寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 27,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8158,
    "created_at": "2024-08-17T12:30:24.503693Z",
    "updated_at": "2024-08-17T12:30:24.503693Z",
    "lead_time": 3.968
  },
  {
    "text": "在Pentium中通常是：由一个主适配器HBA与最多台外围设备相接，HBA也算作一个SCSI设备，由HBA经系统总线如PCI与CPU相连，如图所示",
    "id": 6726,
    "label": [
      {
        "start": 54,
        "end": 58,
        "text": "系统总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 59,
        "end": 62,
        "text": "PCI",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 63,
        "end": 66,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "适配器",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8159,
    "created_at": "2024-08-17T12:30:26.582253Z",
    "updated_at": "2024-08-17T12:30:26.582253Z",
    "lead_time": 1.52
  },
  {
    "text": "其中位用来直接给出下一条微指令的地址",
    "id": 6727,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 2,
        "end": 3,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8160,
    "created_at": "2024-08-17T12:30:28.380747Z",
    "updated_at": "2024-08-17T12:30:28.380747Z",
    "lead_time": 1.116
  },
  {
    "text": "但根据补码定义，求负数的补码还要做减法，这显然不方便，为此可通过反码来解决",
    "id": 6728,
    "label": [
      {
        "start": 32,
        "end": 34,
        "text": "反码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8161,
    "created_at": "2024-08-17T12:30:30.162875Z",
    "updated_at": "2024-08-17T12:30:30.162875Z",
    "lead_time": 1.242
  },
  {
    "text": "在IEEE标准中，舍入处理提供了四种可选办法",
    "id": 6729,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "舍入处理",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8162,
    "created_at": "2024-08-17T12:30:31.622838Z",
    "updated_at": "2024-08-17T12:30:31.623841Z",
    "lead_time": 0.896
  },
  {
    "text": "余数r是一个位的小数：rrrrr它在阵列的最下一行产生",
    "id": 6730,
    "label": [
      {
        "start": 6,
        "end": 7,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8163,
    "created_at": "2024-08-17T12:30:34.697876Z",
    "updated_at": "2024-08-17T12:30:34.697876Z",
    "lead_time": 2.524
  },
  {
    "text": "磁盘存储器的技术指标磁盘存储器的主要技术指标包括存储密度、存储容量、存取时间及数据传输率",
    "id": 6731,
    "label": [
      {
        "start": 39,
        "end": 44,
        "text": "数据传输率",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "磁盘存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 15,
        "text": "磁盘存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "存取时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "存储密度",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8164,
    "created_at": "2024-08-17T12:30:36.131832Z",
    "updated_at": "2024-08-17T12:30:36.132203Z",
    "lead_time": 0.936
  },
  {
    "text": "设置段长字段的目的是保证访问某段的地址空间时，段内地址不会超出该段长度导致地址越界而破坏其他段",
    "id": 6732,
    "label": [
      {
        "start": 23,
        "end": 27,
        "text": "段内地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "地址空间",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8165,
    "created_at": "2024-08-17T12:30:38.748585Z",
    "updated_at": "2024-08-17T12:30:38.748585Z",
    "lead_time": 2.073
  },
  {
    "text": "存储器读写总线周期以猝发式传送为基本机制，一次猝发式传送总线周期通常由一个地址期和一个或几个数据周期组成",
    "id": 6733,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "地址期",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8166,
    "created_at": "2024-08-17T12:30:46.896741Z",
    "updated_at": "2024-08-17T12:30:46.896741Z",
    "lead_time": 7.602
  },
  {
    "text": "因此，周期挪用的方法适用于IO设备读写周期大于内存存储周期的情况",
    "id": 6734,
    "label": [
      {
        "start": 13,
        "end": 17,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "存储周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "周期挪用",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "读写周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8167,
    "created_at": "2024-08-17T12:30:49.525519Z",
    "updated_at": "2024-08-17T12:30:49.525519Z",
    "lead_time": 2.094
  },
  {
    "text": "延迟转移通过编译程序来调度",
    "id": 6735,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "编译程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8168,
    "created_at": "2024-08-17T12:30:51.635790Z",
    "updated_at": "2024-08-17T12:30:51.635790Z",
    "lead_time": 1.527
  },
  {
    "text": "年Intel公司开发出Intel",
    "id": 6736,
    "label": [
      {
        "start": 1,
        "end": 8,
        "text": "Intel公司",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 11,
        "end": 16,
        "text": "Intel",
        "labels": [
          "CORP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8169,
    "created_at": "2024-08-17T12:30:53.140432Z",
    "updated_at": "2024-08-17T12:30:53.140432Z",
    "lead_time": 0.751
  },
  {
    "text": "表列出了高级语言与低级语言的性能比较",
    "id": 6737,
    "label": [
      {
        "start": 4,
        "end": 8,
        "text": "高级语言",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8170,
    "created_at": "2024-08-17T12:30:54.244083Z",
    "updated_at": "2024-08-17T12:30:54.244083Z",
    "lead_time": 0.586
  },
  {
    "text": "当一条指令执行完毕CPU接受中断请求并作出响应时，它一方面发出中断响应信号INTA，另一方面把“中断屏蔽”标志置“”，即关闭中断",
    "id": 6738,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 48,
        "end": 53,
        "text": "中断屏蔽”",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 62,
        "end": 64,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8171,
    "created_at": "2024-08-17T12:30:57.694440Z",
    "updated_at": "2024-08-17T12:30:57.694440Z",
    "lead_time": 2.888
  },
  {
    "text": "DMA方式的特点如下",
    "id": 6739,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8172,
    "created_at": "2024-08-17T12:30:59.924592Z",
    "updated_at": "2024-08-17T12:30:59.924592Z",
    "lead_time": 1.558
  },
  {
    "text": "跳跃寻址方式当程序转移执行的顺序时，指令的寻址就采取跳跃寻址方式",
    "id": 6740,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "跳跃寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 26,
        "end": 32,
        "text": "跳跃寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8173,
    "created_at": "2024-08-17T12:31:02.206747Z",
    "updated_at": "2024-08-17T12:31:02.206747Z",
    "lead_time": 1.867
  },
  {
    "text": "存放一个机器字的存储单元，通常称为字存储单元，相应的单元地址称为字地址",
    "id": 6741,
    "label": [
      {
        "start": 32,
        "end": 35,
        "text": "字地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "存储单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "存储单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "机器字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 17,
        "end": 18,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8174,
    "created_at": "2024-08-17T12:31:07.976252Z",
    "updated_at": "2024-08-17T12:31:07.976252Z",
    "lead_time": 5.175
  },
  {
    "text": "由于进位输出信号指示出当前的部分余数的符号，因此，正如前面所述，它决定下一行的操作将进行加法还是减法",
    "id": 6742,
    "annotator": 1,
    "annotation_id": 8175,
    "created_at": "2024-08-17T12:31:12.039200Z",
    "updated_at": "2024-08-17T12:31:12.039200Z",
    "lead_time": 3.474
  },
  {
    "text": "DMA控制器的基本组成一个DMA控制器，实际上是采用DMA方式的外围设备与系统总线之间的接口电路",
    "id": 6743,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 19,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 41,
        "text": "系统总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8176,
    "created_at": "2024-08-17T12:31:15.181816Z",
    "updated_at": "2024-08-17T12:31:15.181816Z",
    "lead_time": 2.504
  },
  {
    "text": "一台计算机中所有机器指令的集合，称为这台计算机的指令系统指令集",
    "id": 6744,
    "label": [
      {
        "start": 24,
        "end": 28,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8177,
    "created_at": "2024-08-17T12:31:18.987426Z",
    "updated_at": "2024-08-17T12:31:18.987426Z",
    "lead_time": 3.249
  },
  {
    "text": "其内容也是在数据传送之前由程序预置，交换的字数通常以补码形式表示",
    "id": 6745,
    "label": [
      {
        "start": 26,
        "end": 28,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 21,
        "end": 22,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8178,
    "created_at": "2024-08-17T12:31:23.118304Z",
    "updated_at": "2024-08-17T12:31:23.118304Z",
    "lead_time": 3.708
  },
  {
    "text": "但尽管如此，运算结果还是要送入通用寄存器，所以最终还是需要脉冲信号来配合",
    "id": 6746,
    "label": [
      {
        "start": 15,
        "end": 20,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8179,
    "created_at": "2024-08-17T12:31:24.442950Z",
    "updated_at": "2024-08-17T12:31:24.442950Z",
    "lead_time": 0.91
  },
  {
    "text": "由表可知，计算机进行计算时，指令必须是按一定的顺序一条接一条地进行",
    "id": 6747,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8180,
    "created_at": "2024-08-17T12:31:26.738057Z",
    "updated_at": "2024-08-17T12:31:26.738057Z",
    "lead_time": 1.775
  },
  {
    "text": "每字节中存放相应字符的ASCII值，文字表达式中的空格“”在主存中也占字节的位置",
    "id": 6748,
    "label": [
      {
        "start": 11,
        "end": 16,
        "text": "ASCII",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8181,
    "created_at": "2024-08-17T12:31:34.374722Z",
    "updated_at": "2024-08-17T12:31:34.374722Z",
    "lead_time": 7.081
  },
  {
    "text": "在这种情况下，通过判别测试字段P和执行部件的“状态条件”反馈信息，去修改微地址寄存器的内容，并按改好的内容去读下一条微指令",
    "id": 6749,
    "label": [
      {
        "start": 36,
        "end": 42,
        "text": "微地址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 15,
        "text": "判别测试字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 58,
        "end": 61,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8182,
    "created_at": "2024-08-17T12:31:42.690232Z",
    "updated_at": "2024-08-17T12:31:42.690232Z",
    "lead_time": 7.887
  },
  {
    "text": "特别是闪速存储器能提供高性能、低功耗、高可靠性以及移动性，是一种全新的存储器体系结构",
    "id": 6750,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "闪速存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8183,
    "created_at": "2024-08-17T12:31:45.574973Z",
    "updated_at": "2024-08-17T12:31:45.574973Z",
    "lead_time": 2.464
  },
  {
    "text": "大多数总线都是以相同方式构成的，其不同之处仅在于总线中数据线和地址线的宽度，以及控制线的多少及其功能",
    "id": 6751,
    "label": [
      {
        "start": 27,
        "end": 30,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "控制线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8184,
    "created_at": "2024-08-17T12:31:49.241516Z",
    "updated_at": "2024-08-17T12:31:49.241516Z",
    "lead_time": 3.18
  },
  {
    "text": "一个计算机系统，即使CPU有极高的速度，如果忽略IO速度的提升，对整个系统的性能仍然影响极大",
    "id": 6752,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8185,
    "created_at": "2024-08-17T12:31:59.655101Z",
    "updated_at": "2024-08-17T12:31:59.655101Z",
    "lead_time": 9.879
  },
  {
    "text": "支持指令流水并强调指令流水的优化使用",
    "id": 6753,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "指令流水",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "指令流水",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8186,
    "created_at": "2024-08-17T12:32:01.178063Z",
    "updated_at": "2024-08-17T12:32:01.178063Z",
    "lead_time": 0.979
  },
  {
    "text": "总线时钟频率为MHz，总线带宽是MBs",
    "id": 6754,
    "label": [
      {
        "start": 11,
        "end": 15,
        "text": "总线带宽",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "MHz",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "MBs",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "时钟频率",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8187,
    "created_at": "2024-08-17T12:32:03.488794Z",
    "updated_at": "2024-08-17T12:32:14.287046Z",
    "lead_time": 10.07
  },
  {
    "text": "例如，主存位置A处开始放一个数值列表，打算为表的每个元素加",
    "id": 6755,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8188,
    "created_at": "2024-08-17T12:32:18.517991Z",
    "updated_at": "2024-08-17T12:32:18.517991Z",
    "lead_time": 1.821
  },
  {
    "text": "有两种情况：执行异常：CPU执行一条指令过程中出现错误、故障等不正常条件引发的中断",
    "id": 6756,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8189,
    "created_at": "2024-08-17T12:32:20.814010Z",
    "updated_at": "2024-08-17T12:32:20.814010Z",
    "lead_time": 1.757
  },
  {
    "text": "指令系统中的各种条件转移或无条件转移指令，就是为了实现指令的跳跃寻址而设置的",
    "id": 6757,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 20,
        "text": "条件转移指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "跳跃寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8190,
    "created_at": "2024-08-17T12:32:22.948582Z",
    "updated_at": "2024-08-17T12:32:22.948582Z",
    "lead_time": 1.59
  },
  {
    "text": "组成操作码字段的位数一般取决于计算机指令系统的规模",
    "id": 6758,
    "label": [
      {
        "start": 18,
        "end": 22,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 9,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8191,
    "created_at": "2024-08-17T12:32:26.856641Z",
    "updated_at": "2024-08-17T12:32:26.856641Z",
    "lead_time": 3.336
  },
  {
    "text": "数据缓冲寄存器用于暂存每次传送的数据一个字",
    "id": 6759,
    "label": [
      {
        "start": 0,
        "end": 7,
        "text": "数据缓冲寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 21,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8192,
    "created_at": "2024-08-17T12:32:28.510350Z",
    "updated_at": "2024-08-17T12:32:28.510350Z",
    "lead_time": 1.091
  },
  {
    "text": "因此它们是IO系统中不同的中断事件",
    "id": 6760,
    "label": [
      {
        "start": 13,
        "end": 15,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8193,
    "created_at": "2024-08-17T12:32:29.773564Z",
    "updated_at": "2024-08-17T12:32:29.773564Z",
    "lead_time": 0.718
  },
  {
    "text": "值得注意的是，在冯诺依曼型结构的计算机中，内存中指令的寻址与数据的寻址是交替进行的",
    "id": 6761,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8194,
    "created_at": "2024-08-17T12:32:32.347062Z",
    "updated_at": "2024-08-17T12:32:32.347062Z",
    "lead_time": 1.97
  },
  {
    "text": "设备服务子程序的主要功能是：实现数据传送",
    "id": 6762,
    "label": [
      {
        "start": 5,
        "end": 7,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8195,
    "created_at": "2024-08-17T12:32:33.608864Z",
    "updated_at": "2024-08-17T12:32:33.608864Z",
    "lead_time": 0.705
  },
  {
    "text": "中断处理过程上面说明了中断向量号的获取方式，也说明了实模式与保护模式下进入中断服务子程序的途径",
    "id": 6763,
    "label": [
      {
        "start": 37,
        "end": 44,
        "text": "中断服务子程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 11,
        "end": 16,
        "text": "中断向量号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8196,
    "created_at": "2024-08-17T12:32:36.164700Z",
    "updated_at": "2024-08-17T12:32:36.164700Z",
    "lead_time": 1.999
  },
  {
    "text": "当此两位为“”时，表示不进行测试，直接按顺序控制字段第位给出的地址取下一条微指令；当第位或第位为“”时，表示要进行P或P的判别测试，根据测试结果，需要对第位的某一位或几位进行修改，然后按修改后的地址取下一条微指令",
    "id": 6764,
    "label": [
      {
        "start": 37,
        "end": 40,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 103,
        "end": 106,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 97,
        "end": 99,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 4,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 27,
        "end": 28,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 43,
        "end": 44,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 46,
        "end": 47,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 77,
        "end": 78,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 81,
        "end": 82,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 84,
        "end": 85,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8197,
    "created_at": "2024-08-17T12:32:42.500299Z",
    "updated_at": "2024-08-17T12:32:42.500299Z",
    "lead_time": 5.75
  },
  {
    "text": "但是二者有效地址的计算方法是相同的",
    "id": 6765,
    "label": [
      {
        "start": 4,
        "end": 8,
        "text": "有效地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8198,
    "created_at": "2024-08-17T12:32:44.342637Z",
    "updated_at": "2024-08-17T12:32:44.342637Z",
    "lead_time": 1.19
  },
  {
    "text": "实模式是位寻址，中断服务子程序入口地址段，偏移的段寄存器和段内偏移量各为位",
    "id": 6766,
    "label": [
      {
        "start": 25,
        "end": 28,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 15,
        "text": "中断服务子程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "段内偏移",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 4,
        "end": 5,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 37,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8199,
    "created_at": "2024-08-17T12:32:50.475638Z",
    "updated_at": "2024-08-17T12:32:50.475638Z",
    "lead_time": 5.536
  },
  {
    "text": "这样，算术逻辑操作就可以在一步的控制之内完成",
    "id": 6767,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "逻辑操作",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8200,
    "created_at": "2024-08-17T12:32:51.945965Z",
    "updated_at": "2024-08-17T12:32:51.945965Z",
    "lead_time": 0.791
  },
  {
    "text": "在硬布线控制器中，某一微操作控制信号由布尔代数表达式描述的输出函数产生",
    "id": 6768,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "微操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 1,
        "end": 7,
        "text": "硬布线控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "布尔代数",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8201,
    "created_at": "2024-08-17T12:32:56.025686Z",
    "updated_at": "2024-08-17T12:32:56.025686Z",
    "lead_time": 3.472
  },
  {
    "text": "但是，内存单元的功能是存储数据，而端口的功能则是辅助CPU与外设交互，故端口中的数据并不是静态的，而是动态变化的",
    "id": 6769,
    "label": [
      {
        "start": 26,
        "end": 29,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "内存单元",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "外设",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8202,
    "created_at": "2024-08-17T12:33:02.068711Z",
    "updated_at": "2024-08-17T12:33:02.068711Z",
    "lead_time": 5.499
  },
  {
    "text": "SRAM是用半导体管的“导通”或“截止”来记忆的，只要不掉电，储存信息就不会丢失",
    "id": 6770,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "半导体",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8203,
    "created_at": "2024-08-17T12:34:36.808047Z",
    "updated_at": "2024-08-17T12:34:36.808047Z",
    "lead_time": 94.033
  },
  {
    "text": "随着集成电路的发展和计算机应用领域的不断扩大，年代后期开始出现系列计算机",
    "id": 6771,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "集成电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8204,
    "created_at": "2024-08-17T12:34:38.868323Z",
    "updated_at": "2024-08-17T12:34:38.868323Z",
    "lead_time": 1.534
  },
  {
    "text": "对一个CPU周期而言，也有操作控制信号的多少与出现的先后问题",
    "id": 6772,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 19,
        "text": "操作控制信号",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8205,
    "created_at": "2024-08-17T12:34:41.048287Z",
    "updated_at": "2024-08-17T12:34:41.048287Z",
    "lead_time": 1.552
  },
  {
    "text": "在段页式虚拟存储系统中，每道程序均通过一个段表和多个页表进行两级再定位",
    "id": 6773,
    "label": [
      {
        "start": 1,
        "end": 10,
        "text": "段页式虚拟存储系统",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "再定位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "段表",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8206,
    "created_at": "2024-08-17T12:34:46.396805Z",
    "updated_at": "2024-08-17T12:34:46.396805Z",
    "lead_time": 4.715
  },
  {
    "text": "其印字分辨率达到每英寸个点以上，缓冲存储器容量一般在MB以上，对汉字或图形图像输出，是理想的输出设备，因而在办公自动化及轻印刷系统中得到了广泛的应用",
    "id": 6774,
    "label": [
      {
        "start": 46,
        "end": 50,
        "text": "输出设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "MB",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "汉字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8207,
    "created_at": "2024-08-17T12:34:52.963909Z",
    "updated_at": "2024-08-17T12:34:52.963909Z",
    "lead_time": 5.932
  },
  {
    "text": "后者用来管理CPU对主存和cache的存取操作",
    "id": 6775,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 18,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "存取操作",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8208,
    "created_at": "2024-08-17T12:34:57.222880Z",
    "updated_at": "2024-08-17T12:34:57.222880Z",
    "lead_time": 3.678
  },
  {
    "text": "当中断处理完毕后，CPU又返回到原来执行的任务，并从其停止的地方开始执行程序",
    "id": 6776,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8209,
    "created_at": "2024-08-17T12:35:27.320333Z",
    "updated_at": "2024-08-17T12:35:27.320333Z",
    "lead_time": 29.533
  },
  {
    "text": "即HOST桥根据CPU提供给这两个寄存器的值，生成PCI总线的配置读写周期，完成配置数据的读出或写入操作",
    "id": 6777,
    "label": [
      {
        "start": 1,
        "end": 6,
        "text": "HOST桥",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 30,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "读写周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8210,
    "created_at": "2024-08-17T12:35:30.188473Z",
    "updated_at": "2024-08-17T12:35:30.188473Z",
    "lead_time": 2.274
  },
  {
    "text": "通过桥将两类不同的总线“粘合”在一起的技术特别适合于系统的升级换代",
    "id": 6778,
    "label": [
      {
        "start": 9,
        "end": 11,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 3,
        "text": "桥",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8211,
    "created_at": "2024-08-17T12:35:32.325889Z",
    "updated_at": "2024-08-17T12:35:32.325889Z",
    "lead_time": 1.515
  },
  {
    "text": "当代流行的标准总线追求与结构、CPU、技术无关的开发标准",
    "id": 6779,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8212,
    "created_at": "2024-08-17T12:35:34.623345Z",
    "updated_at": "2024-08-17T12:35:34.623345Z",
    "lead_time": 1.786
  },
  {
    "text": "CPU取得向量号后自动乘以，作为访问IVT的偏移，读取IVT相应表项，将段地址和偏移量设置到CS和IP寄存器，从而进入相应的中断控制器中断控制器中断服务子程序",
    "id": 6780,
    "label": [
      {
        "start": 51,
        "end": 54,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 72,
        "end": 79,
        "text": "中断服务子程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 62,
        "end": 67,
        "text": "中断控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 67,
        "end": 72,
        "text": "中断控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "偏移量",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8213,
    "created_at": "2024-08-17T12:35:39.629987Z",
    "updated_at": "2024-08-17T12:35:39.629987Z",
    "lead_time": 4.44
  },
  {
    "text": "链式查询方式的优点是，只用很少几根线就能按一定优先次序实现总线仲裁，并且这种链式结构很容易扩充设备",
    "id": 6781,
    "label": [
      {
        "start": 29,
        "end": 31,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8214,
    "created_at": "2024-08-17T12:36:31.540279Z",
    "updated_at": "2024-08-17T12:36:31.540279Z",
    "lead_time": 51.239
  },
  {
    "text": "一个虚地址由段号、段内页号和页内偏移量构成",
    "id": 6782,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "虚地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 19,
        "text": "页内偏移量",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "段号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "页号",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8215,
    "created_at": "2024-08-17T12:36:33.142297Z",
    "updated_at": "2024-08-17T12:36:33.142297Z",
    "lead_time": 1.141
  },
  {
    "text": "读命令通过在时钟上升沿发出下列信号组合发出：CS、RAS、CAS、WE",
    "id": 6783,
    "label": [
      {
        "start": 29,
        "end": 32,
        "text": "CAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "RAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8216,
    "created_at": "2024-08-17T12:36:38.158941Z",
    "updated_at": "2024-08-17T12:36:38.158941Z",
    "lead_time": 4.535
  },
  {
    "text": "实际的中断过程还要复杂一些，图示出了一个典型的向量中断处理过程的详细流程图",
    "id": 6784,
    "label": [
      {
        "start": 23,
        "end": 27,
        "text": "向量中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8217,
    "created_at": "2024-08-17T12:36:40.725796Z",
    "updated_at": "2024-08-17T12:36:40.725796Z",
    "lead_time": 2.103
  },
  {
    "text": "直接寻址直接寻址是一种基本的寻址方法，其特点是：在指令格式的地址字段中直接指出操作数在内存的地址A",
    "id": 6785,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "直接寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "地址字段",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "直接寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8218,
    "created_at": "2024-08-17T12:36:44.835993Z",
    "updated_at": "2024-08-17T12:36:44.835993Z",
    "lead_time": 3.641
  },
  {
    "text": "年Apple公司公布了一种高速串行接口，希望能取代并行的SCSI接口",
    "id": 6786,
    "label": [
      {
        "start": 15,
        "end": 19,
        "text": "串行接口",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8219,
    "created_at": "2024-08-17T12:36:48.278690Z",
    "updated_at": "2024-08-17T12:36:48.278690Z",
    "lead_time": 2.95
  },
  {
    "text": "其主要部件是主轴电机和有关控制电路",
    "id": 6787,
    "label": [
      {
        "start": 13,
        "end": 17,
        "text": "控制电路",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8220,
    "created_at": "2024-08-17T12:37:02.622527Z",
    "updated_at": "2024-08-17T12:37:02.622527Z",
    "lead_time": 13.782
  },
  {
    "text": "然后由编码器产生中断源所对应的向量地址",
    "id": 6788,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8221,
    "created_at": "2024-08-17T12:37:10.376218Z",
    "updated_at": "2024-08-17T12:37:10.376218Z",
    "lead_time": 7.14
  },
  {
    "text": "程序查询方式又称为程序控制IO方式",
    "id": 6789,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "程序查询方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 17,
        "text": "程序控制IO方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8222,
    "created_at": "2024-08-17T12:37:20.391407Z",
    "updated_at": "2024-08-17T12:37:20.391407Z",
    "lead_time": 9.406
  },
  {
    "text": "现代的中央处理器通常有专门的硬件支持地址变换",
    "id": 6790,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "中央处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "地址变换",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8223,
    "created_at": "2024-08-17T12:37:22.332140Z",
    "updated_at": "2024-08-17T12:37:22.332140Z",
    "lead_time": 1.444
  },
  {
    "text": "这是因为大型计算机的软、硬件资源为多个用户所共享，而不是分给某个用户专用",
    "id": 6791,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8224,
    "created_at": "2024-08-17T12:37:24.035063Z",
    "updated_at": "2024-08-17T12:37:24.035063Z",
    "lead_time": 1.127
  },
  {
    "text": "温彻斯特磁盘是一种采用先进技术研制的可移动磁头、固定盘片的磁盘机，组装成一个不可拆卸的机电一体化整体，防尘性能好，可靠性高，因而得到了广泛的应用，成为最有代表性的硬磁盘存储器",
    "id": 6792,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "温彻斯特磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 23,
        "text": "可移动磁头",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 82,
        "end": 87,
        "text": "磁盘存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "磁盘机",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "盘片",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8225,
    "created_at": "2024-08-17T12:37:27.668703Z",
    "updated_at": "2024-08-17T12:37:27.668703Z",
    "lead_time": 3.122
  },
  {
    "text": "为了将整个n位统一处理，符号位xn放在最左位置，并用数值和分别代表正号和负号，这样，对于任意定点数xxnxnxx，在定点机中可表示为如下形式：目前计算机中多采用定点纯整数表示，因此将定点数表示的运算简称为整数运算",
    "id": 6793,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 58,
        "end": 61,
        "text": "定点机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 73,
        "end": 76,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 46,
        "end": 49,
        "text": "定点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 91,
        "end": 94,
        "text": "定点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 80,
        "end": 82,
        "text": "定点",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 7,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 21,
        "end": 22,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8226,
    "created_at": "2024-08-17T12:38:25.597963Z",
    "updated_at": "2024-08-17T12:38:25.597963Z",
    "lead_time": 57.329
  },
  {
    "text": "当微程序出现分支时，意味着微程序出现条件转移",
    "id": 6794,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8227,
    "created_at": "2024-08-17T12:38:26.879268Z",
    "updated_at": "2024-08-17T12:38:26.880270Z",
    "lead_time": 0.722
  },
  {
    "text": "计算机系统的主存习惯上被分为RAM和ROM两类",
    "id": 6795,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "RAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8228,
    "created_at": "2024-08-17T12:38:28.300236Z",
    "updated_at": "2024-08-17T12:38:28.300236Z",
    "lead_time": 0.926
  },
  {
    "text": "在直接映射方式中，将s位的主存块地址分成两部分：低r位主存区内块号作为cache的行地址，sr位区号作为标记tag与块数据一起保存在该行",
    "id": 6796,
    "label": [
      {
        "start": 1,
        "end": 7,
        "text": "直接映射方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 35,
        "end": 40,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 52,
        "end": 57,
        "text": "标记tag",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "主存块",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 41,
        "end": 44,
        "text": "行地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "块号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 27,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 47,
        "end": 48,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8229,
    "created_at": "2024-08-17T12:38:31.390949Z",
    "updated_at": "2024-08-17T12:38:31.391959Z",
    "lead_time": 2.608
  },
  {
    "text": "然后，CPU需要获取应被服务的中断源的中断服务程序入口地址，并转到相应的中断服务程序执行",
    "id": 6797,
    "label": [
      {
        "start": 19,
        "end": 25,
        "text": "中断服务程序",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 36,
        "end": 42,
        "text": "中断服务程序",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8230,
    "created_at": "2024-08-17T12:38:34.005086Z",
    "updated_at": "2024-08-17T12:38:34.005086Z",
    "lead_time": 2.029
  },
  {
    "text": "因此字模点阵只能用来构成汉字库，而不能用于机内存储",
    "id": 6798,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "点阵",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "汉字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8231,
    "created_at": "2024-08-17T12:38:38.618713Z",
    "updated_at": "2024-08-17T12:38:38.618713Z",
    "lead_time": 4.067
  },
  {
    "text": "显然，只有当接口与外设之间采用无条件传送方式时，CPU与接口之间才能采用无条件传送方式",
    "id": 6799,
    "label": [
      {
        "start": 24,
        "end": 27,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "外设",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8232,
    "created_at": "2024-08-17T12:38:40.350814Z",
    "updated_at": "2024-08-17T12:38:40.350814Z",
    "lead_time": 1.234
  },
  {
    "text": "如果外设已准备就绪，CPU便发出准备就绪信号，并送出数据",
    "id": 6800,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "外设",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8233,
    "created_at": "2024-08-17T12:38:41.578628Z",
    "updated_at": "2024-08-17T12:38:41.578628Z",
    "lead_time": 0.724
  },
  {
    "text": "每个进程所需的页数并不固定，所以页表的长度是可变的，因此通常的实现方法是把页表的基地址保存在寄存器中，而页表本身则放在主存中",
    "id": 6801,
    "label": [
      {
        "start": 46,
        "end": 49,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 59,
        "end": 61,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "进程",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 52,
        "end": 54,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 8,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8234,
    "created_at": "2024-08-17T12:38:43.110737Z",
    "updated_at": "2024-08-17T12:38:43.110737Z",
    "lead_time": 1.059
  },
  {
    "text": "这种把数的范围和精度分别表示的方法，相当于数的小数点位置随比例因子的不同而在一定范围内可以自由浮动，所以称为浮点表示法",
    "id": 6802,
    "label": [
      {
        "start": 54,
        "end": 58,
        "text": "浮点表示",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 27,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8235,
    "created_at": "2024-08-17T12:38:44.691120Z",
    "updated_at": "2024-08-17T12:38:44.691120Z",
    "lead_time": 1.015
  },
  {
    "text": "分辨率取决于显像管荧光粉的粒度、荧光屏的尺寸和CRT电子束的聚焦能力",
    "id": 6803,
    "label": [
      {
        "start": 23,
        "end": 26,
        "text": "CRT",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "电子束",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8236,
    "created_at": "2024-08-17T12:38:46.488034Z",
    "updated_at": "2024-08-17T12:38:46.488034Z",
    "lead_time": 1.331
  },
  {
    "text": "从存储器选取属于该通道程序的通道指令，经译码后向IO控制器模块发送各种命令",
    "id": 6804,
    "label": [
      {
        "start": 24,
        "end": 29,
        "text": "IO控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "译码",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8237,
    "created_at": "2024-08-17T12:38:50.110038Z",
    "updated_at": "2024-08-17T12:38:50.110038Z",
    "lead_time": 3.126
  },
  {
    "text": "不同于所有先前Pentium模式和大多数处理器所采用的结构，Pentium的指令cache位于指令译码逻辑和执行部件之间",
    "id": 6805,
    "label": [
      {
        "start": 47,
        "end": 51,
        "text": "指令译码",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 38,
        "end": 45,
        "text": "指令cache",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 45,
        "end": 46,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8238,
    "created_at": "2024-08-17T12:38:53.187673Z",
    "updated_at": "2024-08-17T12:38:53.187673Z",
    "lead_time": 2.588
  },
  {
    "text": "在上面介绍了五条典型指令的指令周期，从而使我们对一条指令的取指过程和执行过程有了一个较深刻的印象",
    "id": 6806,
    "label": [
      {
        "start": 13,
        "end": 17,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "取指",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8239,
    "created_at": "2024-08-17T12:38:55.330687Z",
    "updated_at": "2024-08-17T12:38:55.330687Z",
    "lead_time": 1.666
  },
  {
    "text": "当IR标志为“”时，表示设备发出了中断请求",
    "id": 6807,
    "label": [
      {
        "start": 17,
        "end": 21,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8240,
    "created_at": "2024-08-17T12:38:56.910685Z",
    "updated_at": "2024-08-17T12:38:56.910685Z",
    "lead_time": 1.083
  },
  {
    "text": "需要注意的是，在不同的计算机中，指令助记符的规定是不一样的",
    "id": 6808,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8241,
    "created_at": "2024-08-17T12:38:58.883954Z",
    "updated_at": "2024-08-17T12:38:58.883954Z",
    "lead_time": 1.503
  },
  {
    "text": "若cache在CPU芯片外，它的控制逻辑一般与主存控制逻辑合成在一起，称为主存chace控制器；若cache在CPU内，则由CPU提供它的控制逻辑",
    "id": 6809,
    "label": [
      {
        "start": 1,
        "end": 6,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 49,
        "end": 54,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 55,
        "end": 58,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 62,
        "end": 65,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 44,
        "end": 47,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8242,
    "created_at": "2024-08-17T12:39:08.169141Z",
    "updated_at": "2024-08-17T12:39:08.169141Z",
    "lead_time": 8.768
  },
  {
    "text": "在C周期中，如果DMA控制器有访内请求，可将地址、数据等信号送到总线上",
    "id": 6810,
    "label": [
      {
        "start": 8,
        "end": 14,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8243,
    "created_at": "2024-08-17T12:39:11.417959Z",
    "updated_at": "2024-08-17T12:39:11.417959Z",
    "lead_time": 2.72
  },
  {
    "text": "此时，EAAR，RR",
    "id": 6811,
    "annotator": 1,
    "annotation_id": 8244,
    "created_at": "2024-08-17T12:39:13.297953Z",
    "updated_at": "2024-08-17T12:39:13.297953Z",
    "lead_time": 1.405
  },
  {
    "text": "CPU响应请求，把CPU工作改成DMA操作方式，DMA控制器从CPU接管总线的控制",
    "id": 6812,
    "label": [
      {
        "start": 24,
        "end": 30,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8245,
    "created_at": "2024-08-17T12:39:16.160773Z",
    "updated_at": "2024-08-17T12:39:16.160773Z",
    "lead_time": 2.298
  },
  {
    "text": "最后，获胜者的仲裁号保留在仲裁总线上",
    "id": 6813,
    "label": [
      {
        "start": 13,
        "end": 17,
        "text": "仲裁总线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8246,
    "created_at": "2024-08-17T12:39:20.428498Z",
    "updated_at": "2024-08-17T12:39:20.428498Z",
    "lead_time": 1.257
  },
  {
    "text": "磁性材料做成的存储器是非易失性存储器",
    "id": 6814,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 18,
        "text": "非易失性存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8247,
    "created_at": "2024-08-17T12:39:21.995375Z",
    "updated_at": "2024-08-17T12:39:21.995375Z",
    "lead_time": 1.007
  },
  {
    "text": "如表所示，这些寻址方式按指令类型来分类",
    "id": 6815,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8248,
    "created_at": "2024-08-17T12:39:23.933152Z",
    "updated_at": "2024-08-17T12:39:23.933152Z",
    "lead_time": 1.396
  },
  {
    "text": "但由于有了图形加速器硬件，并在视窗驱动程序的支持下，系统的图形显示性能得到显著改善",
    "id": 6816,
    "label": [
      {
        "start": 17,
        "end": 21,
        "text": "驱动程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8249,
    "created_at": "2024-08-17T12:39:25.990439Z",
    "updated_at": "2024-08-17T12:39:25.990439Z",
    "lead_time": 1.539
  },
  {
    "text": "当磁盘存取数据时，磁头小车的平移运动驱动磁头进入指定磁道的中心位置，并精确地跟踪该磁道",
    "id": 6817,
    "label": [
      {
        "start": 1,
        "end": 3,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "磁道",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "磁道",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 31,
        "end": 32,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8250,
    "created_at": "2024-08-17T12:39:35.231775Z",
    "updated_at": "2024-08-17T12:39:35.231775Z",
    "lead_time": 8.537
  },
  {
    "text": "字符发生器ROM的高位地址来自VRAM的ASCII代码，低位地址来自光栅地址计数器的输出RARA，它具体指向这个字形点阵中的某字节",
    "id": 6818,
    "label": [
      {
        "start": 20,
        "end": 25,
        "text": "ASCII",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "字符发生器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "位地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "位地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "RAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 58,
        "end": 60,
        "text": "点阵",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 63,
        "end": 65,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8251,
    "created_at": "2024-08-17T12:39:46.026945Z",
    "updated_at": "2024-08-17T12:39:46.026945Z",
    "lead_time": 10.245
  },
  {
    "text": "自从这台计算机问世多年来，从使用器件的角度来说，计算机的发展大致经历了五代的变化",
    "id": 6819,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8252,
    "created_at": "2024-08-17T12:39:56.543074Z",
    "updated_at": "2024-08-17T12:39:56.543074Z",
    "lead_time": 9.877
  },
  {
    "text": "被授权的主方在当前总线业务一结束，即接管总线控制权，开始新的信息传送",
    "id": 6820,
    "label": [
      {
        "start": 20,
        "end": 25,
        "text": "总线控制权",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "信息传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8253,
    "created_at": "2024-08-17T12:39:58.466288Z",
    "updated_at": "2024-08-17T12:39:58.466288Z",
    "lead_time": 1.42
  },
  {
    "text": "在多级中断中，如果每一级请求线上还连接有多个中断源设备，那么在识别中断源时，还需要进一步用串行链式方式查询",
    "id": 6821,
    "label": [
      {
        "start": 22,
        "end": 25,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8254,
    "created_at": "2024-08-17T12:40:01.688637Z",
    "updated_at": "2024-08-17T12:40:01.688637Z",
    "lead_time": 2.637
  },
  {
    "text": "综上所述，外围设备的输入输出方式可用图表示",
    "id": 6822,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8255,
    "created_at": "2024-08-17T12:40:03.706180Z",
    "updated_at": "2024-08-17T12:40:03.706180Z",
    "lead_time": 1.508
  },
  {
    "text": "地址译码器输出有条选择线，称为行线，其作用是打开每个存储位元的输入与非门",
    "id": 6823,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "地址译码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "存储位元",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8256,
    "created_at": "2024-08-17T12:40:06.725897Z",
    "updated_at": "2024-08-17T12:40:06.725897Z",
    "lead_time": 2.512
  },
  {
    "text": "基址寻址被引用的专用寄存器含有一个存储器地址，地址字段含有一个相对于该地址的偏移量通常是无符号整数",
    "id": 6824,
    "label": [
      {
        "start": 17,
        "end": 20,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 13,
        "text": "专用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "基址寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "地址字段",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "偏移量",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8257,
    "created_at": "2024-08-17T12:40:09.262815Z",
    "updated_at": "2024-08-17T12:40:09.262815Z",
    "lead_time": 1.981
  },
  {
    "text": "通用计算机可分为超级计算机、大型机、服务器、PC机、单片机和多核机六类，它们的区别在于体积、简易性、功率损耗、性能指标、数据存储容量、指令系统规模和机器价格，见图",
    "id": 6825,
    "label": [
      {
        "start": 8,
        "end": 13,
        "text": "超级计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 67,
        "end": 71,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "通用计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 62,
        "end": 66,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 55,
        "end": 59,
        "text": "性能指标",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "多核机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "大型机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "单片机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "PC机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8258,
    "created_at": "2024-08-17T12:40:15.232069Z",
    "updated_at": "2024-08-17T12:40:15.232069Z",
    "lead_time": 5.4
  },
  {
    "text": "而当DMA传送时，每交换一次数据，将地址计数器加“”，从而以增量方式给出内存中要交换的一批数据的地址",
    "id": 6826,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "DMA传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 48,
        "end": 50,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8259,
    "created_at": "2024-08-17T12:40:17.912323Z",
    "updated_at": "2024-08-17T12:40:17.912323Z",
    "lead_time": 2.124
  },
  {
    "text": "为此必须具有方便灵活的输入手段，才能体现“交互式”的优越性",
    "id": 6827,
    "annotator": 1,
    "annotation_id": 8260,
    "created_at": "2024-08-17T12:40:37.001747Z",
    "updated_at": "2024-08-17T12:40:37.001747Z",
    "lead_time": 18.582
  },
  {
    "text": "实现这种方法时，每个cache行必须配置一个修改位，以反映此行是否被CPU修改过",
    "id": 6828,
    "label": [
      {
        "start": 22,
        "end": 25,
        "text": "修改位",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 16,
        "text": "cache行",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8261,
    "created_at": "2024-08-17T12:40:42.215664Z",
    "updated_at": "2024-08-17T12:40:42.215664Z",
    "lead_time": 4.73
  },
  {
    "text": "然后再对乘数y的高一位进行乘法运算，其规则同上，不过这一位乘数的权与最低位乘数的权不一样，因此被乘数x要左移一位",
    "id": 6829,
    "label": [
      {
        "start": 52,
        "end": 54,
        "text": "左移",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 10,
        "end": 11,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 28,
        "end": 29,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 37,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 55,
        "end": 56,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8262,
    "created_at": "2024-08-17T12:40:50.460971Z",
    "updated_at": "2024-08-17T12:40:50.460971Z",
    "lead_time": 7.444
  },
  {
    "text": "相对而言，外存储器速度低、容量大、价格便宜，可以由磁盘存储器、光盘存储器等非半导体器件或者固态半导体存储器构成",
    "id": 6830,
    "label": [
      {
        "start": 47,
        "end": 53,
        "text": "半导体存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 25,
        "end": 30,
        "text": "磁盘存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "外存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "半导体",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8263,
    "created_at": "2024-08-17T12:40:55.440827Z",
    "updated_at": "2024-08-17T12:40:55.440827Z",
    "lead_time": 2.507
  },
  {
    "text": "输出设备的作用是把计算机处理的结果变换为人或其他机器设备所能接收和识别的信息形式",
    "id": 6831,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "输出设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8264,
    "created_at": "2024-08-17T12:40:59.761234Z",
    "updated_at": "2024-08-17T12:40:59.761234Z",
    "lead_time": 2.453
  },
  {
    "text": "进行求补的方法就是从数的最右端a开始，由右向左，直到找出第一个“”，例如，ai，in",
    "id": 6832,
    "annotator": 1,
    "annotation_id": 8265,
    "created_at": "2024-08-17T12:41:03.428089Z",
    "updated_at": "2024-08-17T12:41:03.428089Z",
    "lead_time": 1.793
  },
  {
    "text": "这是因为容量大、价格低、体积小、可以改写的只读存储器提供了软件固化的良好物质手段",
    "id": 6833,
    "label": [
      {
        "start": 21,
        "end": 26,
        "text": "只读存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8266,
    "created_at": "2024-08-17T12:41:08.054860Z",
    "updated_at": "2024-08-17T12:41:08.055857Z",
    "lead_time": 2.84
  },
  {
    "text": "第章中央处理器在流水计算机中，指令的处理是重叠进行的，前一条指令还没有结束，第二、三条指令就陆续地开始工作",
    "id": 6834,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "中央处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 13,
        "text": "流水计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8267,
    "created_at": "2024-08-17T12:41:17.780065Z",
    "updated_at": "2024-08-17T12:41:17.780602Z",
    "lead_time": 7.865
  },
  {
    "text": "如果微程序不出现分支，那么下一条微指令的地址就直接由微地址寄存器给出",
    "id": 6835,
    "label": [
      {
        "start": 26,
        "end": 32,
        "text": "微地址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8268,
    "created_at": "2024-08-17T12:41:24.037185Z",
    "updated_at": "2024-08-17T12:41:24.037185Z",
    "lead_time": 4.011
  },
  {
    "text": "例如，人机交换信息时使用英文字母、标点符号、十进制数及诸如，，等符号",
    "id": 6836,
    "label": [
      {
        "start": 22,
        "end": 25,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8269,
    "created_at": "2024-08-17T12:41:30.505902Z",
    "updated_at": "2024-08-17T12:41:30.505902Z",
    "lead_time": 4.418
  },
  {
    "text": "为了让CPU知晓闪存的内部操作是否完成，芯片支持多种编程擦除状态判定方法",
    "id": 6837,
    "label": [
      {
        "start": 20,
        "end": 22,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8270,
    "created_at": "2024-08-17T12:41:34.133740Z",
    "updated_at": "2024-08-17T12:41:34.133740Z",
    "lead_time": 2.57
  },
  {
    "text": "由于进行并行的独立操作，因而是一种高速工作的存储器，在科研和工程中非常有用",
    "id": 6838,
    "label": [
      {
        "start": 22,
        "end": 25,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8271,
    "created_at": "2024-08-17T12:41:36.748474Z",
    "updated_at": "2024-08-17T12:41:36.748474Z",
    "lead_time": 0.894
  },
  {
    "text": "这种磁性材料在外加磁场的作用下，其磁感应强度B与外加磁场H的关系，可用矩形磁滞回线来描述，如图所示",
    "id": 6839,
    "annotator": 1,
    "annotation_id": 8272,
    "created_at": "2024-08-17T12:41:38.791150Z",
    "updated_at": "2024-08-17T12:41:38.791150Z",
    "lead_time": 0.815
  },
  {
    "text": "当尾数不是M时须向左规格化",
    "id": 6840,
    "label": [
      {
        "start": 1,
        "end": 3,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "规格化",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8273,
    "created_at": "2024-08-17T12:41:40.790897Z",
    "updated_at": "2024-08-17T12:41:40.790897Z",
    "lead_time": 1.039
  },
  {
    "text": "因此，中断服务程序的最后必须有两条指令，即开中断指令和中断返回指令，同时在硬件上要保证中断返回指令执行以后才受理新的中断请求",
    "id": 6841,
    "label": [
      {
        "start": 3,
        "end": 9,
        "text": "中断服务程序",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 58,
        "end": 62,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "开中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8274,
    "created_at": "2024-08-17T12:41:50.548321Z",
    "updated_at": "2024-08-17T12:41:50.548321Z",
    "lead_time": 8.675
  },
  {
    "text": "处理器有个执行功能部件，三个cache和一个控制部件",
    "id": 6842,
    "label": [
      {
        "start": 14,
        "end": 19,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8275,
    "created_at": "2024-08-17T12:41:54.191123Z",
    "updated_at": "2024-08-17T12:41:54.191123Z",
    "lead_time": 2.617
  },
  {
    "text": "STO指令是RS型指令，它先访问指存取出STO指令，然后按R地址访问数存，将R写入到号单元",
    "id": 6843,
    "label": [
      {
        "start": 6,
        "end": 11,
        "text": "RS型指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "STO指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 20,
        "end": 25,
        "text": "STO指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8276,
    "created_at": "2024-08-17T12:41:56.922821Z",
    "updated_at": "2024-08-17T12:41:56.923044Z",
    "lead_time": 1.292
  },
  {
    "text": "NAND闪存不能够随机读出，所以一般不能直接用于存储在线执行的代码；但是由于其存储密度高，价格低，通常容量较大，增加NAND闪存控制器后也可用于程序代码存储",
    "id": 6844,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 39,
        "end": 43,
        "text": "存储密度",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 64,
        "end": 67,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "AND",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 59,
        "end": 62,
        "text": "AND",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 62,
        "end": 64,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 72,
        "end": 74,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8277,
    "created_at": "2024-08-17T12:41:59.715997Z",
    "updated_at": "2024-08-17T12:41:59.715997Z",
    "lead_time": 1.236
  },
  {
    "text": "如果这些粒子没有被反射掉，则反射激光束的极性是不变化的",
    "id": 6845,
    "annotator": 1,
    "annotation_id": 8278,
    "created_at": "2024-08-17T12:42:02.898812Z",
    "updated_at": "2024-08-17T12:42:02.898812Z",
    "lead_time": 1.286
  },
  {
    "text": "每个入口地址占字节",
    "id": 6846,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8279,
    "created_at": "2024-08-17T12:42:04.754941Z",
    "updated_at": "2024-08-17T12:42:04.754941Z",
    "lead_time": 0.958
  },
  {
    "text": "访存时，通过逻辑页号在反向页表中逐一查找",
    "id": 6847,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "逻辑页号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8280,
    "created_at": "2024-08-17T12:42:07.134074Z",
    "updated_at": "2024-08-17T12:42:07.134074Z",
    "lead_time": 1.356
  },
  {
    "text": "PCI适合于低成本的小系统，因此在微型机系统中得到了广泛的应用",
    "id": 6848,
    "label": [
      {
        "start": 17,
        "end": 20,
        "text": "微型机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "PCI",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8281,
    "created_at": "2024-08-17T12:42:09.518984Z",
    "updated_at": "2024-08-17T12:42:09.518984Z",
    "lead_time": 1.085
  },
  {
    "text": "总线上还接有L级cache，主存与cache控制器芯片",
    "id": 6849,
    "label": [
      {
        "start": 17,
        "end": 25,
        "text": "cache控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 13,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8282,
    "created_at": "2024-08-17T12:42:12.407070Z",
    "updated_at": "2024-08-17T12:42:12.407070Z",
    "lead_time": 1.802
  },
  {
    "text": "若在写线圈里通入相反方向的脉冲电流，就可得到相反极性的磁化元",
    "id": 6850,
    "annotator": 1,
    "annotation_id": 8283,
    "created_at": "2024-08-17T12:42:14.377774Z",
    "updated_at": "2024-08-17T12:42:14.377774Z",
    "lead_time": 0.727
  },
  {
    "text": "下面也只讲执行周期，CPU完成的动作如图所示",
    "id": 6851,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "执行周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8284,
    "created_at": "2024-08-17T12:42:16.698135Z",
    "updated_at": "2024-08-17T12:42:16.698135Z",
    "lead_time": 1.249
  },
  {
    "text": "此时仲裁逻辑可以根据两个端口的地址匹配或片选使能信号有效的时间决定对哪个端口进行存取",
    "id": 6852,
    "label": [
      {
        "start": 15,
        "end": 17,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8285,
    "created_at": "2024-08-17T12:42:17.981971Z",
    "updated_at": "2024-08-17T12:42:17.981971Z",
    "lead_time": 0.146
  },
  {
    "text": "然而，总线的排列布置与其他各类部件的连接方式对计算机系统的性能来说，将起着十分重要的作用",
    "id": 6853,
    "label": [
      {
        "start": 23,
        "end": 28,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8286,
    "created_at": "2024-08-17T12:42:19.428785Z",
    "updated_at": "2024-08-17T12:42:19.428785Z",
    "lead_time": 0.137
  },
  {
    "text": "正如我们在横格纸上按行的序号记下解题步骤一样，计算机中为了顺利运算，也必须事先把程序和数据按地址安排到存储器里去",
    "id": 6854,
    "label": [
      {
        "start": 23,
        "end": 26,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 51,
        "end": 54,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8287,
    "created_at": "2024-08-17T12:42:23.135109Z",
    "updated_at": "2024-08-17T12:42:23.135109Z",
    "lead_time": 1.903
  },
  {
    "text": "但在查询中断方式中，查找中断源和获取中断服务程序入口地址都是由软件实现的，而中断优先级则与软件查询中断源的顺序相关，因此可以更灵活地调整中断优先级",
    "id": 6855,
    "label": [
      {
        "start": 2,
        "end": 8,
        "text": "查询中断方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 24,
        "text": "中断服务程序",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "优先级",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 70,
        "end": 73,
        "text": "优先级",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 49,
        "end": 52,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 68,
        "end": 70,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8288,
    "created_at": "2024-08-17T12:42:30.764056Z",
    "updated_at": "2024-08-17T12:42:30.764056Z",
    "lead_time": 6.43
  },
  {
    "text": "但PCI标准并没有规定仲裁算法",
    "id": 6856,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "PCI",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "算法",
        "labels": [
          "ALG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8289,
    "created_at": "2024-08-17T12:42:35.048321Z",
    "updated_at": "2024-08-17T12:42:35.048321Z",
    "lead_time": 3.451
  },
  {
    "text": "读写这种多层数据光盘时，激光头每次都需要在层与层之间重新定位",
    "id": 6857,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8290,
    "created_at": "2024-08-17T12:42:39.870469Z",
    "updated_at": "2024-08-17T12:42:39.870988Z",
    "lead_time": 3.87
  },
  {
    "text": "其中任何一个可存放源操作数，也可存放结果操作数",
    "id": 6858,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "源操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8291,
    "created_at": "2024-08-17T12:42:44.741593Z",
    "updated_at": "2024-08-17T12:42:44.741593Z",
    "lead_time": 3.804
  },
  {
    "text": "存储器的任何位置既可以存放数据也可以存放指令，不过一般是将指令和数据分开存放",
    "id": 6859,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 6,
        "end": 7,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8292,
    "created_at": "2024-08-17T12:42:51.474911Z",
    "updated_at": "2024-08-17T12:42:51.474911Z",
    "lead_time": 5.689
  },
  {
    "text": "存储介质作为存储介质的基本要求，必须有两个明显区别的物理状态，分别用来表示二进制的代码和",
    "id": 6860,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "存储介质",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "存储介质",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8293,
    "created_at": "2024-08-17T12:42:54.348023Z",
    "updated_at": "2024-08-17T12:42:54.348023Z",
    "lead_time": 1.958
  },
  {
    "text": "如图所示，整个系统有如下三种不同的总线",
    "id": 6861,
    "label": [
      {
        "start": 17,
        "end": 19,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8294,
    "created_at": "2024-08-17T12:42:58.631775Z",
    "updated_at": "2024-08-17T12:42:58.631775Z",
    "lead_time": 3.491
  },
  {
    "text": "基址寻址也利用了存储器访问的局部性原理",
    "id": 6862,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 19,
        "text": "局部性原理",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "基址寻址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8295,
    "created_at": "2024-08-17T12:43:07.332933Z",
    "updated_at": "2024-08-17T12:43:07.333013Z",
    "lead_time": 8.03
  },
  {
    "text": "可以选用更高速的半导体器件，或者改善存储芯片内部结构和对外接口方式",
    "id": 6863,
    "label": [
      {
        "start": 18,
        "end": 22,
        "text": "存储芯片",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "半导体",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8296,
    "created_at": "2024-08-17T12:43:09.127852Z",
    "updated_at": "2024-08-17T12:43:09.127852Z",
    "lead_time": 0.975
  },
  {
    "text": "寻址方式举例Pentium的寻址方式Pentium的外部地址总线宽度是位，但它也支持位物理地址空间",
    "id": 6864,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 45,
        "end": 49,
        "text": "地址空间",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "地址总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 35,
        "end": 36,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 42,
        "end": 43,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8297,
    "created_at": "2024-08-17T12:43:10.029037Z",
    "updated_at": "2024-08-17T12:43:10.029037Z",
    "lead_time": 0.096
  },
  {
    "text": "若E且M，则NS",
    "id": 6865,
    "annotator": 1,
    "annotation_id": 8298,
    "created_at": "2024-08-17T12:43:11.235998Z",
    "updated_at": "2024-08-17T12:43:11.235998Z",
    "lead_time": 0.064
  },
  {
    "text": "保持指令格式基本一致可以降低硬件复杂程度",
    "id": 6866,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8299,
    "created_at": "2024-08-17T12:43:12.117143Z",
    "updated_at": "2024-08-17T12:43:12.117143Z",
    "lead_time": 0.065
  },
  {
    "text": "存储器子系统这部分包括Lcache、Lcache和系统总线",
    "id": 6867,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 17,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 24,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "系统总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8300,
    "created_at": "2024-08-17T12:43:13.513056Z",
    "updated_at": "2024-08-17T12:43:13.513056Z",
    "lead_time": 0.138
  },
  {
    "text": "为此，必须使用某种策略解决成本和性能之间的矛盾",
    "id": 6868,
    "annotator": 1,
    "annotation_id": 8301,
    "created_at": "2024-08-17T12:43:14.647782Z",
    "updated_at": "2024-08-17T12:43:14.647782Z",
    "lead_time": 0.071
  },
  {
    "text": "VESA标准，是一个可扩展的标准，它除兼容传统的VGA等显示方式外，还支持像素像素光栅，每像素点位颜色深度，刷新频率可达MHz",
    "id": 6869,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "VESA",
        "labels": [
          "GRP"
        ]
      },
      {
        "start": 60,
        "end": 63,
        "text": "MHz",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "VGA",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 48,
        "end": 49,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8302,
    "created_at": "2024-08-17T12:43:15.555284Z",
    "updated_at": "2024-08-17T12:43:15.555284Z",
    "lead_time": 0.084
  },
  {
    "text": "排队电路在若干中断源中决定首先响应哪个中断源，并在其对应的输出线IRi上给出“”信号，而其他各线为“”信号IRIR中只有一个信号有效",
    "id": 6870,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 53,
        "end": 55,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8303,
    "created_at": "2024-08-17T12:43:16.923234Z",
    "updated_at": "2024-08-17T12:43:16.923234Z",
    "lead_time": 0.128
  },
  {
    "text": "每次访存时，首先判断该虚地址所对应的部分是否在实存中：如果是，则进行地址转换并用实地址访问主存；否则，按照某种算法将辅存中的部分程序调度进内存，再按同样的方法访问主存",
    "id": 6871,
    "label": [
      {
        "start": 69,
        "end": 71,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "地址转换",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "实地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "虚地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 58,
        "end": 60,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 64,
        "end": 66,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 81,
        "end": 83,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "实存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "算法",
        "labels": [
          "ALG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8304,
    "created_at": "2024-08-17T12:43:18.478994Z",
    "updated_at": "2024-08-17T12:43:18.478994Z",
    "lead_time": 0.144
  },
  {
    "text": "早期总线结构的不足之处在于：CPU是总线上唯一的主控者",
    "id": 6872,
    "label": [
      {
        "start": 14,
        "end": 17,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8305,
    "created_at": "2024-08-17T12:43:19.731260Z",
    "updated_at": "2024-08-17T12:43:19.731260Z",
    "lead_time": 0.093
  },
  {
    "text": "由图看出，通道总线可以接若干个IO模块，一个IO模块可以接一个或多个设备",
    "id": 6873,
    "label": [
      {
        "start": 15,
        "end": 19,
        "text": "IO模块",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "IO模块",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8306,
    "created_at": "2024-08-17T12:43:21.108766Z",
    "updated_at": "2024-08-17T12:43:21.108766Z",
    "lead_time": 0.12
  },
  {
    "text": "选择通道主要用于连接高速外围设备，如磁盘、磁带等，信息以数据块方式高速传输",
    "id": 6874,
    "label": [
      {
        "start": 18,
        "end": 20,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8307,
    "created_at": "2024-08-17T12:43:24.466723Z",
    "updated_at": "2024-08-17T12:43:24.466723Z",
    "lead_time": 2.113
  },
  {
    "text": "磁光盘和磁盘一样，由磁道和扇区组成",
    "id": 6875,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "磁光盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "磁道",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "扇区",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8308,
    "created_at": "2024-08-17T12:43:26.930445Z",
    "updated_at": "2024-08-17T12:43:26.930445Z",
    "lead_time": 1.453
  },
  {
    "text": "数据传送指令数据传送指令主要包括取数指令、存数指令、传送指令、成组传送指令、字节交换指令、清寄存器指令、堆栈操作指令等，这类指令主要用来实现主存和寄存器之间，或寄存器和寄存器之间的数据传送",
    "id": 6876,
    "label": [
      {
        "start": 70,
        "end": 72,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "存数指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "取数指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 46,
        "end": 49,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 73,
        "end": 76,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 80,
        "end": 83,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 84,
        "end": 87,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 52,
        "end": 54,
        "text": "堆栈",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 56,
        "end": 58,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 62,
        "end": 64,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8309,
    "created_at": "2024-08-17T12:44:15.065930Z",
    "updated_at": "2024-08-17T12:44:15.065930Z",
    "lead_time": 47.302
  },
  {
    "text": "主状态周期可以用一个触发器的状态持续时间来表示",
    "id": 6877,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8310,
    "created_at": "2024-08-17T12:44:17.845521Z",
    "updated_at": "2024-08-17T12:44:17.845521Z",
    "lead_time": 2.088
  },
  {
    "text": "DRAM需要逐行定时刷新，以使不因存储信息的电容漏电而造成信息丢失",
    "id": 6878,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8311,
    "created_at": "2024-08-17T12:44:20.947036Z",
    "updated_at": "2024-08-17T12:44:20.947036Z",
    "lead_time": 2.119
  },
  {
    "text": "AB线低电平时表示至少有一个主设备的CNi为，AB线高电平时表示所有主设备的CNi为",
    "id": 6879,
    "label": [
      {
        "start": 26,
        "end": 29,
        "text": "高电平",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "主设备",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "主设备",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "低电平",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8312,
    "created_at": "2024-08-17T12:44:23.819806Z",
    "updated_at": "2024-08-17T12:44:23.819806Z",
    "lead_time": 2.128
  },
  {
    "text": "一旦外围设备得到总线控制权后，就可向总线发送地址信号，使总线上的地址线置为适当的代码状态，以便指定它将要与哪一个设备进行信息交换",
    "id": 6880,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 8,
        "end": 13,
        "text": "总线控制权",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8313,
    "created_at": "2024-08-17T12:44:27.555096Z",
    "updated_at": "2024-08-17T12:44:27.555096Z",
    "lead_time": 3.084
  },
  {
    "text": "我们把握住地址线、控制线、数据线三组信号线何时有效，就能很容易看懂这个周期时序图",
    "id": 6881,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "控制线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8314,
    "created_at": "2024-08-17T12:44:30.458833Z",
    "updated_at": "2024-08-17T12:44:30.458833Z",
    "lead_time": 2.325
  },
  {
    "text": "下一次预置再根据IO指令指出的设备号，为另一选择的设备服务",
    "id": 6882,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "IO指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8315,
    "created_at": "2024-08-17T12:44:35.442567Z",
    "updated_at": "2024-08-17T12:44:35.442567Z",
    "lead_time": 4.394
  },
  {
    "text": "磁表面存储器由于存储容量大，位成本低，在计算机系统中作为辅助大容量存储器使用，用以存放系统软件、大型文件、数据库等大量程序与数据信息",
    "id": 6883,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "磁表面存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 30,
        "end": 36,
        "text": "大容量存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 25,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 43,
        "end": 47,
        "text": "系统软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 59,
        "end": 61,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 14,
        "end": 15,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8316,
    "created_at": "2024-08-17T12:44:39.421333Z",
    "updated_at": "2024-08-17T12:44:39.421333Z",
    "lead_time": 3.406
  },
  {
    "text": "CPU同计算机系统的其他高速功能部件，如存储器、通道等互相连接的总线，称为系统总线",
    "id": 6884,
    "label": [
      {
        "start": 37,
        "end": 41,
        "text": "系统总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 9,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8317,
    "created_at": "2024-08-17T12:44:41.622753Z",
    "updated_at": "2024-08-17T12:44:41.622753Z",
    "lead_time": 1.43
  },
  {
    "text": "机器指令是用机器字来表示的",
    "id": 6885,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "机器字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8318,
    "created_at": "2024-08-17T12:44:43.929823Z",
    "updated_at": "2024-08-17T12:44:43.929823Z",
    "lead_time": 1.63
  },
  {
    "text": "存储程序并按地址顺序执行，这就是冯诺依曼型计算机的设计思想，也是机器自动化工作的关键",
    "id": 6886,
    "label": [
      {
        "start": 21,
        "end": 24,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8319,
    "created_at": "2024-08-17T12:44:46.065885Z",
    "updated_at": "2024-08-17T12:44:46.065885Z",
    "lead_time": 1.494
  },
  {
    "text": "另外通过增添模块来扩充存储器容量也比较方便",
    "id": 6887,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8320,
    "created_at": "2024-08-17T12:44:47.558793Z",
    "updated_at": "2024-08-17T12:44:47.558793Z",
    "lead_time": 0.639
  },
  {
    "text": "但在浮点运算中，它表明尾数求和结果的绝对值大于，向左破坏了规格化",
    "id": 6888,
    "label": [
      {
        "start": 11,
        "end": 15,
        "text": "尾数求和",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "规格化",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8321,
    "created_at": "2024-08-17T12:44:49.100203Z",
    "updated_at": "2024-08-17T12:44:49.100203Z",
    "lead_time": 0.656
  },
  {
    "text": "因此接口逻辑必须标准化",
    "id": 6889,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8322,
    "created_at": "2024-08-17T12:44:50.736669Z",
    "updated_at": "2024-08-17T12:44:50.736669Z",
    "lead_time": 0.845
  },
  {
    "text": "中断类型Pentium有两类中断源，即中断和异常",
    "id": 6890,
    "label": [
      {
        "start": 14,
        "end": 17,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8323,
    "created_at": "2024-08-17T12:44:53.446601Z",
    "updated_at": "2024-08-17T12:44:53.446601Z",
    "lead_time": 1.849
  },
  {
    "text": "为了运算器的高速性和控制的简单性，采用了先行进位、阵列乘除法、流水线等并行技术措施",
    "id": 6891,
    "label": [
      {
        "start": 31,
        "end": 34,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8324,
    "created_at": "2024-08-17T12:44:55.573603Z",
    "updated_at": "2024-08-17T12:44:55.573603Z",
    "lead_time": 1.375
  },
  {
    "text": "个中断向量号共占KB",
    "id": 6892,
    "label": [
      {
        "start": 1,
        "end": 6,
        "text": "中断向量号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "KB",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8325,
    "created_at": "2024-08-17T12:44:57.602509Z",
    "updated_at": "2024-08-17T12:44:57.602509Z",
    "lead_time": 1.146
  },
  {
    "text": "在进行计算机设计时，可以采用方框图语言来表示指令的指令周期",
    "id": 6893,
    "label": [
      {
        "start": 25,
        "end": 29,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8326,
    "created_at": "2024-08-17T12:44:59.712654Z",
    "updated_at": "2024-08-17T12:44:59.712654Z",
    "lead_time": 1.398
  },
  {
    "text": "直观比较后发现：标量流水计算机在个单位时间中执行了条指令，超标量流水计算机在个单位时间中执行了条指令，而非流水计算机在个单位时间中仅执行了条指令",
    "id": 6894,
    "label": [
      {
        "start": 29,
        "end": 37,
        "text": "超标量流水计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 10,
        "end": 15,
        "text": "流水计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 53,
        "end": 58,
        "text": "流水计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 48,
        "end": 50,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 70,
        "end": 72,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8327,
    "created_at": "2024-08-17T12:45:09.661100Z",
    "updated_at": "2024-08-17T12:45:09.661100Z",
    "lead_time": 8.98
  },
  {
    "text": "随着鼓的转动，潜像部分将通过装有碳粉盒的显影器，使得具有字符信息的区域吸附上碳粉，达到显影的目的",
    "id": 6895,
    "annotator": 1,
    "annotation_id": 8328,
    "created_at": "2024-08-17T12:45:13.027936Z",
    "updated_at": "2024-08-17T12:45:13.027936Z",
    "lead_time": 2.697
  },
  {
    "text": "此位存储字的模块内地址对应系统存储地址中的AA",
    "id": 6896,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "块内地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "存储字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 1,
        "end": 2,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8329,
    "created_at": "2024-08-17T12:45:17.692863Z",
    "updated_at": "2024-08-17T12:45:17.692863Z",
    "lead_time": 4.062
  },
  {
    "text": "链接器将多个模块与库程序组合在一起以解析所有的应用",
    "id": 6897,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8330,
    "created_at": "2024-08-17T12:45:20.368717Z",
    "updated_at": "2024-08-17T12:45:20.368717Z",
    "lead_time": 0.927
  },
  {
    "text": "将各种外围设备的不同信号转换成通道能够识别的标准信号",
    "id": 6898,
    "label": [
      {
        "start": 15,
        "end": 17,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8331,
    "created_at": "2024-08-17T12:45:22.113101Z",
    "updated_at": "2024-08-17T12:45:22.113187Z",
    "lead_time": 1.038
  },
  {
    "text": "如果外设没有“准备就绪”，那么它就发出“忙”的标志",
    "id": 6899,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "外设",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8332,
    "created_at": "2024-08-17T12:45:24.155624Z",
    "updated_at": "2024-08-17T12:45:24.155624Z",
    "lead_time": 1.051
  },
  {
    "text": "CDR光盘的数据一旦写上也不能擦除",
    "id": 6900,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8333,
    "created_at": "2024-08-17T12:45:25.232257Z",
    "updated_at": "2024-08-17T12:45:25.232257Z",
    "lead_time": 0.174
  },
  {
    "text": "从这个例子知道，取出和执行任何一条指令所需的最短时间为两个CPU周期",
    "id": 6901,
    "label": [
      {
        "start": 17,
        "end": 19,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8334,
    "created_at": "2024-08-17T12:45:26.032772Z",
    "updated_at": "2024-08-17T12:45:26.032772Z",
    "lead_time": 0.073
  },
  {
    "text": "原理相同都是利用了程序运行时的局部性原理把最近常用的信息块从相对慢速而大容量的存储器调入相对高速而小容量的存储器",
    "id": 6902,
    "label": [
      {
        "start": 15,
        "end": 20,
        "text": "局部性原理",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 53,
        "end": 56,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8335,
    "created_at": "2024-08-17T12:45:27.117814Z",
    "updated_at": "2024-08-17T12:45:27.117814Z",
    "lead_time": 0.102
  },
  {
    "text": "换句话说，第位的进位输入Cn可以直接传送到最高进位位上去，因而可以实现高速运算",
    "id": 6903,
    "label": [
      {
        "start": 6,
        "end": 7,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 9,
        "end": 10,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 24,
        "end": 25,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 26,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8336,
    "created_at": "2024-08-17T12:45:28.217883Z",
    "updated_at": "2024-08-17T12:45:28.217883Z",
    "lead_time": 0.112
  },
  {
    "text": "如果有条指令，那么就需要位操作码",
    "id": 6904,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 12,
        "end": 13,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8337,
    "created_at": "2024-08-17T12:45:29.277509Z",
    "updated_at": "2024-08-17T12:45:29.277509Z",
    "lead_time": 0.083
  },
  {
    "text": "通常，当一个中断发生时，CPU暂停其现行程序，而转向中断处理程序，从而可以输入或输出一个数据",
    "id": 6905,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 32,
        "text": "中断处理程序",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8338,
    "created_at": "2024-08-17T12:45:30.107988Z",
    "updated_at": "2024-08-17T12:45:30.108988Z",
    "lead_time": 0.084
  },
  {
    "text": "而写周期只需要第一个子周期即可完成",
    "id": 6906,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "写周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8339,
    "created_at": "2024-08-17T12:45:31.255725Z",
    "updated_at": "2024-08-17T12:45:31.255725Z",
    "lead_time": 0.076
  },
  {
    "text": "在单总线结构中，要求连接到总线上的逻辑部件必须高速运行，以便在某些设备需要使用总线时，能迅速获得总线控制权；而当不再使用总线时，能迅速放弃总线控制权",
    "id": 6907,
    "label": [
      {
        "start": 48,
        "end": 53,
        "text": "总线控制权",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 69,
        "end": 74,
        "text": "总线控制权",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 6,
        "text": "单总线结构",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 60,
        "end": 62,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8340,
    "created_at": "2024-08-17T12:45:34.163299Z",
    "updated_at": "2024-08-17T12:45:34.163299Z",
    "lead_time": 1.973
  },
  {
    "text": "也许读者会问：一会儿取机器指令，一会儿取微指令，它们之间到底是什么关系现在让我们把前面内容归纳一下，作为对此问题的问答",
    "id": 6908,
    "label": [
      {
        "start": 11,
        "end": 15,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8341,
    "created_at": "2024-08-17T12:45:36.148077Z",
    "updated_at": "2024-08-17T12:45:36.148077Z",
    "lead_time": 1.124
  },
  {
    "text": "假设作业T被分成k个子任务，可表达为TTTTk各个子任务之间有一定的优先关系：若ij，则必须在Ti完成以后，Tj才能开始工作",
    "id": 6909,
    "annotator": 1,
    "annotation_id": 8342,
    "created_at": "2024-08-17T12:45:41.406959Z",
    "updated_at": "2024-08-17T12:45:41.406959Z",
    "lead_time": 4.429
  },
  {
    "text": "图表示读数据的同步时序例子，所有事件都出现在时钟信号的前沿，大多数事件只占据单一时钟周期",
    "id": 6910,
    "label": [
      {
        "start": 22,
        "end": 26,
        "text": "时钟信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 44,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8343,
    "created_at": "2024-08-17T12:45:46.772547Z",
    "updated_at": "2024-08-17T12:45:46.773573Z",
    "lead_time": 2.381
  },
  {
    "text": "系统程序用来简化程序设计，简化使用方法，提高计算机的使用效率，发挥和扩大计算机的功能及用途",
    "id": 6911,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "系统程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "程序设计",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8344,
    "created_at": "2024-08-17T12:45:51.604791Z",
    "updated_at": "2024-08-17T12:45:51.604791Z",
    "lead_time": 4.114
  },
  {
    "text": "逻辑数据一个单元由若干二进制位项组成，每个位的值可以是或",
    "id": 6912,
    "label": [
      {
        "start": 11,
        "end": 15,
        "text": "二进制位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "逻辑数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 21,
        "end": 22,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8345,
    "created_at": "2024-08-17T12:45:54.910440Z",
    "updated_at": "2024-08-17T12:45:54.910440Z",
    "lead_time": 2.61
  },
  {
    "text": "两者的源程序通过编译或汇编生成目标OBJ文件后，利用连接程序LINKER把它们连接成可执行文件便可运行",
    "id": 6913,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "源程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "编译",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8346,
    "created_at": "2024-08-17T12:45:56.701834Z",
    "updated_at": "2024-08-17T12:45:56.701834Z",
    "lead_time": 1.03
  },
  {
    "text": "目前这种理想已经成为现实",
    "id": 6914,
    "annotator": 1,
    "annotation_id": 8347,
    "created_at": "2024-08-17T12:45:58.192562Z",
    "updated_at": "2024-08-17T12:45:58.192562Z",
    "lead_time": 0.758
  },
  {
    "text": "RAM用来储存当前运行的程序和数据，并可以在程序运行过程中反复更改其内容",
    "id": 6915,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "RAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8348,
    "created_at": "2024-08-17T12:46:00.776842Z",
    "updated_at": "2024-08-17T12:46:00.776842Z",
    "lead_time": 1.863
  },
  {
    "text": "电子数字计算机进行解题的过程完全和人用算盘解题的情况相似，也必须有运算工具，解题步骤和原始数据的输入与存储，运算结果的输出及整个计算过程的调度控制",
    "id": 6916,
    "label": [
      {
        "start": 0,
        "end": 7,
        "text": "电子数字计算机",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8349,
    "created_at": "2024-08-17T12:46:09.302554Z",
    "updated_at": "2024-08-17T12:46:09.302554Z",
    "lead_time": 7.873
  },
  {
    "text": "因此，MO盘在常温下是非常稳定的，数据不会改变",
    "id": 6917,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "MO盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8350,
    "created_at": "2024-08-17T12:46:11.235830Z",
    "updated_at": "2024-08-17T12:46:11.235830Z",
    "lead_time": 1.255
  },
  {
    "text": "上面的例子说明FIFOLRU算法比FIFO算法的命中率高",
    "id": 6918,
    "label": [
      {
        "start": 17,
        "end": 23,
        "text": "FIFO算法",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 11,
        "end": 16,
        "text": "LRU算法",
        "labels": [
          "ALG"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "FIFO",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "命中率",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8351,
    "created_at": "2024-08-17T12:46:13.835813Z",
    "updated_at": "2024-08-17T12:46:13.835813Z",
    "lead_time": 1.905
  },
  {
    "text": "至此，STO指令执行周期结束",
    "id": 6919,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "STO指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "执行周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8352,
    "created_at": "2024-08-17T12:46:15.522903Z",
    "updated_at": "2024-08-17T12:46:15.522903Z",
    "lead_time": 0.902
  },
  {
    "text": "采用指令跳跃寻址方式，可以实现程序转移或构成循环程序，从而能缩短程序长度，或将某些程序作为公共程序引用",
    "id": 6920,
    "label": [
      {
        "start": 4,
        "end": 10,
        "text": "跳跃寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8353,
    "created_at": "2024-08-17T12:46:18.916717Z",
    "updated_at": "2024-08-17T12:46:18.916717Z",
    "lead_time": 2.669
  },
  {
    "text": "x，y，则xy",
    "id": 6921,
    "annotator": 1,
    "annotation_id": 8354,
    "created_at": "2024-08-17T12:46:22.602584Z",
    "updated_at": "2024-08-17T12:46:22.602584Z",
    "lead_time": 3.077
  },
  {
    "text": "写操作时，WE，门G开启，门G关闭",
    "id": 6922,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8355,
    "created_at": "2024-08-17T12:46:23.678047Z",
    "updated_at": "2024-08-17T12:46:23.678047Z",
    "lead_time": 0.633
  },
  {
    "text": "图示出了CPU、IO接口和外围设备之间的连接关系",
    "id": 6923,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "IO接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8356,
    "created_at": "2024-08-17T12:46:25.422862Z",
    "updated_at": "2024-08-17T12:46:25.423537Z",
    "lead_time": 1.076
  },
  {
    "text": "rd字段指定存放操作结果的目的数寄存器，最多有个寄存器",
    "id": 6924,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8357,
    "created_at": "2024-08-17T12:46:27.797066Z",
    "updated_at": "2024-08-17T12:46:27.797066Z",
    "lead_time": 1.741
  },
  {
    "text": "度量单位是MHz兆赫兹、GHz吉赫兹",
    "id": 6925,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "MHz",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "GHz",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8358,
    "created_at": "2024-08-17T12:46:32.886062Z",
    "updated_at": "2024-08-17T12:46:38.583768Z",
    "lead_time": 6.508000000000001
  },
  {
    "text": "由于一帧数字图像要占很大的存储空间，图像数据的传输与存储问题将是一个十分重要的研究课题，目前普遍采用的方法是压缩恢复技术",
    "id": 6926,
    "label": [
      {
        "start": 13,
        "end": 17,
        "text": "存储空间",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8359,
    "created_at": "2024-08-17T12:46:42.057260Z",
    "updated_at": "2024-08-17T12:46:42.057260Z",
    "lead_time": 1.534
  },
  {
    "text": "假如加法器由n位全加器构成，每一位的进位延迟时间为ns，那么最坏情况下，进位信号从最低位传递到最高位而最后输出稳定，至少需要nns，这在高速计算中显然是不利的",
    "id": 6927,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "全加器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "加法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 47,
        "end": 50,
        "text": "最高位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 8,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 17,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 43,
        "end": 44,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8360,
    "created_at": "2024-08-17T12:46:47.807073Z",
    "updated_at": "2024-08-17T12:46:47.807073Z",
    "lead_time": 4.989
  },
  {
    "text": "因此程序计数器的结构应当是具有寄存器和计数两种功能的结构",
    "id": 6928,
    "label": [
      {
        "start": 15,
        "end": 18,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 7,
        "text": "程序计数器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8361,
    "created_at": "2024-08-17T12:46:49.300996Z",
    "updated_at": "2024-08-17T12:46:49.300996Z",
    "lead_time": 0.694
  },
  {
    "text": "双倍数据率SDRAMDDRSDRAM在SDRAM出现之后，又出现了双数据率的DDRSDRAM，故后来将单数据率的SDRAM称为SDRSDRAM",
    "id": 6929,
    "label": [
      {
        "start": 10,
        "end": 18,
        "text": "DDRSDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 38,
        "end": 46,
        "text": "DDRSDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 10,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 24,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 56,
        "end": 61,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 66,
        "end": 71,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8362,
    "created_at": "2024-08-17T12:46:50.816824Z",
    "updated_at": "2024-08-17T12:46:50.816824Z",
    "lead_time": 0.876
  },
  {
    "text": "因此，两个请求能够并行发出，减少了IO排队的时间",
    "id": 6930,
    "label": [
      {
        "start": 9,
        "end": 11,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8363,
    "created_at": "2024-08-17T12:46:52.255912Z",
    "updated_at": "2024-08-17T12:46:52.255912Z",
    "lead_time": 0.664
  },
  {
    "text": "这种二级的cache，位于处理器芯片内或是位于处理器芯片外单独的一组SRAM，当访问主cache缺失后就会访问它",
    "id": 6931,
    "label": [
      {
        "start": 34,
        "end": 38,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 10,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 43,
        "end": 48,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 21,
        "end": 22,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8364,
    "created_at": "2024-08-17T12:46:55.381926Z",
    "updated_at": "2024-08-17T12:46:55.381926Z",
    "lead_time": 2.445
  },
  {
    "text": "磁盘存储器则是半顺序直接存取存储器，沿磁道方向顺序存取，垂直半径方向随机存取",
    "id": 6932,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "磁盘存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "磁道",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8365,
    "created_at": "2024-08-17T12:46:56.733924Z",
    "updated_at": "2024-08-17T12:46:56.733924Z",
    "lead_time": 0.606
  },
  {
    "text": "接着详细列出给定题目的解题步骤，而解题步骤也需要记在横格纸上，每一步也只写一行",
    "id": 6933,
    "annotator": 1,
    "annotation_id": 8366,
    "created_at": "2024-08-17T12:46:57.961135Z",
    "updated_at": "2024-08-17T12:46:57.961135Z",
    "lead_time": 0.43
  },
  {
    "text": "计算机中除了进行加、减、乘、除等基本算术运算以外，还可对两个或一个逻辑数进行逻辑运算",
    "id": 6934,
    "label": [
      {
        "start": 38,
        "end": 42,
        "text": "逻辑运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "算术运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "逻辑数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8367,
    "created_at": "2024-08-17T12:47:00.066316Z",
    "updated_at": "2024-08-17T12:47:00.066316Z",
    "lead_time": 1.458
  },
  {
    "text": "多道程序切换时，由操作系统修改基址寄存器内容",
    "id": 6935,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 15,
        "end": 20,
        "text": "基址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8368,
    "created_at": "2024-08-17T12:47:01.860922Z",
    "updated_at": "2024-08-17T12:47:01.860922Z",
    "lead_time": 0.981
  },
  {
    "text": "注意：地址码字段A指明的是操作数的地址，而不是操作数本身",
    "id": 6936,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8369,
    "created_at": "2024-08-17T12:47:04.185336Z",
    "updated_at": "2024-08-17T12:47:04.185336Z",
    "lead_time": 1.533
  },
  {
    "text": "CPU的cache存取时间一般小于ns，命中率以上，全用硬件来实现",
    "id": 6937,
    "label": [
      {
        "start": 28,
        "end": 30,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 9,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "存取时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "命中率",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8370,
    "created_at": "2024-08-17T12:47:07.804035Z",
    "updated_at": "2024-08-17T12:47:07.804035Z",
    "lead_time": 2.887
  },
  {
    "text": "位为微操作码，源寄存器和目标寄存器编址各位，可指定个寄存器",
    "id": 6938,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "源寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 17,
        "text": "目标寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "编址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 1,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 21,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8371,
    "created_at": "2024-08-17T12:47:14.114555Z",
    "updated_at": "2024-08-17T12:47:14.115554Z",
    "lead_time": 5.568
  },
  {
    "text": "“状态条件”有位标志，可实现微程序两路转移，涉及微地址寄存器的一位；“状态条件”有位标志，可实现微程序路转移，涉及微地址寄存器的两位",
    "id": 6939,
    "label": [
      {
        "start": 24,
        "end": 27,
        "text": "微地址",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 57,
        "end": 63,
        "text": "微地址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 48,
        "end": 51,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 7,
        "end": 8,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 32,
        "end": 33,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 41,
        "end": 42,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 65,
        "end": 66,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8372,
    "created_at": "2024-08-17T12:47:18.340313Z",
    "updated_at": "2024-08-17T12:47:18.340313Z",
    "lead_time": 3.318
  },
  {
    "text": "为提高数据传输率和改善接口的兼容性，世纪年代又陆续推出了SCSI和SCSI标准",
    "id": 6940,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "数据传输率",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8373,
    "created_at": "2024-08-17T12:47:21.569059Z",
    "updated_at": "2024-08-17T12:47:21.569059Z",
    "lead_time": 2.421
  },
  {
    "text": "图像输入设备最理想的图像输入设备是数字摄像机",
    "id": 6941,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "输入设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "输入设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8374,
    "created_at": "2024-08-17T12:47:26.036162Z",
    "updated_at": "2024-08-17T12:47:26.036162Z",
    "lead_time": 3.777
  },
  {
    "text": "显然，设计高速并行乘法器的基本问题，就在于缩短被加数矩阵中每列所包含的的加法时间",
    "id": 6942,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "乘法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8375,
    "created_at": "2024-08-17T12:47:27.990594Z",
    "updated_at": "2024-08-17T12:47:27.990594Z",
    "lead_time": 1.213
  },
  {
    "text": "选择型DMA控制器工作原理与前面的简单DMA控制器基本相同",
    "id": 6943,
    "label": [
      {
        "start": 3,
        "end": 9,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 25,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8376,
    "created_at": "2024-08-17T12:47:30.355923Z",
    "updated_at": "2024-08-17T12:47:30.355923Z",
    "lead_time": 1.694
  },
  {
    "text": "如果是首次读操作，则在读命令信号有效时，SRAM中个位组内的某一个位组被此列地址选中，经DD送出芯片",
    "id": 6944,
    "label": [
      {
        "start": 48,
        "end": 50,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "读操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "列地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 27,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 33,
        "end": 34,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8377,
    "created_at": "2024-08-17T12:47:33.344055Z",
    "updated_at": "2024-08-17T12:47:33.344055Z",
    "lead_time": 2.23
  },
  {
    "text": "这种办法被称为截断处理，其好处是处理简单，缺点是影响结果的精度",
    "id": 6945,
    "annotator": 1,
    "annotation_id": 8378,
    "created_at": "2024-08-17T12:47:34.788611Z",
    "updated_at": "2024-08-17T12:47:34.788611Z",
    "lead_time": 0.69
  },
  {
    "text": "随着时间的推移，每块芯片上的单元个数越来越多，因此构建一个计算机处理器所需的芯片越来越少",
    "id": 6946,
    "label": [
      {
        "start": 29,
        "end": 32,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8379,
    "created_at": "2024-08-17T12:47:38.790792Z",
    "updated_at": "2024-08-17T12:47:38.790792Z",
    "lead_time": 3.201
  },
  {
    "text": "计算机运算速度为每秒几千次至几万次，体积庞大，成本很高，可靠性较低",
    "id": 6947,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8380,
    "created_at": "2024-08-17T12:47:40.251809Z",
    "updated_at": "2024-08-17T12:47:40.251809Z",
    "lead_time": 0.732
  },
  {
    "text": "由于ms除以约等于s，所以DRAM每隔s刷新一行",
    "id": 6948,
    "label": [
      {
        "start": 13,
        "end": 17,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8381,
    "created_at": "2024-08-17T12:47:48.059820Z",
    "updated_at": "2024-08-17T12:47:48.059820Z",
    "lead_time": 7.068
  },
  {
    "text": "这样，若CPU先后两次读取的存储字使用同一RAS选通信号，CPU在接收到第一个存储字之后必须插入等待状态，直至前一存储字再生完毕才开始第二个存储字的读取",
    "id": 6949,
    "label": [
      {
        "start": 21,
        "end": 24,
        "text": "RAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "存储字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "存储字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 57,
        "end": 60,
        "text": "存储字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 70,
        "end": 73,
        "text": "存储字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8382,
    "created_at": "2024-08-17T12:47:55.778948Z",
    "updated_at": "2024-08-17T12:47:55.778948Z",
    "lead_time": 7.027
  },
  {
    "text": "系统结构技术这是从整个存储系统的角度采用分层存储结构解决访问速度问题",
    "id": 6950,
    "label": [
      {
        "start": 11,
        "end": 15,
        "text": "存储系统",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "结构技术",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8383,
    "created_at": "2024-08-17T12:48:00.153192Z",
    "updated_at": "2024-08-17T12:48:00.153192Z",
    "lead_time": 3.521
  },
  {
    "text": "图b表示全相联映射方式的检索过程",
    "id": 6951,
    "label": [
      {
        "start": 4,
        "end": 9,
        "text": "全相联映射",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8384,
    "created_at": "2024-08-17T12:48:02.455856Z",
    "updated_at": "2024-08-17T12:48:02.455856Z",
    "lead_time": 1.631
  },
  {
    "text": "此后再以内存地址的w位字地址部分检索此行的具体字，并完成所需要求的存取操作",
    "id": 6952,
    "label": [
      {
        "start": 4,
        "end": 8,
        "text": "内存地址",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "存取操作",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "字地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 11,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8385,
    "created_at": "2024-08-17T12:48:17.251826Z",
    "updated_at": "2024-08-17T12:48:17.251826Z",
    "lead_time": 13.945
  },
  {
    "text": "控制信号中CS是片选信号，CS有效时低电平，门G、G均被打开",
    "id": 6953,
    "label": [
      {
        "start": 18,
        "end": 21,
        "text": "低电平",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "片选信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8386,
    "created_at": "2024-08-17T12:48:20.800574Z",
    "updated_at": "2024-08-17T12:48:20.800574Z",
    "lead_time": 2.919
  },
  {
    "text": "所有的只读型光盘系统都基于一个共同原理，即光盘上的信息以坑点形式分布，有坑点表示为“”，无坑点表示为“”，一系列的坑点存储元形成信息记录道，见图b",
    "id": 6954,
    "label": [
      {
        "start": 59,
        "end": 62,
        "text": "存储元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "只读",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8387,
    "created_at": "2024-08-17T12:48:29.728994Z",
    "updated_at": "2024-08-17T12:48:29.728994Z",
    "lead_time": 8.276
  },
  {
    "text": "另一种是图形处理子系统，其硬件结构较前一种复杂得多",
    "id": 6955,
    "label": [
      {
        "start": 13,
        "end": 15,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8388,
    "created_at": "2024-08-17T12:48:31.486702Z",
    "updated_at": "2024-08-17T12:48:31.486702Z",
    "lead_time": 1.19
  },
  {
    "text": "图给出作者发明的启停控制逻辑，它是一个实用有效的工具性电路",
    "id": 6956,
    "annotator": 1,
    "annotation_id": 8389,
    "created_at": "2024-08-17T12:48:34.274027Z",
    "updated_at": "2024-08-17T12:48:34.274027Z",
    "lead_time": 1.734
  },
  {
    "text": "CPU在中断响应的过程中必须首先确认应该为哪个中断源服务",
    "id": 6957,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8390,
    "created_at": "2024-08-17T12:49:49.971234Z",
    "updated_at": "2024-08-17T12:49:49.971234Z",
    "lead_time": 75.071
  },
  {
    "text": "一条机器指令对应一个微程序，这个微程序是由若干条微指令序列组成的",
    "id": 6958,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 24,
        "end": 29,
        "text": "微指令序列",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8391,
    "created_at": "2024-08-17T12:49:51.721644Z",
    "updated_at": "2024-08-17T12:49:51.721644Z",
    "lead_time": 1.105
  },
  {
    "text": "从图中可以看出，每个读周期或写周期是从行选通信号RAS下降沿开始，到下一个RAS信号的下降沿为止的时间，也就是连续两个读写周期的时间间隔",
    "id": 6959,
    "label": [
      {
        "start": 19,
        "end": 24,
        "text": "行选通信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 59,
        "end": 63,
        "text": "读写周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "RAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "RAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "读周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "写周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8392,
    "created_at": "2024-08-17T12:49:53.828360Z",
    "updated_at": "2024-08-17T12:49:53.828360Z",
    "lead_time": 1.433
  },
  {
    "text": "图是IO接口模块的一般结构框图",
    "id": 6960,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "IO接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8393,
    "created_at": "2024-08-17T12:49:55.118355Z",
    "updated_at": "2024-08-17T12:49:55.118355Z",
    "lead_time": 0.648
  },
  {
    "text": "而指令完成单元确定何时能够安全地将结果放入到寄存器堆或内存中",
    "id": 6961,
    "label": [
      {
        "start": 22,
        "end": 25,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8394,
    "created_at": "2024-08-17T12:49:57.347291Z",
    "updated_at": "2024-08-17T12:49:57.347291Z",
    "lead_time": 1.65
  },
  {
    "text": "因此大型计算机的IO系统一般接有多个通道",
    "id": 6962,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8395,
    "created_at": "2024-08-17T12:49:58.804701Z",
    "updated_at": "2024-08-17T12:49:58.804701Z",
    "lead_time": 0.904
  },
  {
    "text": "按显示设备所用的显示器件分类，有阴极射线管CRT显示器、液晶显示器LCD、等离子显示器等",
    "id": 6963,
    "label": [
      {
        "start": 21,
        "end": 26,
        "text": "CRT显示",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "显示器",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8396,
    "created_at": "2024-08-17T12:50:02.238304Z",
    "updated_at": "2024-08-17T12:50:02.238304Z",
    "lead_time": 2.908
  },
  {
    "text": "若某一阶段的处理时间较长，势必造成其他阶段的空转等待",
    "id": 6964,
    "annotator": 1,
    "annotation_id": 8397,
    "created_at": "2024-08-17T12:50:06.018093Z",
    "updated_at": "2024-08-17T12:50:06.018093Z",
    "lead_time": 3.143
  },
  {
    "text": "如果存储器只能按某种顺序来存取，也就是说存取时间和存储单元的物理位置有关，这种存储器称为顺序存取存储器",
    "id": 6965,
    "label": [
      {
        "start": 20,
        "end": 24,
        "text": "存取时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "存储单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 48,
        "end": 51,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 32,
        "end": 33,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8398,
    "created_at": "2024-08-17T12:50:07.412918Z",
    "updated_at": "2024-08-17T12:50:07.412918Z",
    "lead_time": 0.851
  },
  {
    "text": "通常，在存储器中把保存一个数的个触发器称为一个存储单元",
    "id": 6966,
    "label": [
      {
        "start": 23,
        "end": 27,
        "text": "存储单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8399,
    "created_at": "2024-08-17T12:50:08.944384Z",
    "updated_at": "2024-08-17T12:50:08.945385Z",
    "lead_time": 0.888
  },
  {
    "text": "与页式虚拟存储器相比，段式虚拟存储器有许多优点：段的逻辑独立性使其易于编译、管理、修改和保护，也便于多道程序共享",
    "id": 6967,
    "label": [
      {
        "start": 1,
        "end": 8,
        "text": "页式虚拟存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 18,
        "text": "段式虚拟存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 52,
        "end": 54,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "编译",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8400,
    "created_at": "2024-08-17T12:50:10.245144Z",
    "updated_at": "2024-08-17T12:50:10.245144Z",
    "lead_time": 0.684
  },
  {
    "text": "联合控制方式此为同步控制和异步控制相结合的方式",
    "id": 6968,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8401,
    "created_at": "2024-08-17T12:50:11.602853Z",
    "updated_at": "2024-08-17T12:50:11.602853Z",
    "lead_time": 0.788
  },
  {
    "text": "如果从中止点开始，则每个设备使用总线的优先级相等",
    "id": 6969,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "优先级",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8402,
    "created_at": "2024-08-17T12:50:13.930705Z",
    "updated_at": "2024-08-17T12:50:13.930705Z",
    "lead_time": 1.808
  },
  {
    "text": "世纪年代，由于受器件限制，计算机的硬件结构比较简单，所支持的指令系统只有定点加减、逻辑运算、数据传送、转移等十几至几十条指令",
    "id": 6970,
    "label": [
      {
        "start": 30,
        "end": 34,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 45,
        "text": "逻辑运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "定点",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 60,
        "end": 62,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8403,
    "created_at": "2024-08-17T12:50:40.840536Z",
    "updated_at": "2024-08-17T12:50:40.840536Z",
    "lead_time": 26.378
  },
  {
    "text": "可以看出，它节省了CPU宝贵的时间，是管理IO操作的一个比较有效的方法",
    "id": 6971,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8404,
    "created_at": "2024-08-17T12:50:44.273818Z",
    "updated_at": "2024-08-17T12:50:44.273818Z",
    "lead_time": 2.762
  },
  {
    "text": "另外，我们假定ALU只有，，M传送三种操作",
    "id": 6972,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8405,
    "created_at": "2024-08-17T12:50:45.493349Z",
    "updated_at": "2024-08-17T12:50:45.494400Z",
    "lead_time": 0.581
  },
  {
    "text": "显然，位时间是由同步脉冲来体现的",
    "id": 6973,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 4,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8406,
    "created_at": "2024-08-17T12:50:46.544849Z",
    "updated_at": "2024-08-17T12:50:46.544849Z",
    "lead_time": 0.456
  },
  {
    "text": "一条机器指令用多少条微指令来实现，则该条指令的指令周期就包含了多少个节拍电位时间，因而对时间的利用是十分经济的",
    "id": 6974,
    "label": [
      {
        "start": 34,
        "end": 38,
        "text": "节拍电位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8407,
    "created_at": "2024-08-17T12:50:47.837312Z",
    "updated_at": "2024-08-17T12:50:47.837312Z",
    "lead_time": 0.702
  },
  {
    "text": "例如，以数据块为单位的磁盘读写操作；以数据帧为单位的外部通信；以及大批量数据采集等场景",
    "id": 6975,
    "label": [
      {
        "start": 14,
        "end": 17,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8408,
    "created_at": "2024-08-17T12:50:53.650581Z",
    "updated_at": "2024-08-17T12:50:53.650581Z",
    "lead_time": 5.203
  },
  {
    "text": "当目标方出现故障不能进行传输时，以nSTOP信号有效通知主方中止总线周期",
    "id": 6976,
    "label": [
      {
        "start": 32,
        "end": 36,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8409,
    "created_at": "2024-08-17T12:50:58.404535Z",
    "updated_at": "2024-08-17T12:50:58.404535Z",
    "lead_time": 4.192
  },
  {
    "text": "在三总线结构中，ALU的两个输入端分别由两条总线供给，而ALU的输出则与第三条总线相连",
    "id": 6977,
    "label": [
      {
        "start": 1,
        "end": 6,
        "text": "三总线结构",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8410,
    "created_at": "2024-08-17T12:51:00.364808Z",
    "updated_at": "2024-08-17T12:51:00.364808Z",
    "lead_time": 1.435
  },
  {
    "text": "全双工端到端连接",
    "id": 6978,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "端到端",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8411,
    "created_at": "2024-08-17T12:51:01.642996Z",
    "updated_at": "2024-08-17T12:51:01.642996Z",
    "lead_time": 0.726
  },
  {
    "text": "步进电机靠脉冲信号驱动，控制简单，整个驱动定位系统是开环控制，因此定位精度较低，一般用于道密度不高的硬磁盘驱动器",
    "id": 6979,
    "label": [
      {
        "start": 51,
        "end": 56,
        "text": "磁盘驱动器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 44,
        "end": 47,
        "text": "道密度",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8412,
    "created_at": "2024-08-17T12:51:06.673918Z",
    "updated_at": "2024-08-17T12:51:06.673918Z",
    "lead_time": 4.459
  },
  {
    "text": "相应地，将一个读周期分解成两个分离的传输子周期：第一个子周期，主方发送地址和命令及有关信息后，立即和总线断开，供其他设备使用；第二个子周期，被读出的设备重新申请总线使用权后将数据通过总线发向请求数据的设备",
    "id": 6980,
    "label": [
      {
        "start": 80,
        "end": 85,
        "text": "总线使用权",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "读周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 91,
        "end": 93,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8413,
    "created_at": "2024-08-17T12:51:08.783859Z",
    "updated_at": "2024-08-17T12:51:08.783859Z",
    "lead_time": 1.441
  },
  {
    "text": "不同的指令用操作码字段的不同编码来表示，每一种编码代表一种指令",
    "id": 6981,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8414,
    "created_at": "2024-08-17T12:51:11.003267Z",
    "updated_at": "2024-08-17T12:51:11.003267Z",
    "lead_time": 1.57
  },
  {
    "text": "该总线支持个DMA通道和级可屏蔽硬件中断",
    "id": 6982,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "屏蔽",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8415,
    "created_at": "2024-08-17T12:51:12.798900Z",
    "updated_at": "2024-08-17T12:51:12.798900Z",
    "lead_time": 1.23
  },
  {
    "text": "存储容量越大，表示计算机记忆储存的信息越多",
    "id": 6983,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8416,
    "created_at": "2024-08-17T12:51:14.039114Z",
    "updated_at": "2024-08-17T12:51:14.039114Z",
    "lead_time": 0.665
  },
  {
    "text": "在介绍加减交替阵列除法器以前，首先介绍可控加法减法CAS单元，因为它将被采用于下面所介绍的除法流水逻辑阵列中",
    "id": 6984,
    "label": [
      {
        "start": 7,
        "end": 12,
        "text": "阵列除法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "CAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "流水",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8417,
    "created_at": "2024-08-17T12:51:18.606056Z",
    "updated_at": "2024-08-17T12:51:18.606056Z",
    "lead_time": 4.022
  },
  {
    "text": "在多任务系统中，操作系统还会在每个虚地址前面增加一个表明该程序在系统中的序号的基号",
    "id": 6985,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "虚地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8418,
    "created_at": "2024-08-17T12:51:21.352576Z",
    "updated_at": "2024-08-17T12:51:21.352576Z",
    "lead_time": 2.231
  },
  {
    "text": "如果第三条微指令进行测试时Cy，那么微地址仍保持为，将不执行第四条微指令而直接由第三条微指令转向公操作",
    "id": 6986,
    "label": [
      {
        "start": 18,
        "end": 21,
        "text": "微地址",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8419,
    "created_at": "2024-08-17T12:51:25.118544Z",
    "updated_at": "2024-08-17T12:51:25.118544Z",
    "lead_time": 3.169
  },
  {
    "text": "第四个问题，中断处理过程是由硬件和软件结合来完成的",
    "id": 6987,
    "label": [
      {
        "start": 17,
        "end": 19,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8420,
    "created_at": "2024-08-17T12:51:38.846943Z",
    "updated_at": "2024-08-17T12:51:38.846943Z",
    "lead_time": 13.078
  },
  {
    "text": "若IR无请求，则IR，门被封锁，不会向编码电路送入选中信号",
    "id": 6988,
    "label": [
      {
        "start": 19,
        "end": 21,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8421,
    "created_at": "2024-08-17T12:51:42.731815Z",
    "updated_at": "2024-08-17T12:51:42.731815Z",
    "lead_time": 3.276
  },
  {
    "text": "其中Yi是受S、S控制的Ai和Bi的组合函数，而Xi是受S、S控制的Ai和Bi的组合函数，其函数关系如表所示",
    "id": 6989,
    "annotator": 1,
    "annotation_id": 8422,
    "created_at": "2024-08-17T12:51:44.567094Z",
    "updated_at": "2024-08-17T12:51:44.567094Z",
    "lead_time": 1.211
  },
  {
    "text": "VGA显示标准可兼容字符和图形两种显示方式",
    "id": 6990,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "VGA",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8423,
    "created_at": "2024-08-17T12:51:47.599879Z",
    "updated_at": "2024-08-17T12:51:47.599879Z",
    "lead_time": 2.481
  },
  {
    "text": "而浮点格式容许的数值范围很大，要求的处理硬件比较复杂",
    "id": 6991,
    "label": [
      {
        "start": 20,
        "end": 22,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8424,
    "created_at": "2024-08-17T12:51:48.866786Z",
    "updated_at": "2024-08-17T12:51:48.866786Z",
    "lead_time": 0.689
  },
  {
    "text": "在这种方式中，数据在CPU和外围设备之间的传送完全靠计算机程序控制，是在CPU主动控制下进行的",
    "id": 6992,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8425,
    "created_at": "2024-08-17T12:51:50.865672Z",
    "updated_at": "2024-08-17T12:51:50.865672Z",
    "lead_time": 1.406
  },
  {
    "text": "在SDRAM操作过程中，所有的动作都是以时钟信号为依据的",
    "id": 6993,
    "label": [
      {
        "start": 1,
        "end": 6,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "时钟信号",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8426,
    "created_at": "2024-08-17T12:51:53.016790Z",
    "updated_at": "2024-08-17T12:51:53.016790Z",
    "lead_time": 1.486
  },
  {
    "text": "由于采用m的交叉存取度的成块传送，两个连续地址字的读取之间不必插入等待状态，这称为零等待存取",
    "id": 6994,
    "label": [
      {
        "start": 6,
        "end": 11,
        "text": "交叉存取度",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8427,
    "created_at": "2024-08-17T12:51:57.570263Z",
    "updated_at": "2024-08-17T12:51:57.570263Z",
    "lead_time": 3.975
  },
  {
    "text": "链式查询方式的缺点是对询问链的电路故障很敏感，如果第i个设备的接口中有关链的电路有故障，那么第i个以后的设备都不能进行工作",
    "id": 6995,
    "label": [
      {
        "start": 31,
        "end": 33,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8428,
    "created_at": "2024-08-17T12:51:59.105584Z",
    "updated_at": "2024-08-17T12:51:59.105584Z",
    "lead_time": 0.926
  },
  {
    "text": "每一代比前一代存储密度提高倍，而每位价格和存取时间都在下降",
    "id": 6996,
    "label": [
      {
        "start": 21,
        "end": 25,
        "text": "存取时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "存储密度",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 17,
        "end": 18,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8429,
    "created_at": "2024-08-17T12:52:02.425399Z",
    "updated_at": "2024-08-17T12:52:02.425399Z",
    "lead_time": 2.726
  },
  {
    "text": "为此，每行设置一个计数器",
    "id": 6997,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8430,
    "created_at": "2024-08-17T12:52:03.785740Z",
    "updated_at": "2024-08-17T12:52:03.785740Z",
    "lead_time": 0.76
  },
  {
    "text": "并行传送的过程示于图b",
    "id": 6998,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "并行传送",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8431,
    "created_at": "2024-08-17T12:52:09.997978Z",
    "updated_at": "2024-08-17T12:52:09.997978Z",
    "lead_time": 5.69
  },
  {
    "text": "立即寻址：立即数可以是位、位、位的操作数，包含在指令中",
    "id": 6999,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "立即寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "立即数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 14,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 15,
        "end": 16,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8432,
    "created_at": "2024-08-17T12:52:35.459792Z",
    "updated_at": "2024-08-17T12:52:35.459792Z",
    "lead_time": 24.917
  },
  {
    "text": "图中下面的虚线部分是一个串行的优先链，称作中断优先级排队链",
    "id": 7000,
    "label": [
      {
        "start": 23,
        "end": 26,
        "text": "优先级",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8433,
    "created_at": "2024-08-17T12:52:38.400233Z",
    "updated_at": "2024-08-17T12:52:38.400233Z",
    "lead_time": 2.235
  },
  {
    "text": "显然，在这种情况下IO设备挪用一两个内存周期，意味着CPU延缓了对指令的执行，或者更明确地说，在CPU执行访内指令的过程中插入DMA请求，挪用了一两个内存周期",
    "id": 7001,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 63,
        "end": 66,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 48,
        "end": 51,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 75,
        "end": 77,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8434,
    "created_at": "2024-08-17T12:52:42.923790Z",
    "updated_at": "2024-08-17T12:52:42.923790Z",
    "lead_time": 3.799
  },
  {
    "text": "这些数据和表格按一定的规律组织起来，使得处理更方便，检索更迅速，用户使用更方便，于是出现了数据库",
    "id": 7002,
    "annotator": 1,
    "annotation_id": 8435,
    "created_at": "2024-08-17T12:52:45.038717Z",
    "updated_at": "2024-08-17T12:52:45.040234Z",
    "lead_time": 1.397
  },
  {
    "text": "不同的机器，所采用的IO指令格式和操作也不相同",
    "id": 7003,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "IO指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8436,
    "created_at": "2024-08-17T12:52:46.233662Z",
    "updated_at": "2024-08-17T12:52:46.233662Z",
    "lead_time": 0.589
  },
  {
    "text": "比如，一次数据cache的读写操作，一个算术逻辑运算操作，或一个输入输出操作",
    "id": 7004,
    "label": [
      {
        "start": 5,
        "end": 12,
        "text": "数据cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "逻辑运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8437,
    "created_at": "2024-08-17T12:52:48.308623Z",
    "updated_at": "2024-08-17T12:52:48.308623Z",
    "lead_time": 1.492
  },
  {
    "text": "版定义了V和V两种信号环境，更新的版本均使用V工作电压",
    "id": 7005,
    "annotator": 1,
    "annotation_id": 8438,
    "created_at": "2024-08-17T12:52:50.468367Z",
    "updated_at": "2024-08-17T12:52:50.468367Z",
    "lead_time": 1.559
  },
  {
    "text": "通道和输入输出处理器DMA方式的出现已经减轻了CPU执行IO操作的压力，使得CPU的效率有显著的提高，而通道的出现则进一步提高了CPU的效率",
    "id": 7006,
    "label": [
      {
        "start": 23,
        "end": 26,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 64,
        "end": 67,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 52,
        "end": 54,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8439,
    "created_at": "2024-08-17T12:53:58.429869Z",
    "updated_at": "2024-08-17T12:53:58.429869Z",
    "lead_time": 67.357
  },
  {
    "text": "相对于其他技术的闪存，其特点是：可以像SRAM和传统ROM那样随机读出任意地址的内容，读出速度高；存储在其中的指令代码可以直接在线执行；可以对单字节或单字进行编程在重新编程之前需要先进行擦除操作；以区块sector或芯片为单位执行擦除操作；拥有独立的数据线和地址线，因而接口方式与SRAM相似；信息存储的可靠性高",
    "id": 7007,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 108,
        "end": 110,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 140,
        "end": 144,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 125,
        "end": 128,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 129,
        "end": 132,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 99,
        "end": 101,
        "text": "区块",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 72,
        "end": 74,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 135,
        "end": 137,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 55,
        "end": 57,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 76,
        "end": 77,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8440,
    "created_at": "2024-08-17T12:54:06.052846Z",
    "updated_at": "2024-08-17T12:54:06.052846Z",
    "lead_time": 6.929
  },
  {
    "text": "例如，接口内用于接收来自CPU等主控设备的控制命令的寄存器称为命令端口，简称命令口，接口内向CPU报告IO设备的工作状态的寄存器称为状态端口或状态口，接口内在外设和总线间交换数据的缓冲寄存器称为数据端口或数据口",
    "id": 7008,
    "label": [
      {
        "start": 90,
        "end": 95,
        "text": "缓冲寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 51,
        "end": 55,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 46,
        "end": 49,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 61,
        "end": 64,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 82,
        "end": 84,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 75,
        "end": 77,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 68,
        "end": 70,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 99,
        "end": 101,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 79,
        "end": 81,
        "text": "外设",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8441,
    "created_at": "2024-08-17T12:54:09.691799Z",
    "updated_at": "2024-08-17T12:54:09.691799Z",
    "lead_time": 2.938
  },
  {
    "text": "cache是一种高速缓冲存储器，是为了解决CPU和主存之间速度不匹配而采用的一项重要的硬件技术，并且发展为多级cache体系，指令cache与数据cache分设体系",
    "id": 7009,
    "label": [
      {
        "start": 8,
        "end": 15,
        "text": "高速缓冲存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 63,
        "end": 70,
        "text": "指令cache",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 71,
        "end": 78,
        "text": "数据cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 55,
        "end": 60,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8442,
    "created_at": "2024-08-17T12:54:11.754051Z",
    "updated_at": "2024-08-17T12:54:11.754051Z",
    "lead_time": 1.408
  },
  {
    "text": "图中每个开关门由控制器中相应的微命令来控制，例如，开关门由控制器中编号为的微命令控制，开关门由编号为的微命令控制，如此等等",
    "id": 7010,
    "label": [
      {
        "start": 15,
        "end": 18,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 51,
        "end": 54,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8443,
    "created_at": "2024-08-17T12:54:13.806286Z",
    "updated_at": "2024-08-17T12:54:13.806286Z",
    "lead_time": 1.431
  },
  {
    "text": "即规格化的结果为",
    "id": 7011,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "规格化",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8444,
    "created_at": "2024-08-17T12:54:15.335551Z",
    "updated_at": "2024-08-17T12:54:15.335551Z",
    "lead_time": 0.922
  },
  {
    "text": "为了完成所必需的求补与乘法操作，时间大约比原码阵列乘法增加倍",
    "id": 7012,
    "label": [
      {
        "start": 21,
        "end": 23,
        "text": "原码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8445,
    "created_at": "2024-08-17T12:54:16.525041Z",
    "updated_at": "2024-08-17T12:54:16.525041Z",
    "lead_time": 0.614
  },
  {
    "text": "在一个统一的时钟C控制下，数据从一个过程段流向相邻的过程段",
    "id": 7013,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8446,
    "created_at": "2024-08-17T12:54:17.719907Z",
    "updated_at": "2024-08-17T12:54:17.719907Z",
    "lead_time": 0.567
  },
  {
    "text": "形成指令地址的方式，称为指令寻址方式",
    "id": 7014,
    "label": [
      {
        "start": 12,
        "end": 18,
        "text": "指令寻址方式",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "指令地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8447,
    "created_at": "2024-08-17T12:54:19.493172Z",
    "updated_at": "2024-08-17T12:54:19.493273Z",
    "lead_time": 1.153
  },
  {
    "text": "当然，我们此处所举的转移地址是随意的，仅仅用来说明转移指令能够改变程序的执行顺序而已",
    "id": 7015,
    "label": [
      {
        "start": 25,
        "end": 29,
        "text": "转移指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "转移地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8448,
    "created_at": "2024-08-17T12:54:21.260404Z",
    "updated_at": "2024-08-17T12:54:21.260404Z",
    "lead_time": 1.125
  },
  {
    "text": "但是对CISC进行的测试表明，最常使用的是一些最简单最基本的指令，仅占指令总数的，但在程序中出现的频率却占",
    "id": 7016,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "CISC",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8449,
    "created_at": "2024-08-17T12:54:33.112055Z",
    "updated_at": "2024-08-17T12:54:33.112055Z",
    "lead_time": 11.21
  },
  {
    "text": "如流水加法器、流水乘法器、流水除法器等",
    "id": 7017,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "乘法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "除法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "加法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "流水",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "流水",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "流水",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8450,
    "created_at": "2024-08-17T12:54:35.624157Z",
    "updated_at": "2024-08-17T12:54:35.624157Z",
    "lead_time": 1.895
  },
  {
    "text": "其定时过程如下：如果CPU希望从外设接收一个字，则它首先通过状态口询问外设的状态，如果该外设的状态标志表明设备已“准备就绪”，那么CPU就从总线上接收数据",
    "id": 7018,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 65,
        "end": 68,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 70,
        "end": 72,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 22,
        "end": 23,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8451,
    "created_at": "2024-08-17T12:54:40.917118Z",
    "updated_at": "2024-08-17T12:54:40.917118Z",
    "lead_time": 4.639
  },
  {
    "text": "数字计算机的主要特点是按位运算，并且不连续地跳动计算",
    "id": 7019,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "数字计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 12,
        "end": 13,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8452,
    "created_at": "2024-08-17T12:54:44.915064Z",
    "updated_at": "2024-08-17T12:54:44.915064Z",
    "lead_time": 3.275
  },
  {
    "text": "由于CPU的速度比主存快，假如能同时从主存取出n条指令，这必然会提高机器的运行速度",
    "id": 7020,
    "label": [
      {
        "start": 9,
        "end": 11,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8453,
    "created_at": "2024-08-17T12:55:07.456177Z",
    "updated_at": "2024-08-17T12:55:07.456177Z",
    "lead_time": 21.944
  },
  {
    "text": "就它的功能来说，是软件，但从形态上来说，又是硬件",
    "id": 7021,
    "label": [
      {
        "start": 9,
        "end": 11,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8454,
    "created_at": "2024-08-17T12:55:26.475226Z",
    "updated_at": "2024-08-17T12:55:26.475226Z",
    "lead_time": 18.373
  },
  {
    "text": "与传统的DRAM相比，SDRAM在存储体的组织方式和对外操作上作了重大改进",
    "id": 7022,
    "label": [
      {
        "start": 11,
        "end": 16,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "存储体",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8455,
    "created_at": "2024-08-17T12:55:31.040117Z",
    "updated_at": "2024-08-17T12:55:31.040117Z",
    "lead_time": 3.985
  },
  {
    "text": "RISC机器一定是流水CPU，但流水CPU不一定是RISC机器",
    "id": 7023,
    "label": [
      {
        "start": 9,
        "end": 14,
        "text": "流水CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 21,
        "text": "流水CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "RISC",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "RISC",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8456,
    "created_at": "2024-08-17T12:55:32.470166Z",
    "updated_at": "2024-08-17T12:55:32.470166Z",
    "lead_time": 0.822
  },
  {
    "text": "以此类推",
    "id": 7024,
    "annotator": 1,
    "annotation_id": 8457,
    "created_at": "2024-08-17T12:55:36.797883Z",
    "updated_at": "2024-08-17T12:55:36.797883Z",
    "lead_time": 3.669
  },
  {
    "text": "而在进行减法时，还要比较绝对值的大小，然后大数减去小数，最后还要给结果选择恰当的符号",
    "id": 7025,
    "annotator": 1,
    "annotation_id": 8458,
    "created_at": "2024-08-17T12:55:38.319988Z",
    "updated_at": "2024-08-17T12:55:38.319988Z",
    "lead_time": 0.889
  },
  {
    "text": "在这两个表达式中，每一个都能用一个三级组合逻辑电路包括反相器来实现",
    "id": 7026,
    "label": [
      {
        "start": 21,
        "end": 25,
        "text": "逻辑电路",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8459,
    "created_at": "2024-08-17T12:55:39.582438Z",
    "updated_at": "2024-08-17T12:55:39.582438Z",
    "lead_time": 0.666
  },
  {
    "text": "其原因是微程序控制中每条微指令都要从控存中读取一次，影响了速度，而硬布线控制主要取决于电路延迟",
    "id": 7027,
    "label": [
      {
        "start": 33,
        "end": 38,
        "text": "硬布线控制",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 9,
        "text": "微程序控制",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8460,
    "created_at": "2024-08-17T12:55:44.174226Z",
    "updated_at": "2024-08-17T12:55:44.174226Z",
    "lead_time": 3.973
  },
  {
    "text": "而实际物理磁盘也以条带形式划分，每个条带是一些物理的块、扇区或其他单位",
    "id": 7028,
    "label": [
      {
        "start": 5,
        "end": 7,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "扇区",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8461,
    "created_at": "2024-08-17T12:55:47.965501Z",
    "updated_at": "2024-08-17T12:55:47.965501Z",
    "lead_time": 3.176
  },
  {
    "text": "阵列除法器有多种形式，如加减交替阵列除法器、补码阵列除法器等",
    "id": 7029,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "阵列除法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 21,
        "text": "阵列除法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 29,
        "text": "阵列除法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8462,
    "created_at": "2024-08-17T12:55:53.349839Z",
    "updated_at": "2024-08-17T12:55:53.349839Z",
    "lead_time": 4.81
  },
  {
    "text": "对定点整数，补码形式为xnxnxx，xn为符号位，则补码表示的定义是采用补码表示法进行减法运算比原码方便多了",
    "id": 7030,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "定点整数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 41,
        "text": "补码表示法",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 48,
        "end": 50,
        "text": "原码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8463,
    "created_at": "2024-08-17T12:55:56.749878Z",
    "updated_at": "2024-08-17T12:55:56.749878Z",
    "lead_time": 2.684
  },
  {
    "text": "扇区的编号有多种方法，可以连续编号，也可间隔编号",
    "id": 7031,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "扇区",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8464,
    "created_at": "2024-08-17T12:56:01.310450Z",
    "updated_at": "2024-08-17T12:56:01.310450Z",
    "lead_time": 3.798
  },
  {
    "text": "指令系统的性能如何，决定了计算机的基本功能，因而指令系统的设计是计算机系统设计中的一个核心问题，它不仅与计算机的硬件结构紧密相关，而且直接关系到用户的使用需要",
    "id": 7032,
    "label": [
      {
        "start": 32,
        "end": 37,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 52,
        "end": 55,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 56,
        "end": 58,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8465,
    "created_at": "2024-08-17T12:56:03.417917Z",
    "updated_at": "2024-08-17T12:56:03.417917Z",
    "lead_time": 1.446
  },
  {
    "text": "当不需要这批信息时，可通过磁头把磁层上所记录的信息全部抹去，称为写“”",
    "id": 7033,
    "label": [
      {
        "start": 13,
        "end": 15,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8466,
    "created_at": "2024-08-17T12:56:05.888825Z",
    "updated_at": "2024-08-17T12:56:05.888825Z",
    "lead_time": 1.759
  },
  {
    "text": "这是一种最简单、最经济的输入输出方式，只需要很少的硬件",
    "id": 7034,
    "label": [
      {
        "start": 25,
        "end": 27,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8467,
    "created_at": "2024-08-17T12:56:15.285939Z",
    "updated_at": "2024-08-17T12:56:15.286947Z",
    "lead_time": 8.715
  },
  {
    "text": "若多余的位是，则简单的截尾即可",
    "id": 7035,
    "label": [
      {
        "start": 11,
        "end": 13,
        "text": "截尾",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 5,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8468,
    "created_at": "2024-08-17T12:56:18.330755Z",
    "updated_at": "2024-08-17T12:56:18.330755Z",
    "lead_time": 2.392
  },
  {
    "text": "总线是构成计算机系统的互联机构，是多个系统功能部件之间进行数据传送的公共通路",
    "id": 7036,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 10,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8469,
    "created_at": "2024-08-17T12:56:20.250178Z",
    "updated_at": "2024-08-17T12:56:20.250178Z",
    "lead_time": 0.896
  },
  {
    "text": "这些寄存器称为端口Port",
    "id": 7037,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8470,
    "created_at": "2024-08-17T12:56:21.880208Z",
    "updated_at": "2024-08-17T12:56:21.880208Z",
    "lead_time": 0.945
  },
  {
    "text": "现将Pentium机的中断处理过程叙述如下：当中断处理的CPU控制权转移涉及特权级改变时，必须把当前的SS和ESP两个寄存器的内容压入系统堆栈予以保存",
    "id": 7038,
    "label": [
      {
        "start": 28,
        "end": 31,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 59,
        "end": 62,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 54,
        "end": 57,
        "text": "ESP",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 69,
        "end": 71,
        "text": "堆栈",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8471,
    "created_at": "2024-08-17T12:56:24.385760Z",
    "updated_at": "2024-08-17T12:56:24.385760Z",
    "lead_time": 1.68
  },
  {
    "text": "这种方式既能够响应随机发生的服务请求，同时又可以省去中断处理的开销",
    "id": 7039,
    "label": [
      {
        "start": 26,
        "end": 28,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8472,
    "created_at": "2024-08-17T12:56:26.048154Z",
    "updated_at": "2024-08-17T12:56:26.048154Z",
    "lead_time": 0.845
  },
  {
    "text": "浮点乘、除法运算步骤浮点数的乘除运算大体分为六步：第一步，操作数检查，如果被除数x为，则商为，如果除数y为，则商为；第二步，阶码加减操作；第三步，尾数乘除操作；第四步，结果规格化；第五步，舍入处理；第六步，确定积的符号",
    "id": 7040,
    "label": [
      {
        "start": 84,
        "end": 89,
        "text": "结果规格化",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 94,
        "end": 98,
        "text": "舍入处理",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 73,
        "end": 75,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 62,
        "end": 64,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8473,
    "created_at": "2024-08-17T12:56:27.961765Z",
    "updated_at": "2024-08-17T12:56:27.961765Z",
    "lead_time": 1.138
  },
  {
    "text": "当CPU读取内存中一个字时，便发出此字的内存地址到cache和主存",
    "id": 7041,
    "label": [
      {
        "start": 31,
        "end": 33,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 25,
        "end": 30,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "内存地址",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 19,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8474,
    "created_at": "2024-08-17T12:56:31.088935Z",
    "updated_at": "2024-08-17T12:56:31.088935Z",
    "lead_time": 2.309
  },
  {
    "text": "事实上，对于总线，这是用C和C控制的一个多路转换器，这种总线控制权的转移几乎不需要什么时间，所以对DMA传送来讲效率是很高的",
    "id": 7042,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 33,
        "text": "总线控制权",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 49,
        "end": 54,
        "text": "DMA传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "转换器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8475,
    "created_at": "2024-08-17T12:56:48.464827Z",
    "updated_at": "2024-08-17T12:56:48.464827Z",
    "lead_time": 16.617
  },
  {
    "text": "需要注意的是，无论是擦除操作还是编程操作都不是能在接到命令后立即完成的，闪存收到擦除或编程命令后需要执行内嵌擦除编程算法进行费时的内部复杂操作才有可能完成操作任务",
    "id": 7043,
    "label": [
      {
        "start": 36,
        "end": 38,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 58,
        "end": 60,
        "text": "算法",
        "labels": [
          "ALG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8476,
    "created_at": "2024-08-17T12:56:51.366235Z",
    "updated_at": "2024-08-17T12:56:51.366235Z",
    "lead_time": 2.203
  },
  {
    "text": "总线周期由被授权的主方启动，以帧nFRAME信号变为有效来指示一个总线周期的开始",
    "id": 7044,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "FRAM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8477,
    "created_at": "2024-08-17T12:56:56.881737Z",
    "updated_at": "2024-08-17T12:56:56.881737Z",
    "lead_time": 4.839
  },
  {
    "text": "控制器由程序计数器、指令寄存器、指令译码器、时序产生器和操作控制器组成，它是发布命令的“决策机构”，即完成协调和指挥整个计算机系统的操作",
    "id": 7045,
    "label": [
      {
        "start": 10,
        "end": 15,
        "text": "指令寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 9,
        "text": "程序计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 27,
        "text": "时序产生器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 60,
        "end": 65,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 28,
        "end": 33,
        "text": "操作控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 21,
        "text": "指令译码器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8478,
    "created_at": "2024-08-17T12:56:59.058391Z",
    "updated_at": "2024-08-17T12:56:59.059905Z",
    "lead_time": 1.405
  },
  {
    "text": "图给出了查询中断程序实例",
    "id": 7046,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8479,
    "created_at": "2024-08-17T12:57:00.560649Z",
    "updated_at": "2024-08-17T12:57:00.560649Z",
    "lead_time": 0.806
  },
  {
    "text": "但各目标方须立即使用此信息，无权中止此写操作过程",
    "id": 7047,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8480,
    "created_at": "2024-08-17T12:57:02.415019Z",
    "updated_at": "2024-08-17T12:57:02.415019Z",
    "lead_time": 1.228
  },
  {
    "text": "保存在堆栈中的中断现场信息被恢复，并由中断点继续执行原程序",
    "id": 7048,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "堆栈",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8481,
    "created_at": "2024-08-17T12:57:05.265839Z",
    "updated_at": "2024-08-17T12:57:05.265839Z",
    "lead_time": 2.203
  },
  {
    "text": "它可以保证外围设备用计算机系统特性所要求的形式发送或接收信息",
    "id": 7049,
    "label": [
      {
        "start": 10,
        "end": 15,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8482,
    "created_at": "2024-08-17T12:57:06.495060Z",
    "updated_at": "2024-08-17T12:57:06.495060Z",
    "lead_time": 0.555
  },
  {
    "text": "第一个问题，尽管外界中断请求是随机的，但CPU只有在当前一条指令执行完毕后，即转入公操作时才受理设备的中断请求，这样才不至于使当前指令的执行受到干扰",
    "id": 7050,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "外界中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 51,
        "end": 55,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 65,
        "end": 67,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8483,
    "created_at": "2024-08-17T12:57:09.236792Z",
    "updated_at": "2024-08-17T12:57:09.236792Z",
    "lead_time": 2.058
  },
  {
    "text": "如果连续访问块号相距m整数倍的两个块，因两个块映射到同一cache行时，就会发生冲突",
    "id": 7051,
    "label": [
      {
        "start": 28,
        "end": 34,
        "text": "cache行",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "块号",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8484,
    "created_at": "2024-08-17T12:57:11.743819Z",
    "updated_at": "2024-08-17T12:57:11.743819Z",
    "lead_time": 1.753
  },
  {
    "text": "这种带全部块地址一起保存的方法，可使主存的一个块直接复制到cache中的任意一行上，非常灵活",
    "id": 7052,
    "label": [
      {
        "start": 29,
        "end": 34,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "块地址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8485,
    "created_at": "2024-08-17T12:57:15.298776Z",
    "updated_at": "2024-08-17T12:57:15.298776Z",
    "lead_time": 2.875
  },
  {
    "text": "图Pentium寻址方式的计算无论是实地址模式还是保护模式，段基地址的获取方式已是固定的方式",
    "id": 7053,
    "label": [
      {
        "start": 19,
        "end": 23,
        "text": "地址模式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8486,
    "created_at": "2024-08-17T12:57:24.570918Z",
    "updated_at": "2024-08-17T12:57:24.570918Z",
    "lead_time": 8.603
  },
  {
    "text": "PCIe总线采用基于交换的技术，交换器Switch可以扩展PCIe总线，PCIe总线系统可以通过交换器连接多个PCIe设备",
    "id": 7054,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "PCIe总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 35,
        "text": "PCIe总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 42,
        "text": "PCIe总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 55,
        "end": 59,
        "text": "PCIe",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "交换器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 48,
        "end": 51,
        "text": "交换器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8487,
    "created_at": "2024-08-17T12:57:31.480235Z",
    "updated_at": "2024-08-17T12:57:31.480235Z",
    "lead_time": 6.256
  },
  {
    "text": "但是这类设备的辅助操作时间很长，如磁盘机平均找道时间是ms，磁带机走带时间可以长达几分钟",
    "id": 7055,
    "label": [
      {
        "start": 17,
        "end": 20,
        "text": "磁盘机",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8488,
    "created_at": "2024-08-17T12:57:33.443713Z",
    "updated_at": "2024-08-17T12:57:33.443713Z",
    "lead_time": 1.219
  },
  {
    "text": "由于规格化的浮点数的尾数域最左位最高有效位总是，故这一位无需存储，而认为隐藏在小数点的左边",
    "id": 7056,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "规格化",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "有效位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 15,
        "end": 16,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 27,
        "end": 28,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8489,
    "created_at": "2024-08-17T12:57:36.458015Z",
    "updated_at": "2024-08-17T12:57:36.458015Z",
    "lead_time": 2.27
  },
  {
    "text": "高级语言如C，FORTRAN等，其语句和用法与具体机器的指令系统无关",
    "id": 7057,
    "label": [
      {
        "start": 28,
        "end": 32,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "高级语言",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8490,
    "created_at": "2024-08-17T12:57:38.095825Z",
    "updated_at": "2024-08-17T12:57:38.095825Z",
    "lead_time": 0.917
  },
  {
    "text": "表中的“写”操作是指总线上的写入操作，并非直接写入存储矩阵，而是写命令寄存器的“写周期”操作",
    "id": 7058,
    "label": [
      {
        "start": 25,
        "end": 29,
        "text": "存储矩阵",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "写周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8491,
    "created_at": "2024-08-17T12:57:40.308815Z",
    "updated_at": "2024-08-17T12:57:40.308815Z",
    "lead_time": 1.553
  },
  {
    "text": "至此，MOV指令执行结束",
    "id": 7059,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "MOV",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8492,
    "created_at": "2024-08-17T12:57:41.605296Z",
    "updated_at": "2024-08-17T12:57:41.605296Z",
    "lead_time": 0.634
  },
  {
    "text": "图示出了一个最简单的DMA控制器组成示意图，它由以下逻辑部件组成",
    "id": 7060,
    "label": [
      {
        "start": 10,
        "end": 16,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8493,
    "created_at": "2024-08-17T12:57:43.224742Z",
    "updated_at": "2024-08-17T12:57:43.224742Z",
    "lead_time": 1.022
  },
  {
    "text": "节拍电位信号的产生电路与节拍脉冲产生电路十分类似，它可以在节拍脉冲信号时序器的基础上产生，运行中以循环方式工作，并与节拍脉冲保持同步",
    "id": 7061,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "节拍电位信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 35,
        "text": "节拍脉冲信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "节拍脉冲",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 58,
        "end": 62,
        "text": "节拍脉冲",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 64,
        "end": 66,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8494,
    "created_at": "2024-08-17T12:57:44.938737Z",
    "updated_at": "2024-08-17T12:57:44.938737Z",
    "lead_time": 1.125
  },
  {
    "text": "因此，CPU的输入输出操作实际上分为两个传输阶段：IO接口与外设间的数据传送，以及CPU与IO接口之间的数据传送如图所示",
    "id": 7062,
    "label": [
      {
        "start": 25,
        "end": 29,
        "text": "IO接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 45,
        "end": 49,
        "text": "IO接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 44,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "外设",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8495,
    "created_at": "2024-08-17T12:57:46.297297Z",
    "updated_at": "2024-08-17T12:57:46.297297Z",
    "lead_time": 0.649
  },
  {
    "text": "这些标志位通常分别由位触发器保存",
    "id": 7063,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 5,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 11,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8496,
    "created_at": "2024-08-17T12:57:47.446725Z",
    "updated_at": "2024-08-17T12:57:47.446725Z",
    "lead_time": 0.452
  },
  {
    "text": "例如，Mbit容量的存储器可以组织成Mbit，也可组织成Kbit，或者Kbit",
    "id": 7064,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "bit",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "bit",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "bit",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "bit",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8497,
    "created_at": "2024-08-17T12:57:49.528752Z",
    "updated_at": "2024-08-17T12:57:49.528752Z",
    "lead_time": 1.42
  },
  {
    "text": "IO设备要求DMA传送时可能遇到两种情况：一种是此时CPU不需要访内，如CPU正在执行乘法指令",
    "id": 7065,
    "label": [
      {
        "start": 6,
        "end": 11,
        "text": "DMA传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8498,
    "created_at": "2024-08-17T12:57:51.708408Z",
    "updated_at": "2024-08-17T12:57:51.708408Z",
    "lead_time": 1.478
  },
  {
    "text": "图中，A、A到An为n个中断向量的向量地址；PC、PC到PCn为各个中断服务程序的入口地址，在中断响应时由硬件自动加载到程序计数器PC中；PSW、PSW到PSWn为各个中断服务程序开始执行时的初始程序状态字，在中断响应时由硬件自动加载到程序状态字寄存器PSWR中",
    "id": 7066,
    "label": [
      {
        "start": 123,
        "end": 126,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 60,
        "end": 67,
        "text": "程序计数器PC",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 40,
        "text": "中断服务程序",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 84,
        "end": 90,
        "text": "中断服务程序",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "中断向量",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 105,
        "end": 107,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 98,
        "end": 100,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 118,
        "end": 120,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 53,
        "end": 55,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 111,
        "end": 113,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 102,
        "end": 103,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 122,
        "end": 123,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8499,
    "created_at": "2024-08-17T12:58:52.540280Z",
    "updated_at": "2024-08-17T12:58:52.540280Z",
    "lead_time": 60.057
  },
  {
    "text": "设过程段Si所需的时间为i，缓冲寄存器的延时为，线性流水线的时钟周期定义为maxim故流水线处理的频率为f",
    "id": 7067,
    "label": [
      {
        "start": 14,
        "end": 19,
        "text": "缓冲寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8500,
    "created_at": "2024-08-17T12:58:54.903641Z",
    "updated_at": "2024-08-17T12:58:54.903641Z",
    "lead_time": 1.556
  },
  {
    "text": "由于光盘的恒定线速度是每秒钟读出个扇区，故FR的值实际上就是秒内的扇区号",
    "id": 7068,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "扇区",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "扇区",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8501,
    "created_at": "2024-08-17T12:58:56.507791Z",
    "updated_at": "2024-08-17T12:58:56.507791Z",
    "lead_time": 0.857
  },
  {
    "text": "十进制数串表示法的优点是位长可变，许多机器中规定该长度为，有的甚至更长",
    "id": 7069,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 13,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8502,
    "created_at": "2024-08-17T12:58:58.907348Z",
    "updated_at": "2024-08-17T12:58:58.907348Z",
    "lead_time": 1.745
  },
  {
    "text": "尾数部分给出有效数字的位数，因而决定了浮点数的表示精度",
    "id": 7070,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8503,
    "created_at": "2024-08-17T12:59:04.436284Z",
    "updated_at": "2024-08-17T12:59:04.436284Z",
    "lead_time": 4.845
  },
  {
    "text": "由图可知，所有指令的取指周期放在M节拍",
    "id": 7071,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "取指周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8504,
    "created_at": "2024-08-17T12:59:06.240182Z",
    "updated_at": "2024-08-17T12:59:06.240182Z",
    "lead_time": 1.095
  },
  {
    "text": "表列出了左、右端口进行读写操作时的功能判断",
    "id": 7072,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8505,
    "created_at": "2024-08-17T12:59:07.802449Z",
    "updated_at": "2024-08-17T12:59:07.802449Z",
    "lead_time": 0.871
  },
  {
    "text": "多总线结构确保高速、中速、低速设备连接到不同的总线上同时工作，以提高总线的效率和吞吐量，而且处理器结构的变化不影响高速总线",
    "id": 7073,
    "label": [
      {
        "start": 13,
        "end": 17,
        "text": "低速设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "多总线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 46,
        "end": 49,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 59,
        "end": 61,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8506,
    "created_at": "2024-08-17T12:59:10.880938Z",
    "updated_at": "2024-08-17T12:59:10.880938Z",
    "lead_time": 2.419
  },
  {
    "text": "而通道的出现则进一步提高了CPU的效率",
    "id": 7074,
    "label": [
      {
        "start": 1,
        "end": 3,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8507,
    "created_at": "2024-08-17T12:59:12.196925Z",
    "updated_at": "2024-08-17T12:59:12.196925Z",
    "lead_time": 0.595
  },
  {
    "text": "图中的环形箭头符号表示某信号线由一个设备驱动转换成另一设备驱动的过渡期，以此过渡期避免两个设备同时驱动一条信号线的冲突",
    "id": 7075,
    "annotator": 1,
    "annotation_id": 8508,
    "created_at": "2024-08-17T12:59:13.485951Z",
    "updated_at": "2024-08-17T12:59:13.485951Z",
    "lead_time": 0.606
  },
  {
    "text": "规整性规整性包括指令系统的对称性、匀齐性、指令格式和数据格式的一致性",
    "id": 7076,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8509,
    "created_at": "2024-08-17T12:59:14.772822Z",
    "updated_at": "2024-08-17T12:59:14.772822Z",
    "lead_time": 0.639
  },
  {
    "text": "但是DMA只能处理简单的数据传送，不能在传送数据的同时进行判断和计算",
    "id": 7077,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8510,
    "created_at": "2024-08-17T12:59:15.993082Z",
    "updated_at": "2024-08-17T12:59:15.993082Z",
    "lead_time": 0.528
  },
  {
    "text": "程序的局部性原理统计表明，无论是访问存取指令还是存储数据，在一个较短的时间间隔内，程序所访问的存储器地址在很大比例上集中在存储器地址空间的很小范围内",
    "id": 7078,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "局部性原理",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 47,
        "end": 52,
        "text": "存储器地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 61,
        "end": 66,
        "text": "存储器地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "取指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8511,
    "created_at": "2024-08-17T12:59:18.887898Z",
    "updated_at": "2024-08-17T12:59:18.887898Z",
    "lead_time": 2.156
  },
  {
    "text": "因此，累加寄存器AC对单地址指令格式来说是隐含地址",
    "id": 7079,
    "label": [
      {
        "start": 11,
        "end": 16,
        "text": "单地址指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8512,
    "created_at": "2024-08-17T12:59:21.131044Z",
    "updated_at": "2024-08-17T12:59:21.131044Z",
    "lead_time": 1.519
  },
  {
    "text": "输入输出操作的一般过程由于接口与CPU的速度大致相当，仅从CPU读写接口内寄存器的角度看，CPU读写端口的方式与CPU读写内存单元是相似的",
    "id": 7080,
    "label": [
      {
        "start": 61,
        "end": 65,
        "text": "内存单元",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 56,
        "end": 59,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8513,
    "created_at": "2024-08-17T12:59:28.755872Z",
    "updated_at": "2024-08-17T12:59:28.755872Z",
    "lead_time": 6.891
  },
  {
    "text": "环形脉冲发生器环形脉冲发生器的作用是产生一组有序的间隔相等或不等的脉冲序列，以便通过译码电路来产生最后所需的节拍脉冲，其电路参见动画视频",
    "id": 7081,
    "label": [
      {
        "start": 54,
        "end": 58,
        "text": "节拍脉冲",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 42,
        "end": 46,
        "text": "译码电路",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8514,
    "created_at": "2024-08-17T12:59:31.680101Z",
    "updated_at": "2024-08-17T12:59:31.680101Z",
    "lead_time": 2.16
  },
  {
    "text": "比例因子的基数对二进记数制的机器是一个常数",
    "id": 7082,
    "annotator": 1,
    "annotation_id": 8515,
    "created_at": "2024-08-17T13:00:03.938954Z",
    "updated_at": "2024-08-17T13:00:03.938954Z",
    "lead_time": 31.564
  },
  {
    "text": "实际中经常采用的是选择型DMA控制器和多路型DMA控制器，它们已经被做成集成电路片子",
    "id": 7083,
    "label": [
      {
        "start": 36,
        "end": 40,
        "text": "集成电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 18,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 28,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8516,
    "created_at": "2024-08-17T13:00:05.670804Z",
    "updated_at": "2024-08-17T13:00:05.670804Z",
    "lead_time": 1.073
  },
  {
    "text": "其中cache采用SRAM或DRAM",
    "id": 7084,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8517,
    "created_at": "2024-08-17T13:00:06.850937Z",
    "updated_at": "2024-08-17T13:00:06.850937Z",
    "lead_time": 0.486
  },
  {
    "text": "前者称为系统级接口，后者称为设备级接口",
    "id": 7085,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8518,
    "created_at": "2024-08-17T13:00:08.324076Z",
    "updated_at": "2024-08-17T13:00:08.324076Z",
    "lead_time": 0.679
  },
  {
    "text": "光栅扫描图形显示器产生图形的方法称为相邻像素串接法，即曲线是由相邻像素串接而成",
    "id": 7086,
    "label": [
      {
        "start": 4,
        "end": 9,
        "text": "图形显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "光栅扫描",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8519,
    "created_at": "2024-08-17T13:00:10.045774Z",
    "updated_at": "2024-08-17T13:00:10.045774Z",
    "lead_time": 1.011
  },
  {
    "text": "此时，由寻址模式给予指示，如X",
    "id": 7087,
    "label": [
      {
        "start": 4,
        "end": 8,
        "text": "寻址模式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8520,
    "created_at": "2024-08-17T13:00:11.413863Z",
    "updated_at": "2024-08-17T13:00:11.413863Z",
    "lead_time": 0.646
  },
  {
    "text": "这些地址在各模块中如何安排，有两种方式：一种是顺序方式，一种是交叉方式",
    "id": 7088,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8521,
    "created_at": "2024-08-17T13:00:12.987665Z",
    "updated_at": "2024-08-17T13:00:12.987665Z",
    "lead_time": 0.906
  },
  {
    "text": "字节多路通道和数组多路通道也有不同之处，主要是：数组多路通道允许多个设备同时工作，但只允许一个设备进行传输型操作，其他设备进行控制型操作",
    "id": 7089,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8522,
    "created_at": "2024-08-17T13:00:22.956299Z",
    "updated_at": "2024-08-17T13:00:22.956299Z",
    "lead_time": 9.303
  },
  {
    "text": "计算机组成原理所有的指令都是位长，并有规整的格式",
    "id": 7090,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 14,
        "end": 15,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8523,
    "created_at": "2024-08-17T13:00:25.752748Z",
    "updated_at": "2024-08-17T13:00:25.752748Z",
    "lead_time": 2.072
  },
  {
    "text": "另一种是外围处理机PPU",
    "id": 7091,
    "label": [
      {
        "start": 4,
        "end": 9,
        "text": "外围处理机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8524,
    "created_at": "2024-08-17T13:00:27.085020Z",
    "updated_at": "2024-08-17T13:00:27.085020Z",
    "lead_time": 0.521
  },
  {
    "text": "对应异步DRAM的RAS和CAS无效变高",
    "id": 7092,
    "label": [
      {
        "start": 2,
        "end": 8,
        "text": "异步DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "CAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "RAS",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8525,
    "created_at": "2024-08-17T13:00:28.534911Z",
    "updated_at": "2024-08-17T13:00:28.534911Z",
    "lead_time": 0.729
  },
  {
    "text": "本节前面讲述的内容基本上属于静态微程序设计的概念",
    "id": 7093,
    "label": [
      {
        "start": 16,
        "end": 21,
        "text": "微程序设计",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8526,
    "created_at": "2024-08-17T13:00:29.881051Z",
    "updated_at": "2024-08-17T13:00:29.881051Z",
    "lead_time": 0.643
  },
  {
    "text": "如果是输出过程，一般需要以下三个步骤：CPU把一个地址值放在地址总线上，选择一个输出设备；CPU把数据放在数据总线上；输出设备认为数据有效，从而把数据取走",
    "id": 7094,
    "label": [
      {
        "start": 40,
        "end": 44,
        "text": "输出设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 59,
        "end": 63,
        "text": "输出设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "地址总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 53,
        "end": 57,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8527,
    "created_at": "2024-08-17T13:00:32.367287Z",
    "updated_at": "2024-08-17T13:00:32.367287Z",
    "lead_time": 1.803
  },
  {
    "text": "内存储器的性能指标主要是存储容量和存取速度，后者通常可以用存取时间、存储周期和存储器带宽描述",
    "id": 7095,
    "label": [
      {
        "start": 29,
        "end": 33,
        "text": "存取时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "存储周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "存取速度",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "内存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "性能指标",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "带宽",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8528,
    "created_at": "2024-08-17T13:00:34.743953Z",
    "updated_at": "2024-08-17T13:00:34.743953Z",
    "lead_time": 1.546
  },
  {
    "text": "但随着程序占用存储器容量的增长和多用户多任务系统的出现，在程序设计时，程序所需的存储器容量与计算机系统实际配备的主存储器的容量之间往往存在着矛盾",
    "id": 7096,
    "label": [
      {
        "start": 46,
        "end": 51,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "程序设计",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 56,
        "end": 60,
        "text": "主存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8529,
    "created_at": "2024-08-17T13:00:39.010019Z",
    "updated_at": "2024-08-17T13:00:39.010019Z",
    "lead_time": 3.434
  },
  {
    "text": "有影响的算法语言有BASIC、FORTRAN、C、C、Java等",
    "id": 7097,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "算法",
        "labels": [
          "ALG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8530,
    "created_at": "2024-08-17T13:00:48.512568Z",
    "updated_at": "2024-08-17T13:00:48.512568Z",
    "lead_time": 8.78
  },
  {
    "text": "常用的计算机输入设备有图形输入设备键盘、鼠标、图像输入设备、语音输入设备",
    "id": 7098,
    "label": [
      {
        "start": 17,
        "end": 19,
        "text": "键盘",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "输入设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "输入设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "输入设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "输入设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "鼠标",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8531,
    "created_at": "2024-08-17T13:00:52.340463Z",
    "updated_at": "2024-08-17T13:00:52.340463Z",
    "lead_time": 3.177
  },
  {
    "text": "从指令的操作码功能来考虑，一个较完善的指令系统，应当有数据处理、数据存储、数据传送、程序控制四大类指令，具体有数据传送类指令、算术运算类指令、逻辑运算类指令、程序控制类指令、输入输出类指令、字符串类指令、系统控制类指令",
    "id": 7099,
    "label": [
      {
        "start": 102,
        "end": 109,
        "text": "系统控制类指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 55,
        "end": 62,
        "text": "数据传送类指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 63,
        "end": 70,
        "text": "算术运算类指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 79,
        "end": 86,
        "text": "程序控制类指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 71,
        "end": 78,
        "text": "逻辑运算类指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 95,
        "end": 101,
        "text": "字符串类指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 49,
        "end": 51,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 92,
        "end": 94,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8532,
    "created_at": "2024-08-17T13:01:00.303720Z",
    "updated_at": "2024-08-17T13:01:00.303720Z",
    "lead_time": 6.886
  },
  {
    "text": "水平型微指令用户难以掌握，而垂直型微指令与指令比较相似，相对来说，比较容易掌握",
    "id": 7100,
    "label": [
      {
        "start": 14,
        "end": 20,
        "text": "垂直型微指令",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "水平型微指令",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8533,
    "created_at": "2024-08-17T13:01:29.330498Z",
    "updated_at": "2024-08-17T13:01:29.330498Z",
    "lead_time": 27.118
  },
  {
    "text": "PCI总线支持隐藏式仲裁",
    "id": 7101,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 12,
        "text": "隐藏式仲裁",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8534,
    "created_at": "2024-08-17T13:01:34.495818Z",
    "updated_at": "2024-08-17T13:01:34.495818Z",
    "lead_time": 2.188
  },
  {
    "text": "显然这增加了DRAM的位成本",
    "id": 7102,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8535,
    "created_at": "2024-08-17T13:01:41.520175Z",
    "updated_at": "2024-08-17T13:01:41.520175Z",
    "lead_time": 3.461
  },
  {
    "text": "当一个进程运行时，其页表中一部分在主存中，另一部分则在辅存中保存",
    "id": 7103,
    "label": [
      {
        "start": 17,
        "end": 19,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "进程",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8536,
    "created_at": "2024-08-17T13:01:45.625437Z",
    "updated_at": "2024-08-17T13:01:45.625437Z",
    "lead_time": 1.496
  },
  {
    "text": "用算法语言编写的程序称为源程序",
    "id": 7104,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "源程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "算法",
        "labels": [
          "ALG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8537,
    "created_at": "2024-08-17T13:01:59.212783Z",
    "updated_at": "2024-08-17T13:01:59.213782Z",
    "lead_time": 11.421
  },
  {
    "text": "有了虚存机制后，应用程序就可以透明地使用整个虚存空间",
    "id": 7105,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "应用程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "虚存空间",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "虚存",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8538,
    "created_at": "2024-08-17T13:02:16.281070Z",
    "updated_at": "2024-08-17T13:02:16.281070Z",
    "lead_time": 15.355
  },
  {
    "text": "因此通常把形式地址A又称为直接地址",
    "id": 7106,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "形式地址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8539,
    "created_at": "2024-08-17T13:02:20.838668Z",
    "updated_at": "2024-08-17T13:02:20.838668Z",
    "lead_time": 2.591
  },
  {
    "text": "第一个单元用于取指令，将指令译码，并将它们送到相应的功能单元执行",
    "id": 7107,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "取指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "功能单元",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "指令译码",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8540,
    "created_at": "2024-08-17T13:02:27.323859Z",
    "updated_at": "2024-08-17T13:02:27.323859Z",
    "lead_time": 4.378
  },
  {
    "text": "CPU执行IO指令时需要把指令中的设备地址送到地址总线上，用以指示CPU要选择的设备",
    "id": 7108,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "IO指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "地址总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "设备地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8541,
    "created_at": "2024-08-18T01:02:16.903483Z",
    "updated_at": "2024-08-18T01:02:16.903483Z",
    "lead_time": 2.368
  },
  {
    "text": "因此当代总线标准普遍采用独立请求方式",
    "id": 7109,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 18,
        "text": "独立请求方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8542,
    "created_at": "2024-08-18T01:02:17.893679Z",
    "updated_at": "2024-08-18T01:02:17.893679Z",
    "lead_time": 0.722
  },
  {
    "text": "在这种方法中，微地址寄存器通常改为计数器",
    "id": 7110,
    "label": [
      {
        "start": 7,
        "end": 13,
        "text": "微地址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8543,
    "created_at": "2024-08-18T01:02:18.765373Z",
    "updated_at": "2024-08-18T01:02:18.765373Z",
    "lead_time": 0.622
  },
  {
    "text": "一个节拍电位持续时间，通常也是一个CPU周期时间",
    "id": 7111,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "节拍电位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 22,
        "text": "CPU周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8544,
    "created_at": "2024-08-18T01:02:19.677090Z",
    "updated_at": "2024-08-18T01:02:35.136953Z",
    "lead_time": 14.14
  },
  {
    "text": "本章小结CPU是计算机的中央处理部件，具有指令控制、操作控制、时间控制、数据加工等基本功能",
    "id": 7112,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 35,
        "text": "时间控制",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 36,
        "end": 40,
        "text": "数据加工",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "指令控制",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8545,
    "created_at": "2024-08-18T01:02:38.108085Z",
    "updated_at": "2024-08-18T01:02:38.108085Z",
    "lead_time": 1.584
  },
  {
    "text": "频繁的置换会使cache效率下降",
    "id": 7113,
    "label": [
      {
        "start": 7,
        "end": 12,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8546,
    "created_at": "2024-08-18T01:02:38.920971Z",
    "updated_at": "2024-08-18T01:02:38.920971Z",
    "lead_time": 0.557
  },
  {
    "text": "这样，通用寄存器中的数就可以进入到任一组专用寄存器中去，从而使数据传送更为灵活",
    "id": 7114,
    "label": [
      {
        "start": 20,
        "end": 25,
        "text": "专用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 8,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8547,
    "created_at": "2024-08-18T01:02:39.921605Z",
    "updated_at": "2024-08-18T01:02:39.921605Z",
    "lead_time": 0.741
  },
  {
    "text": "磁带存储设备由磁带机和磁带两部分组成，它通常用作为海量存储设备的数据备份",
    "id": 7115,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8548,
    "created_at": "2024-08-18T01:02:41.441253Z",
    "updated_at": "2024-08-18T01:02:41.441253Z",
    "lead_time": 1.265
  },
  {
    "text": "为了和下面讲到的内容做比较，不妨按以下方法把使用算盘进行解题的过程步骤事先用笔详细地记录在带横格的纸上",
    "id": 7116,
    "annotator": 1,
    "annotation_id": 8549,
    "created_at": "2024-08-18T01:02:42.666273Z",
    "updated_at": "2024-08-18T01:02:42.666273Z",
    "lead_time": 0.979
  },
  {
    "text": "指令就是要计算机执行某种操作的命令",
    "id": 7117,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8550,
    "created_at": "2024-08-18T01:02:43.960868Z",
    "updated_at": "2024-08-18T01:02:43.960868Z",
    "lead_time": 1.062
  },
  {
    "text": "计算机中的逻辑运算，主要是指逻辑非、逻辑加、逻辑乘、逻辑异等四种基本运算",
    "id": 7118,
    "label": [
      {
        "start": 14,
        "end": 17,
        "text": "逻辑非",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "逻辑运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "逻辑加",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "逻辑乘",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8551,
    "created_at": "2024-08-18T01:02:45.029244Z",
    "updated_at": "2024-08-18T01:02:45.029244Z",
    "lead_time": 0.826
  },
  {
    "text": "在仲裁阶段，竞争的设备以自己的设备号驱动数据线中相应的位线如ID的设备驱动DB线，并与数据线上的值进行比较",
    "id": 7119,
    "label": [
      {
        "start": 20,
        "end": 23,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 28,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8552,
    "created_at": "2024-08-18T01:02:46.823695Z",
    "updated_at": "2024-08-18T01:02:46.823695Z",
    "lead_time": 1.541
  },
  {
    "text": "垂直型微指令的设计思想在Pentium、安腾系列机中得到了应用",
    "id": 7120,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "垂直型微指令",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8553,
    "created_at": "2024-08-18T01:03:05.488124Z",
    "updated_at": "2024-08-18T01:03:05.488124Z",
    "lead_time": 18.013
  },
  {
    "text": "在指标上，外围设备不断采用新技术，向低成本、小体积、高速、大容量、低功耗等方面发展",
    "id": 7121,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8554,
    "created_at": "2024-08-18T01:03:26.735936Z",
    "updated_at": "2024-08-18T01:03:26.735936Z",
    "lead_time": 20.703
  },
  {
    "text": "主机与磁盘驱动器交换数据的控制逻辑见图b",
    "id": 7122,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "磁盘驱动器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8555,
    "created_at": "2024-08-18T01:03:30.673164Z",
    "updated_at": "2024-08-18T01:03:30.673164Z",
    "lead_time": 3.552
  },
  {
    "text": "程序调度",
    "id": 7123,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8556,
    "created_at": "2024-08-18T01:03:31.545681Z",
    "updated_at": "2024-08-18T01:03:31.545681Z",
    "lead_time": 0.44
  },
  {
    "text": "设x，y，先用习惯方法求其乘积，其过程如下：xyz运算的过程与十进制乘法相似：从乘数y的最低位开始，若这一位为“”，则将被乘数x写下；若这一位为“”，则写下全",
    "id": 7124,
    "label": [
      {
        "start": 31,
        "end": 34,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 46,
        "end": 47,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 53,
        "end": 54,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 70,
        "end": 71,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8557,
    "created_at": "2024-08-18T01:03:34.313155Z",
    "updated_at": "2024-08-18T01:03:34.313155Z",
    "lead_time": 2.386
  },
  {
    "text": "用下式计算：CPI执行某段程序所需的CPU时钟周期数程序包含的指令条数MIPSMillionInstructionsPerSecond的缩写，表示平均每秒执行多少百万条定点指令数，用下式计算：MIPS指令数程序执行时间FLOPSFloatingpointOperationsPerSecond的缩写，表示每秒执行浮点操作的次数，用来衡量机器浮点操作的性能",
    "id": 7125,
    "label": [
      {
        "start": 109,
        "end": 114,
        "text": "FLOPS",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 35,
        "end": 39,
        "text": "MIPS",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 96,
        "end": 100,
        "text": "MIPS",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 105,
        "end": 109,
        "text": "执行时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 84,
        "end": 86,
        "text": "定点",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 103,
        "end": 105,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 86,
        "end": 88,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 100,
        "end": 102,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 21,
        "end": 26,
        "text": "时钟周期数",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8558,
    "created_at": "2024-08-18T01:04:00.933756Z",
    "updated_at": "2024-08-18T01:04:00.933756Z",
    "lead_time": 26.215
  },
  {
    "text": "它又分为数组多路通道和字节多路通道",
    "id": 7126,
    "label": [
      {
        "start": 11,
        "end": 13,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8559,
    "created_at": "2024-08-18T01:04:03.401213Z",
    "updated_at": "2024-08-18T01:04:03.401213Z",
    "lead_time": 2.038
  },
  {
    "text": "表给出了底部引导区版本的区块地址表，其低地址区通常存放系统引导程序和一些参数，因而区块尺寸较小并且可以附加特定的写保护措施，前个区块大小分别为KB、KB、KB、KB",
    "id": 7127,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "块地址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "区块",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 64,
        "end": 66,
        "text": "区块",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 71,
        "end": 73,
        "text": "KB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 74,
        "end": 76,
        "text": "KB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 77,
        "end": 79,
        "text": "KB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 80,
        "end": 82,
        "text": "KB",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8560,
    "created_at": "2024-08-18T01:04:54.441413Z",
    "updated_at": "2024-08-18T01:04:54.441413Z",
    "lead_time": 50.533
  },
  {
    "text": "外部设备请求服务的中断叫外中断",
    "id": 7128,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "外部设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "外中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8561,
    "created_at": "2024-08-18T01:05:10.127872Z",
    "updated_at": "2024-08-18T01:05:10.127872Z",
    "lead_time": 15.166
  },
  {
    "text": "个片组的列选通信号CASCAS分别与CPU送出的个字节允许信号BEBE相对应",
    "id": 7129,
    "label": [
      {
        "start": 4,
        "end": 9,
        "text": "列选通信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "CAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "CAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8562,
    "created_at": "2024-08-18T01:05:12.115463Z",
    "updated_at": "2024-08-18T01:05:12.115463Z",
    "lead_time": 1.464
  },
  {
    "text": "因此，CDR光盘通过激光烧和不烧斑点表示和，而CDROM则通过凹凸区来表示",
    "id": 7130,
    "label": [
      {
        "start": 25,
        "end": 28,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8563,
    "created_at": "2024-08-18T01:05:18.237701Z",
    "updated_at": "2024-08-18T01:05:18.237701Z",
    "lead_time": 5.595
  },
  {
    "text": "图是磁盘驱动器外形和结构示意图",
    "id": 7131,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "磁盘驱动器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8564,
    "created_at": "2024-08-18T01:05:19.491559Z",
    "updated_at": "2024-08-18T01:05:19.491559Z",
    "lead_time": 0.756
  },
  {
    "text": "除操作码字段外，其他四个字段都是可选字段不选时取字节",
    "id": 7132,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8565,
    "created_at": "2024-08-18T01:05:21.250828Z",
    "updated_at": "2024-08-18T01:05:21.250828Z",
    "lead_time": 1.258
  },
  {
    "text": "程序查询方式是一种简单的输入输出方式，数据在CPU和外围设备之间的传送完全靠计算机程序控制",
    "id": 7133,
    "label": [
      {
        "start": 38,
        "end": 41,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "程序查询方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8566,
    "created_at": "2024-08-18T01:05:32.151501Z",
    "updated_at": "2024-08-18T01:05:32.151501Z",
    "lead_time": 10.374
  },
  {
    "text": "分页方式的优点是页长固定，因而便于构造页表、易于管理，且不存在外碎片",
    "id": 7134,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "分页",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 9,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8567,
    "created_at": "2024-08-18T01:05:40.758954Z",
    "updated_at": "2024-08-18T01:05:40.758954Z",
    "lead_time": 8.115
  },
  {
    "text": "一片位的SRAM构成cache，保存最近访问的一行数据",
    "id": 7135,
    "label": [
      {
        "start": 10,
        "end": 15,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 2,
        "end": 3,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8568,
    "created_at": "2024-08-18T01:05:43.082310Z",
    "updated_at": "2024-08-18T01:05:43.082310Z",
    "lead_time": 1.797
  },
  {
    "text": "因为它是无形的东西，所以称为软件或软设备",
    "id": 7136,
    "label": [
      {
        "start": 14,
        "end": 16,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8569,
    "created_at": "2024-08-18T01:05:44.265831Z",
    "updated_at": "2024-08-18T01:05:44.265831Z",
    "lead_time": 0.702
  },
  {
    "text": "Pentium微型机就是一个超标量流水计算机",
    "id": 7137,
    "label": [
      {
        "start": 14,
        "end": 22,
        "text": "超标量流水计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "微型机",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8570,
    "created_at": "2024-08-18T01:05:45.674131Z",
    "updated_at": "2024-08-18T01:05:45.674131Z",
    "lead_time": 0.878
  },
  {
    "text": "假如BG到达的接口无总线请求，则继续往下查询；假如BG到达的接口有总线请求，BG信号便不再往下查询",
    "id": 7138,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "总线请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "总线请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8571,
    "created_at": "2024-08-18T01:05:47.186432Z",
    "updated_at": "2024-08-18T01:05:47.186432Z",
    "lead_time": 1.024
  },
  {
    "text": "如果从“”开始，各设备的优先次序与链式查询法相同，优先级的顺序是固定的",
    "id": 7139,
    "label": [
      {
        "start": 25,
        "end": 28,
        "text": "优先级",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8572,
    "created_at": "2024-08-18T01:05:49.051609Z",
    "updated_at": "2024-08-18T01:05:49.051609Z",
    "lead_time": 1.358
  },
  {
    "text": "相对寻址隐含引用的专用寄存器是程序计数器PC，即EAAPC，它是当前PC的内容加上指令地址字段中A的值",
    "id": 7140,
    "label": [
      {
        "start": 15,
        "end": 20,
        "text": "程序计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 14,
        "text": "专用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 47,
        "text": "地址字段",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "相对寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8573,
    "created_at": "2024-08-18T01:05:51.375384Z",
    "updated_at": "2024-08-18T01:05:51.375384Z",
    "lead_time": 1.824
  },
  {
    "text": "擦除操作可以看作写全的操作，故擦除过程中，DQ；擦除完成时，DQ",
    "id": 7141,
    "annotator": 1,
    "annotation_id": 8574,
    "created_at": "2024-08-18T01:05:52.621713Z",
    "updated_at": "2024-08-18T01:05:52.621713Z",
    "lead_time": 0.771
  },
  {
    "text": "标准允许每个SCSI设备最多有个逻辑单元，每个逻辑单元可以是物理设备也可以是虚拟设备",
    "id": 7142,
    "label": [
      {
        "start": 30,
        "end": 34,
        "text": "物理设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 38,
        "end": 42,
        "text": "虚拟设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8575,
    "created_at": "2024-08-18T01:05:53.588364Z",
    "updated_at": "2024-08-18T01:06:06.269694Z",
    "lead_time": 5.912999999999999
  },
  {
    "text": "这种缩写码称为指令助记符，如表所示",
    "id": 7143,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8576,
    "created_at": "2024-08-18T01:05:54.508099Z",
    "updated_at": "2024-08-18T01:06:10.023367Z",
    "lead_time": 2.725
  },
  {
    "text": "光栅扫描图形显示器的优点是通用性强，灰度层次多，色调丰富，显示复杂图形时无闪烁现象；所产生的图形有阴影效应、隐藏面消除、涂色等功能",
    "id": 7144,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "光栅扫描",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 9,
        "text": "图形显示器",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8577,
    "created_at": "2024-08-18T01:07:48.842782Z",
    "updated_at": "2024-08-18T01:07:48.842782Z",
    "lead_time": 97.233
  },
  {
    "text": "字符信息属于符号数据，是处理非数值领域的问题",
    "id": 7145,
    "annotator": 1,
    "annotation_id": 8578,
    "created_at": "2024-08-18T01:08:41.857722Z",
    "updated_at": "2024-08-18T01:08:57.252805Z",
    "lead_time": 65.65400000000001
  },
  {
    "text": "顺序寻址方式由于指令地址在内存中按顺序安排，当执行一段程序时，通常是按一条指令接一条指令的顺序进行",
    "id": 7146,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "指令地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "顺序寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8579,
    "created_at": "2024-08-18T01:10:00.375386Z",
    "updated_at": "2024-08-18T01:10:00.376389Z",
    "lead_time": 62.084
  },
  {
    "text": "CPU从IO接口的数据缓冲寄存器输入数据，或者将数据从CPU输出至接口的数据缓冲寄存器",
    "id": 7147,
    "label": [
      {
        "start": 11,
        "end": 16,
        "text": "缓冲寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 43,
        "text": "缓冲寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "IO接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8580,
    "created_at": "2024-08-18T01:10:12.541427Z",
    "updated_at": "2024-08-18T01:10:12.541427Z",
    "lead_time": 11.633
  },
  {
    "text": "在第三个CPU周期开始时，按照这个微地址读出第三条微指令，它的二进制编码是这条微指令的操作控制部分发出RX，RY，，LDR的四个微命令，运算器完成RRR的操作",
    "id": 7148,
    "label": [
      {
        "start": 17,
        "end": 20,
        "text": "微地址",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 43,
        "end": 49,
        "text": "操作控制部分",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 9,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 68,
        "end": 71,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 64,
        "end": 67,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8581,
    "created_at": "2024-08-18T01:10:15.285162Z",
    "updated_at": "2024-08-18T01:10:15.285162Z",
    "lead_time": 2.15
  },
  {
    "text": "这种方式的优点是CPU的操作和外围设备的操作能够同步，而且软硬件结构都比较简单",
    "id": 7149,
    "label": [
      {
        "start": 15,
        "end": 19,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8582,
    "created_at": "2024-08-18T01:10:16.726678Z",
    "updated_at": "2024-08-18T01:10:16.727680Z",
    "lead_time": 0.9
  },
  {
    "text": "现在我们看到，图就是这五条指令的微程序流程图，每一个CPU周期就对应一条微指令",
    "id": 7150,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 26,
        "end": 31,
        "text": "CPU周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8583,
    "created_at": "2024-08-18T01:10:18.430617Z",
    "updated_at": "2024-08-18T01:10:26.277495Z",
    "lead_time": 6.951
  },
  {
    "text": "取指周期第一条指令的取指周期示于图",
    "id": 7151,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "取指周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "取指周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8584,
    "created_at": "2024-08-18T01:10:28.637601Z",
    "updated_at": "2024-08-18T01:10:28.637601Z",
    "lead_time": 0.892
  },
  {
    "text": "例如，如果设备完成了一个操作或设备中存在着一个错误状态，接口即发出中断",
    "id": 7152,
    "label": [
      {
        "start": 33,
        "end": 35,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8585,
    "created_at": "2024-08-18T01:12:43.353094Z",
    "updated_at": "2024-08-18T01:12:43.353094Z",
    "lead_time": 134.216
  },
  {
    "text": "从简单到复杂，举出一个CPU模型，目的在于使读者由浅入深地理解教学内容，这对于建立整机概念是十分重要的",
    "id": 7153,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8586,
    "created_at": "2024-08-18T01:12:44.668278Z",
    "updated_at": "2024-08-18T01:12:44.668278Z",
    "lead_time": 0.825
  },
  {
    "text": "以下仅讨论多周期CPU",
    "id": 7154,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8587,
    "created_at": "2024-08-18T01:12:45.945558Z",
    "updated_at": "2024-08-18T01:12:45.945558Z",
    "lead_time": 0.814
  },
  {
    "text": "如果计算机中编址的最小单位是字节，则该计算机称为按字节编址的计算机",
    "id": 7155,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "编址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "编址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8588,
    "created_at": "2024-08-18T01:12:51.876739Z",
    "updated_at": "2024-08-18T01:12:51.876739Z",
    "lead_time": 5.496
  },
  {
    "text": "有符号字用于位算术运算",
    "id": 7156,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "算术运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 3,
        "end": 4,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 7,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8589,
    "created_at": "2024-08-18T01:16:48.680850Z",
    "updated_at": "2024-08-18T01:16:48.680850Z",
    "lead_time": 236.261
  },
  {
    "text": "在DMA传送时，每传送一个字，字计数器就加“”，当计数器溢出即最高位产生进位时，表示这批数据传送完毕，于是引起DMA控制器向CPU发中断信号",
    "id": 7157,
    "label": [
      {
        "start": 16,
        "end": 19,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 55,
        "end": 61,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 6,
        "text": "DMA传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 62,
        "end": 65,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "最高位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 66,
        "end": 68,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 14,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 15,
        "end": 16,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8590,
    "created_at": "2024-08-18T01:17:55.162950Z",
    "updated_at": "2024-08-18T01:17:55.162950Z",
    "lead_time": 65.939
  },
  {
    "text": "由于SCSI设备是智能设备，对SCSI总线以至主机屏蔽了实际外设的固有物理属性如磁盘柱面数、磁头数等参数，各SCSI设备之间就可用一套标准的命令进行数据传送，也为设备的升级或系统的系列化提供了灵活的处理手段",
    "id": 7158,
    "label": [
      {
        "start": 23,
        "end": 25,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "屏蔽",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "外设",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8591,
    "created_at": "2024-08-18T01:17:57.345476Z",
    "updated_at": "2024-08-18T01:17:57.345476Z",
    "lead_time": 1.603
  },
  {
    "text": "指令格式包含单字长指令、双字长指令、三字长指令等多种",
    "id": 7159,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 23,
        "text": "三字长指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 12,
        "end": 17,
        "text": "双字长指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 6,
        "end": 11,
        "text": "单字长指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8592,
    "created_at": "2024-08-18T01:17:59.438539Z",
    "updated_at": "2024-08-18T01:17:59.438539Z",
    "lead_time": 1.569
  },
  {
    "text": "在可移动磁头的磁盘驱动器中，驱动磁头沿盘面径向位置运动以寻找目标磁道位置的机构称为磁头定位驱动系统，它由驱动部件、传动部件、运载部件磁头小车组成",
    "id": 7160,
    "label": [
      {
        "start": 1,
        "end": 6,
        "text": "可移动磁头",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 12,
        "text": "磁盘驱动器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "磁道",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "盘面",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 66,
        "end": 68,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8593,
    "created_at": "2024-08-18T01:18:17.594602Z",
    "updated_at": "2024-08-18T01:18:17.594602Z",
    "lead_time": 17.668
  },
  {
    "text": "LAD指令的指令周期LAD指令是RS型指令，它先从指令存储器取出指令，然后从数据存储器号单元取出数据装入通用寄存器R，原来R中存放的数据被更换成",
    "id": 7161,
    "label": [
      {
        "start": 52,
        "end": 57,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 21,
        "text": "RS型指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 25,
        "end": 30,
        "text": "指令存储器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "LAD",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "LAD",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8594,
    "created_at": "2024-08-18T01:18:40.178227Z",
    "updated_at": "2024-08-18T01:18:40.178227Z",
    "lead_time": 22.115
  },
  {
    "text": "由图可看出：位的存储器物理地址指定的系统主存总容量可达MB，按“存储体块字”进行寻址",
    "id": 7162,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "物理地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "存储体",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "MB",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 36,
        "end": 37,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 7,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8595,
    "created_at": "2024-08-18T01:19:09.474262Z",
    "updated_at": "2024-08-18T01:19:09.474262Z",
    "lead_time": 28.817
  },
  {
    "text": "如果被乘数和乘数用定点小数表示，我们也会得到同样的结果",
    "id": 7163,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "定点小数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8596,
    "created_at": "2024-08-18T01:19:10.737844Z",
    "updated_at": "2024-08-18T01:19:10.737844Z",
    "lead_time": 0.735
  },
  {
    "text": "CPU发送数据的情况也与上述情况相似，外设先通过接口发出请求输出信号，而后CPU询问外设是否准备就绪",
    "id": 7164,
    "label": [
      {
        "start": 19,
        "end": 21,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "外设",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8597,
    "created_at": "2024-08-18T01:19:13.425534Z",
    "updated_at": "2024-08-18T01:19:13.425534Z",
    "lead_time": 2.223
  },
  {
    "text": "基本思想硬布线控制器是早期设计计算机的一种方法",
    "id": 7165,
    "label": [
      {
        "start": 4,
        "end": 10,
        "text": "硬布线控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8598,
    "created_at": "2024-08-18T01:19:15.307873Z",
    "updated_at": "2024-08-18T01:19:15.307873Z",
    "lead_time": 1.374
  },
  {
    "text": "在PCI设备中不存在DMA直接存储器传送的概念，这是因为PCI总线支持无限的猝发式传送",
    "id": 7166,
    "label": [
      {
        "start": 10,
        "end": 18,
        "text": "DMA直接存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 28,
        "end": 33,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "PCI",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8599,
    "created_at": "2024-08-18T01:20:47.767917Z",
    "updated_at": "2024-08-18T01:20:47.767917Z",
    "lead_time": 91.965
  },
  {
    "text": "外部提供，可屏蔽中断是在CPU接收到INTR信号时产生一个中断识别周期，接收外部中断控制器由数据总线送来的中断向量号；非屏蔽中断是在接收到NMI信号时中断向量号固定为",
    "id": 7167,
    "label": [
      {
        "start": 40,
        "end": 45,
        "text": "中断控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 53,
        "end": 58,
        "text": "中断向量号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 75,
        "end": 80,
        "text": "中断向量号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 46,
        "end": 50,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 62,
        "end": 64,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "屏蔽",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 60,
        "end": 62,
        "text": "屏蔽",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8600,
    "created_at": "2024-08-18T01:20:53.118589Z",
    "updated_at": "2024-08-18T01:20:53.118589Z",
    "lead_time": 4.781
  },
  {
    "text": "如果某设备的Ready为“”，则转去执行该设备的服务子程序；如该设备的Ready为“”，则依次测试下一个设备",
    "id": 7168,
    "label": [
      {
        "start": 27,
        "end": 29,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8601,
    "created_at": "2024-08-18T01:20:54.779616Z",
    "updated_at": "2024-08-18T01:20:54.780134Z",
    "lead_time": 1.127
  },
  {
    "text": "如果电源断电，则存储的数据或就会丢失",
    "id": 7169,
    "annotator": 1,
    "annotation_id": 8602,
    "created_at": "2024-08-18T01:20:56.538662Z",
    "updated_at": "2024-08-18T01:20:56.538662Z",
    "lead_time": 1.3
  },
  {
    "text": "因此，每隔个机器时钟周期才有一个输出结果",
    "id": 7170,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8603,
    "created_at": "2024-08-18T01:20:58.245581Z",
    "updated_at": "2024-08-18T01:20:58.245581Z",
    "lead_time": 1.246
  },
  {
    "text": "在一批数据传送完毕后，DMA控制器通知CPU可以使用内存，并把总线控制权交还给CPU",
    "id": 7171,
    "label": [
      {
        "start": 11,
        "end": 17,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 36,
        "text": "总线控制权",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8604,
    "created_at": "2024-08-18T01:20:59.847692Z",
    "updated_at": "2024-08-18T01:20:59.847692Z",
    "lead_time": 1.159
  },
  {
    "text": "磁盘接到读写指令后将磁头定位至所要访问的磁道上所需的时间，称为寻道时间或找道时间、定位时间",
    "id": 7172,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "磁道",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8605,
    "created_at": "2024-08-18T01:21:03.182170Z",
    "updated_at": "2024-08-18T01:21:12.072037Z",
    "lead_time": 9.501000000000001
  },
  {
    "text": "IO功能模块通常简称为IO接口，也叫适配器",
    "id": 7173,
    "label": [
      {
        "start": 18,
        "end": 21,
        "text": "适配器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "IO接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8606,
    "created_at": "2024-08-18T01:21:15.164983Z",
    "updated_at": "2024-08-18T01:21:15.164983Z",
    "lead_time": 1.528
  },
  {
    "text": "这种布局的优点是，如果单个IO请求由多个逻辑相邻的条带组成，则对多达n个条带的请求可以并行处理，从而大大减少了IO的传输时间",
    "id": 7174,
    "label": [
      {
        "start": 13,
        "end": 17,
        "text": "IO请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8607,
    "created_at": "2024-08-18T01:21:16.429916Z",
    "updated_at": "2024-08-18T01:21:16.429916Z",
    "lead_time": 0.857
  },
  {
    "text": "第步，舍入到位有效数字",
    "id": 7175,
    "label": [
      {
        "start": 6,
        "end": 7,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8608,
    "created_at": "2024-08-18T01:21:20.078585Z",
    "updated_at": "2024-08-18T01:21:20.078585Z",
    "lead_time": 3.255
  },
  {
    "text": "SDRAM仅能在时钟上升沿传输数据，而DDRSDRAM的最大特点便是在时钟的上升沿和下降沿都能传输数据",
    "id": 7176,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "DDR",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 22,
        "end": 27,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "时钟",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8609,
    "created_at": "2024-08-18T01:21:49.239719Z",
    "updated_at": "2024-08-18T01:21:49.239719Z",
    "lead_time": 28.725
  },
  {
    "text": "构成多级存储系统的依据就是程序的局部性原理",
    "id": 7177,
    "label": [
      {
        "start": 2,
        "end": 8,
        "text": "多级存储系统",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 21,
        "text": "局部性原理",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8610,
    "created_at": "2024-08-18T01:21:57.649811Z",
    "updated_at": "2024-08-18T01:21:57.649811Z",
    "lead_time": 7.928
  },
  {
    "text": "对多余的位这种特殊情况：若最低有效位现为，则截尾；若最低有效位现为，则向上进位使其变为",
    "id": 7178,
    "label": [
      {
        "start": 22,
        "end": 24,
        "text": "截尾",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "有效位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "有效位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 4,
        "end": 5,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8611,
    "created_at": "2024-08-18T01:23:13.192662Z",
    "updated_at": "2024-08-18T01:23:13.193668Z",
    "lead_time": 75.042
  },
  {
    "text": "CPU响应中断请求后，发出中断响应信号INTA，以链式查询方式识别中断源",
    "id": 7179,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8612,
    "created_at": "2024-08-18T01:23:21.855410Z",
    "updated_at": "2024-08-18T01:23:21.855410Z",
    "lead_time": 8.117
  },
  {
    "text": "由于访问地址是连续的，因而只需要向存储器发送一次访问地址",
    "id": 7180,
    "label": [
      {
        "start": 17,
        "end": 20,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "访问地址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "访问地址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8613,
    "created_at": "2024-08-18T01:23:26.957939Z",
    "updated_at": "2024-08-18T01:23:26.957939Z",
    "lead_time": 4.651
  },
  {
    "text": "有些指令用段寄存器CS，DS，ES，SS，FS，GS来实施寄存器寻址方式",
    "id": 7181,
    "label": [
      {
        "start": 29,
        "end": 34,
        "text": "寄存器寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8614,
    "created_at": "2024-08-18T01:24:00.332609Z",
    "updated_at": "2024-08-18T01:24:00.332609Z",
    "lead_time": 32.93
  },
  {
    "text": "这样一来，必然要引入文字、字母及某些专用符号，以便表示文字语言、逻辑语言等信息",
    "id": 7182,
    "annotator": 1,
    "annotation_id": 8615,
    "created_at": "2024-08-18T01:24:06.466403Z",
    "updated_at": "2024-08-18T01:24:06.466403Z",
    "lead_time": 5.719
  },
  {
    "text": "例如，某个时刻一个子程序可能有一部分在主存中，另一部分则在辅存中",
    "id": 7183,
    "label": [
      {
        "start": 29,
        "end": 31,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8616,
    "created_at": "2024-08-18T01:24:08.048712Z",
    "updated_at": "2024-08-18T01:24:08.049674Z",
    "lead_time": 1.202
  },
  {
    "text": "可以看出，十进制的码可以去掉bbb而得到",
    "id": 7184,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8617,
    "created_at": "2024-08-18T01:24:09.073087Z",
    "updated_at": "2024-08-18T01:24:09.073087Z",
    "lead_time": 0.564
  },
  {
    "text": "如果中断发生伴随有错误码，则错误码也压入此堆栈",
    "id": 7185,
    "label": [
      {
        "start": 21,
        "end": 23,
        "text": "堆栈",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8618,
    "created_at": "2024-08-18T01:24:10.749891Z",
    "updated_at": "2024-08-18T01:24:10.749891Z",
    "lead_time": 1.262
  },
  {
    "text": "容纳在一个地址字段中的形式地址A直接被使用；另一个地址字段，或基于操作码的一个隐含引用，指的是某个专用寄存器",
    "id": 7186,
    "label": [
      {
        "start": 51,
        "end": 54,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "地址字段",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "地址字段",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "形式地址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8619,
    "created_at": "2024-08-18T01:24:12.420737Z",
    "updated_at": "2024-08-18T01:24:12.420737Z",
    "lead_time": 1.272
  },
  {
    "text": "无论采用哪种判断方式，延迟端口的BUSY标志都将置位而关闭此端口，而当允许存取的端口完成操作时，延迟端口BUSY标志才进行复位而打开此端口",
    "id": 7187,
    "label": [
      {
        "start": 16,
        "end": 22,
        "text": "BUSY标志",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 52,
        "end": 58,
        "text": "BUSY标志",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 67,
        "end": 69,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 26,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 62,
        "end": 63,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8620,
    "created_at": "2024-08-18T01:24:17.728090Z",
    "updated_at": "2024-08-18T01:24:17.728090Z",
    "lead_time": 4.854
  },
  {
    "text": "硬磁盘按盘片结构分为可换盘片式、固定盘片式两种，磁头也分为可移动磁头和固定磁头两种",
    "id": 7188,
    "label": [
      {
        "start": 16,
        "end": 21,
        "text": "固定盘片式",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 15,
        "text": "可换盘片式",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 29,
        "end": 34,
        "text": "可移动磁头",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 35,
        "end": 39,
        "text": "固定磁头",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "盘片",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8621,
    "created_at": "2024-08-18T01:24:20.374786Z",
    "updated_at": "2024-08-18T01:24:20.374786Z",
    "lead_time": 2.069
  },
  {
    "text": "有些指令系统会把常见的寻址方式组合起来，构成更复杂的复合寻址方式",
    "id": 7189,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8622,
    "created_at": "2024-08-18T01:24:22.429808Z",
    "updated_at": "2024-08-18T01:24:22.429808Z",
    "lead_time": 1.494
  },
  {
    "text": "当中断服务程序结束以后，CPU又回到原来的主程序",
    "id": 7190,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 7,
        "text": "中断服务程序",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8623,
    "created_at": "2024-08-18T01:24:25.375448Z",
    "updated_at": "2024-08-18T01:24:25.375448Z",
    "lead_time": 2.394
  },
  {
    "text": "当加法结果出现在单总线上时，由于输入数已保存在缓冲寄存器中，它并不会打扰输入数",
    "id": 7191,
    "label": [
      {
        "start": 23,
        "end": 28,
        "text": "缓冲寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "单总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8624,
    "created_at": "2024-08-18T01:24:26.832441Z",
    "updated_at": "2024-08-18T01:24:26.832441Z",
    "lead_time": 0.949
  },
  {
    "text": "可靠性更进一步提高，体积更进一步缩小，成本更进一步降低，速度提高到每秒万次至亿次",
    "id": 7192,
    "annotator": 1,
    "annotation_id": 8625,
    "created_at": "2024-08-18T01:24:27.816623Z",
    "updated_at": "2024-08-18T01:24:27.816623Z",
    "lead_time": 0.507
  },
  {
    "text": "至此，JMP指令执行周期结束",
    "id": 7193,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "JMP指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "执行周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8626,
    "created_at": "2024-08-18T01:24:28.827634Z",
    "updated_at": "2024-08-18T01:24:28.827634Z",
    "lead_time": 0.513
  },
  {
    "text": "中断是一种程序随机切换的方式，有时也统称为异常",
    "id": 7194,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8627,
    "created_at": "2024-08-18T01:24:30.433020Z",
    "updated_at": "2024-08-18T01:24:30.433020Z",
    "lead_time": 1.124
  },
  {
    "text": "固定磁头磁盘机特点是磁头位置固定，磁盘的每一个磁道对应一个磁头，盘片不可更换",
    "id": 7195,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "固定磁头",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "磁盘机",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "磁道",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "盘片",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8628,
    "created_at": "2024-08-18T01:25:09.809843Z",
    "updated_at": "2024-08-18T01:25:09.809843Z",
    "lead_time": 38.913
  },
  {
    "text": "另外，除了有两面可写的DVD光盘，还有多层可写的光盘，在主数据层上还放置着多层透明的可写层，这种光盘的容量可以达到数十GB",
    "id": 7196,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "DVD",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 59,
        "end": 61,
        "text": "GB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 48,
        "end": 50,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8629,
    "created_at": "2024-08-18T01:25:11.260866Z",
    "updated_at": "2024-08-18T01:25:11.260866Z",
    "lead_time": 0.895
  },
  {
    "text": "显然，用这种方式形成的操作控制序列没有固定的CPU周期数节拍电位或严格的时钟周期节拍脉冲与之同步",
    "id": 7197,
    "label": [
      {
        "start": 22,
        "end": 27,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 40,
        "end": 44,
        "text": "节拍脉冲",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "节拍电位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 36,
        "end": 40,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8630,
    "created_at": "2024-08-18T01:25:12.575801Z",
    "updated_at": "2024-08-18T01:25:12.575801Z",
    "lead_time": 0.814
  },
  {
    "text": "当鼓上的字符信息区和普通纸接触时，由于在纸的背面施以反向的静电电荷，鼓表面上的碳粉就会被吸附到纸上来，这个过程称为转印",
    "id": 7198,
    "annotator": 1,
    "annotation_id": 8631,
    "created_at": "2024-08-18T01:25:15.133673Z",
    "updated_at": "2024-08-18T01:25:15.133673Z",
    "lead_time": 2.05
  },
  {
    "text": "例如，节所讲的微程序控制就是这样",
    "id": 7199,
    "label": [
      {
        "start": 7,
        "end": 12,
        "text": "微程序控制",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8632,
    "created_at": "2024-08-18T01:25:16.312186Z",
    "updated_at": "2024-08-18T01:25:16.312186Z",
    "lead_time": 0.775
  },
  {
    "text": "在单总线系统中，对输入输出设备的操作，完全和主存的操作方法一样来处理",
    "id": 7200,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "单总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 15,
        "text": "输入输出设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8633,
    "created_at": "2024-08-18T01:25:18.779253Z",
    "updated_at": "2024-08-18T01:25:18.779558Z",
    "lead_time": 1.979
  },
  {
    "text": "CDRAM存储模块片容量为M位的CDRAM芯片可以组成M位MB的存储模块，如图所示",
    "id": 7201,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "CDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 21,
        "text": "CDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "存储模块",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "存储模块",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "MB",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 15,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 28,
        "end": 29,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8634,
    "created_at": "2024-08-18T01:26:33.845510Z",
    "updated_at": "2024-08-18T01:26:33.846512Z",
    "lead_time": 74.534
  },
  {
    "text": "算术逻辑运算的实现图中除了SS四个控制端外，还有一个控制端M，它用来控制ALU进行算术运算还是进行逻辑运算",
    "id": 7202,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "逻辑运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 49,
        "end": 53,
        "text": "逻辑运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 41,
        "end": 45,
        "text": "算术运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8635,
    "created_at": "2024-08-18T01:26:35.848460Z",
    "updated_at": "2024-08-18T01:26:35.848460Z",
    "lead_time": 1.47
  },
  {
    "text": "我们知道，在“取指令”情况下的地址是主存地址，所以，此时该地址所指定的主存单元的内容一定是一条指令，而且将被传送给CPU",
    "id": 7203,
    "label": [
      {
        "start": 18,
        "end": 22,
        "text": "主存地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 39,
        "text": "主存单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 57,
        "end": 60,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "取指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8636,
    "created_at": "2024-08-18T01:26:44.010396Z",
    "updated_at": "2024-08-18T01:26:44.010396Z",
    "lead_time": 7.605
  },
  {
    "text": "磁光盘是重写型光盘，可以进行随机写入、擦除或重写信息",
    "id": 7204,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "磁光盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8637,
    "created_at": "2024-08-18T01:26:45.252874Z",
    "updated_at": "2024-08-18T01:26:45.252874Z",
    "lead_time": 0.736
  },
  {
    "text": "中断概念的出现，是计算机系统结构设计中的一个重大变革",
    "id": 7205,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 14,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8638,
    "created_at": "2024-08-18T01:26:47.048469Z",
    "updated_at": "2024-08-18T01:26:47.048469Z",
    "lead_time": 1.328
  },
  {
    "text": "到Pentium，Lcache已移到处理器芯片中",
    "id": 7206,
    "label": [
      {
        "start": 10,
        "end": 15,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8639,
    "created_at": "2024-08-18T01:26:48.453499Z",
    "updated_at": "2024-08-18T01:26:48.453499Z",
    "lead_time": 0.941
  },
  {
    "text": "我们先引出数的补码表示与真值的关系",
    "id": 7207,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "真值",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8640,
    "created_at": "2024-08-18T01:26:49.585651Z",
    "updated_at": "2024-08-18T01:26:49.585651Z",
    "lead_time": 0.631
  },
  {
    "text": "每个存储单元都有编号，称为地址",
    "id": 7208,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "存储单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8641,
    "created_at": "2024-08-18T01:26:54.439816Z",
    "updated_at": "2024-08-18T01:26:54.439816Z",
    "lead_time": 4.37
  },
  {
    "text": "如图所示，cache是介于CPU和主存M之间的小容量存储器，但存取速度比主存快，容量远小于主存",
    "id": 7209,
    "label": [
      {
        "start": 5,
        "end": 10,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 31,
        "end": 35,
        "text": "存取速度",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8642,
    "created_at": "2024-08-18T01:26:56.867267Z",
    "updated_at": "2024-08-18T01:26:56.867267Z",
    "lead_time": 1.992
  },
  {
    "text": "IOP可以和CPU并行工作，提供高速的DMA处理能力，实现数据的高速传送",
    "id": 7210,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8643,
    "created_at": "2024-08-18T01:28:05.467433Z",
    "updated_at": "2024-08-18T01:28:05.467433Z",
    "lead_time": 68.044
  },
  {
    "text": "使用芯电缆，直径约为mm，插座也小",
    "id": 7211,
    "annotator": 1,
    "annotation_id": 8644,
    "created_at": "2024-08-18T01:28:22.715857Z",
    "updated_at": "2024-08-18T01:28:22.715857Z",
    "lead_time": 16.781
  },
  {
    "text": "表中编码符号的排列次序为bbbbbbbb，其中b恒为，表中未给出，bbb为高位部分，bbbb为低位部分",
    "id": 7212,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 38,
        "end": 39,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 48,
        "end": 49,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8645,
    "created_at": "2024-08-18T01:32:02.038411Z",
    "updated_at": "2024-08-18T01:32:02.039951Z",
    "lead_time": 218.496
  },
  {
    "text": "CPU给出的主存地址中没有A和A位，替代的是字节允许信号BEBE，以允许对AA指定的存储字中的字节或字完成读写访问",
    "id": 7213,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "主存地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 45,
        "text": "存储字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 50,
        "end": 51,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 17,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8646,
    "created_at": "2024-08-18T01:32:31.807525Z",
    "updated_at": "2024-08-18T01:32:31.808528Z",
    "lead_time": 27.982
  },
  {
    "text": "例如，“取指”微指令根据操作码OP产生多路微程序分支而形成多个微地址",
    "id": 7214,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "微地址",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "OP",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "取指",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8647,
    "created_at": "2024-08-18T01:32:50.938249Z",
    "updated_at": "2024-08-18T01:32:50.938249Z",
    "lead_time": 18.368
  },
  {
    "text": "由于指令的权限最大，若使用不当，会破坏系统和其他用户信息",
    "id": 7215,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8648,
    "created_at": "2024-08-18T01:34:15.090477Z",
    "updated_at": "2024-08-18T01:34:15.090477Z",
    "lead_time": 83.329
  },
  {
    "text": "我们知道，一个半导体触发器由于有和两个状态，可以记忆一个二进制代码",
    "id": 7216,
    "label": [
      {
        "start": 28,
        "end": 31,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "半导体",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8649,
    "created_at": "2024-08-18T01:34:54.531505Z",
    "updated_at": "2024-08-18T01:34:54.531505Z",
    "lead_time": 38.858
  },
  {
    "text": "端点处于PCIe总线系统拓扑结构中的最末端，一般作为总线操作的发起者或者终结者，老旧端点LegacyEndpoint则是指那些原本准备设计用于PCIX总线但却被改为PCIe接口的设备",
    "id": 7217,
    "label": [
      {
        "start": 4,
        "end": 10,
        "text": "PCIe总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 82,
        "end": 86,
        "text": "PCIe",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "拓扑结构",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 71,
        "end": 74,
        "text": "PCI",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 75,
        "end": 77,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 86,
        "end": 88,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "端点",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "端点",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8650,
    "created_at": "2024-08-18T01:35:24.464477Z",
    "updated_at": "2024-08-18T01:35:24.464477Z",
    "lead_time": 29.406
  },
  {
    "text": "三个寄存器的内容都可以通过多路开关从ALU的X输入端或Y输入端送至ALU，而ALU的输出可以送往任何一个寄存器或同时送往R，R，R三个寄存器",
    "id": 7218,
    "label": [
      {
        "start": 18,
        "end": 21,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 52,
        "end": 55,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 67,
        "end": 70,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8651,
    "created_at": "2024-08-18T01:35:26.722833Z",
    "updated_at": "2024-08-18T01:35:26.722833Z",
    "lead_time": 1.751
  },
  {
    "text": "汇编语言与具体机器的依赖性很强",
    "id": 7219,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "汇编语言",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8652,
    "created_at": "2024-08-18T01:35:45.954869Z",
    "updated_at": "2024-08-18T01:35:45.954869Z",
    "lead_time": 18.694
  },
  {
    "text": "设微指令字长为位，微操作码位",
    "id": 7220,
    "label": [
      {
        "start": 1,
        "end": 6,
        "text": "微指令字长",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 8,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 14,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8653,
    "created_at": "2024-08-18T01:35:48.394464Z",
    "updated_at": "2024-08-18T01:35:48.394464Z",
    "lead_time": 1.788
  },
  {
    "text": "线性地址空间被分为段，段的最大长度为KB",
    "id": 7221,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "线性地址空间",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "KB",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8654,
    "created_at": "2024-08-18T01:35:49.941237Z",
    "updated_at": "2024-08-18T01:35:49.941237Z",
    "lead_time": 0.878
  },
  {
    "text": "延迟转移法由编译程序重排指令序列来实现",
    "id": 7222,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "编译程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "指令序列",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8655,
    "created_at": "2024-08-18T01:38:02.219602Z",
    "updated_at": "2024-08-18T01:38:02.219602Z",
    "lead_time": 131.637
  },
  {
    "text": "当前采用的方法主要有以下三类：数字编码常用的是国标区位码，用数字串代表一个汉字输入",
    "id": 7223,
    "label": [
      {
        "start": 17,
        "end": 19,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "汉字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 27,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8656,
    "created_at": "2024-08-18T01:39:13.276329Z",
    "updated_at": "2024-08-18T01:39:13.276329Z",
    "lead_time": 70.59
  },
  {
    "text": "cache与虚存的异同从虚存的概念可以看出，主存辅存的访问机制与cache主存的访问机制是类似的",
    "id": 7224,
    "label": [
      {
        "start": 22,
        "end": 24,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 32,
        "end": 37,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "虚存",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "虚存",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8657,
    "created_at": "2024-08-18T01:39:22.417018Z",
    "updated_at": "2024-08-18T01:39:22.417018Z",
    "lead_time": 8.663
  },
  {
    "text": "由于磁盘存储器是高速外存设备，故与主机之间采用成批交换数据方式",
    "id": 7225,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "磁盘存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "外存设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8658,
    "created_at": "2024-08-18T01:39:51.864744Z",
    "updated_at": "2024-08-18T01:39:51.864744Z",
    "lead_time": 28.838
  },
  {
    "text": "cache是一个高速缓冲存储器，用以弥补主存和CPU速度上的差异",
    "id": 7226,
    "label": [
      {
        "start": 8,
        "end": 15,
        "text": "高速缓冲存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8659,
    "created_at": "2024-08-18T01:39:55.261581Z",
    "updated_at": "2024-08-18T01:39:55.261581Z",
    "lead_time": 2.956
  },
  {
    "text": "从外部看，刷新操作与读操作类似，只是刷新时无须送出数据，并且可以将一行的所有存储元同时刷新",
    "id": 7227,
    "label": [
      {
        "start": 38,
        "end": 41,
        "text": "存储元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "读操作",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8660,
    "created_at": "2024-08-18T01:39:56.904667Z",
    "updated_at": "2024-08-18T01:39:56.904667Z",
    "lead_time": 1.145
  },
  {
    "text": "显示设备种类繁多",
    "id": 7228,
    "annotator": 1,
    "annotation_id": 8661,
    "created_at": "2024-08-18T01:39:57.782251Z",
    "updated_at": "2024-08-18T01:39:57.782251Z",
    "lead_time": 0.473
  },
  {
    "text": "MDA是PC机最早使用的显示标准",
    "id": 7229,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "PC机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8662,
    "created_at": "2024-08-18T01:39:58.663257Z",
    "updated_at": "2024-08-18T01:39:58.663257Z",
    "lead_time": 0.403
  },
  {
    "text": "信息的存入一般采用电位脉冲方式，即电位输入端对应数据信息位，脉冲输入端对应控制信号，在控制信号作用下，瞬时将信息打入寄存器",
    "id": 7230,
    "label": [
      {
        "start": 58,
        "end": 61,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 41,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 47,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "电位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "电位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 28,
        "end": 29,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8663,
    "created_at": "2024-08-18T01:40:01.471604Z",
    "updated_at": "2024-08-18T01:40:01.471604Z",
    "lead_time": 2.357
  },
  {
    "text": "显然这个时间越小越好",
    "id": 7231,
    "annotator": 1,
    "annotation_id": 8664,
    "created_at": "2024-08-18T01:40:15.528596Z",
    "updated_at": "2024-08-18T01:40:15.528596Z",
    "lead_time": 13.628
  },
  {
    "text": "根据不同情况，同步控制方式可选取如下方案",
    "id": 7232,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8665,
    "created_at": "2024-08-18T01:40:17.301298Z",
    "updated_at": "2024-08-18T01:40:17.301298Z",
    "lead_time": 1.267
  },
  {
    "text": "由于DRAM容量很大，地址线的数目相当多，为减少芯片引脚的数量，将地址分为行、列两部分分时传送",
    "id": 7233,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "引脚",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8666,
    "created_at": "2024-08-18T01:40:25.046553Z",
    "updated_at": "2024-08-18T01:40:25.046553Z",
    "lead_time": 7.345
  },
  {
    "text": "换句话说，此时微地址需要进行修改，我们假定用Cy的状态来修改微地址寄存器的最后一位：当Cy时，下一条微指令的地址为；当Cy时，下一条微指令的地址为",
    "id": 7234,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "微地址",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 30,
        "end": 36,
        "text": "微地址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 50,
        "end": 53,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 66,
        "end": 69,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 54,
        "end": 56,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 70,
        "end": 72,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 40,
        "end": 41,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8667,
    "created_at": "2024-08-18T01:41:17.616978Z",
    "updated_at": "2024-08-18T01:41:17.616978Z",
    "lead_time": 52.072
  },
  {
    "text": "例如，数据传输率是Bs，即传送字节的时间是ms，而通道从设备接收或发送字节只需要几百纳秒，因此通道在传送字节之间有很多空闲时间，字节多路通道正是利用这个空闲时间为其他设备服务",
    "id": 7235,
    "label": [
      {
        "start": 3,
        "end": 8,
        "text": "数据传输率",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "从设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 52,
        "end": 54,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 64,
        "end": 66,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 68,
        "end": 70,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8668,
    "created_at": "2024-08-18T01:41:55.218719Z",
    "updated_at": "2024-08-18T01:41:55.218719Z",
    "lead_time": 36.898
  },
  {
    "text": "清除标志触发器TF和IF",
    "id": 7236,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8669,
    "created_at": "2024-08-18T01:41:56.868565Z",
    "updated_at": "2024-08-18T01:41:56.868565Z",
    "lead_time": 0.993
  },
  {
    "text": "但是使用多字长指令的缺点是必须两次或三次访问内存以取出一整条指令，这就降低了CPU的运算速度，同时又占用了更多的存储空间",
    "id": 7237,
    "label": [
      {
        "start": 22,
        "end": 24,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 56,
        "end": 60,
        "text": "存储空间",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "长指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 5,
        "end": 6,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8670,
    "created_at": "2024-08-18T01:41:59.433877Z",
    "updated_at": "2024-08-18T01:41:59.433877Z",
    "lead_time": 2.135
  },
  {
    "text": "现在我们举“十进制加法”指令为例，具体看一看微程序控制的过程",
    "id": 7238,
    "label": [
      {
        "start": 22,
        "end": 27,
        "text": "微程序控制",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8671,
    "created_at": "2024-08-18T01:42:00.797826Z",
    "updated_at": "2024-08-18T01:42:00.797826Z",
    "lead_time": 0.914
  },
  {
    "text": "第三个问题，当CPU响应中断后，正要去执行中断服务程序时，可能有另一个新的中断源向它发出中断请求",
    "id": 7239,
    "label": [
      {
        "start": 44,
        "end": 48,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 27,
        "text": "中断服务程序",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8672,
    "created_at": "2024-08-18T01:42:03.706116Z",
    "updated_at": "2024-08-18T01:42:03.706116Z",
    "lead_time": 2.461
  },
  {
    "text": "相应地，虚地址分为两个字段：高字段为逻辑页号，低字段为页内地址偏移量；实存地址也分为两个字段：高字段为物理页号，低字段为页内地址",
    "id": 7240,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "虚地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 39,
        "text": "实存地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "逻辑页号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "页内地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 60,
        "end": 64,
        "text": "页内地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 51,
        "end": 55,
        "text": "物理页号",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "偏移量",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 48,
        "end": 50,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 57,
        "end": 59,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8673,
    "created_at": "2024-08-18T01:42:23.575742Z",
    "updated_at": "2024-08-18T01:42:23.575742Z",
    "lead_time": 19.404
  },
  {
    "text": "将解题的程序指令序列存放到存储器中称为存储程序，而控制器依据存储的程序来控制全机协调地完成计算任务叫做程序控制",
    "id": 7241,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "指令序列",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 51,
        "end": 53,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8674,
    "created_at": "2024-08-18T01:42:26.797533Z",
    "updated_at": "2024-08-18T01:42:26.797533Z",
    "lead_time": 2.683
  },
  {
    "text": "程序查询方式的接口电路包括如下部分",
    "id": 7242,
    "label": [
      {
        "start": 0,
        "end": 6,
        "text": "程序查询方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8675,
    "created_at": "2024-08-18T01:42:58.523526Z",
    "updated_at": "2024-08-18T01:42:58.523526Z",
    "lead_time": 31.094
  },
  {
    "text": "一旦优先端口完成写操作，才将被延迟端口的BUSY标志复位BUSY变为高电平，开放此端口，允许延迟端口进行写操作",
    "id": 7243,
    "label": [
      {
        "start": 20,
        "end": 26,
        "text": "BUSY标志",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "高电平",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 52,
        "end": 55,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 48,
        "end": 50,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 28,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8676,
    "created_at": "2024-08-18T01:44:30.906175Z",
    "updated_at": "2024-08-18T01:44:30.906175Z",
    "lead_time": 91.839
  },
  {
    "text": "任意一个十进制数N可以写成同样，在计算机中一个任意二进制数N可以写成其中M称为浮点数的尾数，是一个纯小数",
    "id": 7244,
    "label": [
      {
        "start": 39,
        "end": 42,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8677,
    "created_at": "2024-08-18T01:44:57.016313Z",
    "updated_at": "2024-08-18T01:44:57.016313Z",
    "lead_time": 25.55
  },
  {
    "text": "第位发出PC微命令，使程序计数器加，做好取下一条机器指令的准备",
    "id": 7245,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 1,
        "end": 2,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8678,
    "created_at": "2024-08-18T01:45:01.198737Z",
    "updated_at": "2024-08-18T01:45:01.198737Z",
    "lead_time": 3.648
  },
  {
    "text": "需要说明的是，不同的计算机系统中定义的术语未必相同",
    "id": 7246,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8679,
    "created_at": "2024-08-18T01:45:02.206377Z",
    "updated_at": "2024-08-18T01:45:02.206377Z",
    "lead_time": 0.495
  },
  {
    "text": "由于并行传输方式使用更多的信号线进行传输，因而理论上并行传输的速率比串行传输更高",
    "id": 7247,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8680,
    "created_at": "2024-08-18T01:45:02.998472Z",
    "updated_at": "2024-08-18T01:45:02.998472Z",
    "lead_time": 0.395
  },
  {
    "text": "DMA数据传送过程DMA的数据块传送过程可分为三个阶段：传送前预处理；正式传送；传送后处理",
    "id": 7248,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8681,
    "created_at": "2024-08-18T01:45:04.238896Z",
    "updated_at": "2024-08-18T01:45:04.238896Z",
    "lead_time": 0.793
  },
  {
    "text": "CPU周期与微指令周期的关系在串行方式的微程序控制器中，微指令周期等于读出微指令的时间加上执行该条微指令的时间",
    "id": 7249,
    "label": [
      {
        "start": 20,
        "end": 26,
        "text": "微程序控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 11,
        "text": "微指令周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 28,
        "end": 33,
        "text": "微指令周期",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 49,
        "end": 52,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8682,
    "created_at": "2024-08-18T01:45:05.833832Z",
    "updated_at": "2024-08-18T01:45:05.833832Z",
    "lead_time": 1.143
  },
  {
    "text": "一个根复合体可能包含多个PCIe端口，可将多个交换器连接到根复合体或级联的端口",
    "id": 7250,
    "label": [
      {
        "start": 12,
        "end": 16,
        "text": "PCIe",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "根复合体",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "根复合体",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "交换器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8683,
    "created_at": "2024-08-18T01:45:07.658471Z",
    "updated_at": "2024-08-18T01:45:07.658471Z",
    "lead_time": 1.145
  },
  {
    "text": "段页式虚拟存储器是段式虚拟存储器和页式虚拟存储器的结合，程序按页进行调入和调出操作，但可按段进行编程、保护和共享",
    "id": 7251,
    "label": [
      {
        "start": 9,
        "end": 16,
        "text": "段式虚拟存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 8,
        "text": "段页式虚拟存储器",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 24,
        "text": "页式虚拟存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 31,
        "end": 32,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8684,
    "created_at": "2024-08-18T01:45:08.972465Z",
    "updated_at": "2024-08-18T01:45:08.972465Z",
    "lead_time": 0.837
  },
  {
    "text": "位D字段不足以表示一个完整的微地址，但可以用来替代现行PC的低位地址",
    "id": 7252,
    "label": [
      {
        "start": 14,
        "end": 17,
        "text": "微地址",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "位地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 1,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8685,
    "created_at": "2024-08-18T01:45:56.994072Z",
    "updated_at": "2024-08-18T01:45:56.994072Z",
    "lead_time": 47.528
  },
  {
    "text": "本节先讨论SRAM",
    "id": 7253,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8686,
    "created_at": "2024-08-18T01:45:59.025554Z",
    "updated_at": "2024-08-18T01:45:59.025554Z",
    "lead_time": 1.401
  },
  {
    "text": "适配器的作用相当于一个转换器",
    "id": 7254,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "转换器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "适配器",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8687,
    "created_at": "2024-08-18T01:46:00.289889Z",
    "updated_at": "2024-08-18T01:46:00.289889Z",
    "lead_time": 0.732
  },
  {
    "text": "要求cache的命中率接近于",
    "id": 7255,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "命中率",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8688,
    "created_at": "2024-08-18T01:46:03.081418Z",
    "updated_at": "2024-08-18T01:46:03.081418Z",
    "lead_time": 2.13
  },
  {
    "text": "之所以如此，一是为了与它的前身保持兼容，二是希望能给编译程序写作者以更多灵活的编程支持",
    "id": 7256,
    "label": [
      {
        "start": 26,
        "end": 30,
        "text": "编译程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8689,
    "created_at": "2024-08-18T01:46:06.856859Z",
    "updated_at": "2024-08-18T01:46:06.856859Z",
    "lead_time": 3.234
  },
  {
    "text": "假如把地址码部分和数据也换成二进制数，那么整个存储器的内容全部变成了二进制的代码或数码，如图所示",
    "id": 7257,
    "label": [
      {
        "start": 23,
        "end": 26,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8690,
    "created_at": "2024-08-18T01:46:12.988998Z",
    "updated_at": "2024-08-18T01:46:12.988998Z",
    "lead_time": 5.647
  },
  {
    "text": "三总线运算器的特点是操作时间快",
    "id": 7258,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8691,
    "created_at": "2024-08-18T01:46:20.405415Z",
    "updated_at": "2024-08-18T01:46:20.405415Z",
    "lead_time": 6.954
  },
  {
    "text": "假如在总线、和ALU输入端之间再各加一个输入缓冲寄存器，并把两个输入数先放至这两个缓冲寄存器，那么，ALU输出端就可以直接把操作结果送至总线或总线上去",
    "id": 7259,
    "label": [
      {
        "start": 22,
        "end": 27,
        "text": "缓冲寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 46,
        "text": "缓冲寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 50,
        "end": 53,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 68,
        "end": 70,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 71,
        "end": 73,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8692,
    "created_at": "2024-08-18T01:46:55.177693Z",
    "updated_at": "2024-08-18T01:46:55.177693Z",
    "lead_time": 34.282
  },
  {
    "text": "条独立的DMA请求线或响应线能在外围设备与DMA控制器之间进行双向通信",
    "id": 7260,
    "label": [
      {
        "start": 21,
        "end": 27,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8693,
    "created_at": "2024-08-18T01:46:57.963448Z",
    "updated_at": "2024-08-18T01:46:57.963448Z",
    "lead_time": 2.336
  },
  {
    "text": "考虑到速度、成本等原因，在设计计算机时采用不同的编译法",
    "id": 7261,
    "label": [
      {
        "start": 15,
        "end": 18,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "编译",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8694,
    "created_at": "2024-08-18T01:47:13.166368Z",
    "updated_at": "2024-08-18T01:47:13.166368Z",
    "lead_time": 14.741
  },
  {
    "text": "这段时间包括寻道时间和等待时间",
    "id": 7262,
    "annotator": 1,
    "annotation_id": 8695,
    "created_at": "2024-08-18T01:47:14.015323Z",
    "updated_at": "2024-08-18T01:47:14.015323Z",
    "lead_time": 0.404
  },
  {
    "text": "第二种溢出检测方法是采用单符号位法",
    "id": 7263,
    "label": [
      {
        "start": 12,
        "end": 17,
        "text": "单符号位法",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8696,
    "created_at": "2024-08-18T01:47:14.785558Z",
    "updated_at": "2024-08-18T01:47:14.785558Z",
    "lead_time": 0.359
  },
  {
    "text": "为进行读写操作，要求定出磁道的起始位置，这个起始位置称为索引",
    "id": 7264,
    "label": [
      {
        "start": 28,
        "end": 30,
        "text": "索引",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "磁道",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 18,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 24,
        "end": 25,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8697,
    "created_at": "2024-08-18T01:47:16.056747Z",
    "updated_at": "2024-08-18T01:47:16.056747Z",
    "lead_time": 0.838
  },
  {
    "text": "如CPU模块，它在不同的时间可以用作主方，也可用作从方；而存储器模块只能用作从方",
    "id": 7265,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8698,
    "created_at": "2024-08-18T01:47:17.317560Z",
    "updated_at": "2024-08-18T01:47:17.317560Z",
    "lead_time": 0.815
  },
  {
    "text": "激光器输出的激光束经光学透镜系统被聚焦成一个很细小的光点，沿着圆周运动的滚筒进行横向重复扫描",
    "id": 7266,
    "annotator": 1,
    "annotation_id": 8699,
    "created_at": "2024-08-18T01:47:18.448620Z",
    "updated_at": "2024-08-18T01:47:18.448620Z",
    "lead_time": 0.635
  },
  {
    "text": "与第一种表示形式类似，要指明一个压缩的十进制数串，也得给出它在主存中的首地址和数字位个数不含符号位，又称位长，位长为的数其值为",
    "id": 7267,
    "label": [
      {
        "start": 46,
        "end": 49,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "首地址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 41,
        "end": 42,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 52,
        "end": 53,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 55,
        "end": 56,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8700,
    "created_at": "2024-08-18T01:47:26.268862Z",
    "updated_at": "2024-08-18T01:47:26.268862Z",
    "lead_time": 7.368
  },
  {
    "text": "思考题你能说出同步定时与异步定时各自的应用环境吗？半同步总线定时协定同步总线的优点是控制简单，传输速率通常较高，但不适用于速度差异较大的设备",
    "id": 7268,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "同步定时",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "同步总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "同步总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "异步定时",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 47,
        "end": 51,
        "text": "传输速率",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8701,
    "created_at": "2024-08-18T01:53:21.748076Z",
    "updated_at": "2024-08-18T01:53:21.748076Z",
    "lead_time": 354.584
  },
  {
    "text": "例如，在某些低档的计算机中，物理内存的容量较小，而某些程序却需要很大的内存才能运行；而在多用户多任务系统中，多个用户或多个任务共享全部主存，要求同时执行多道程序",
    "id": 7269,
    "label": [
      {
        "start": 14,
        "end": 18,
        "text": "物理内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 78,
        "end": 80,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 67,
        "end": 69,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8702,
    "created_at": "2024-08-18T01:53:44.469643Z",
    "updated_at": "2024-08-18T01:53:44.469643Z",
    "lead_time": 21.972
  },
  {
    "text": "延迟转移是个选项n",
    "id": 7270,
    "annotator": 1,
    "annotation_id": 8703,
    "created_at": "2024-08-18T01:53:45.620684Z",
    "updated_at": "2024-08-18T01:53:45.621747Z",
    "lead_time": 0.517
  },
  {
    "text": "解决了命中率和透明性问题，就CPU访存的角度而言，内存将具有主存的容量和接近cache的速度",
    "id": 7271,
    "label": [
      {
        "start": 38,
        "end": 43,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "命中率",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8704,
    "created_at": "2024-08-18T01:53:48.454819Z",
    "updated_at": "2024-08-18T01:53:48.454819Z",
    "lead_time": 2.233
  },
  {
    "text": "当需要输入输出时，CPU暂停执行主程序，转去执行设备输入输出的服务程序，根据服务程序中的IO指令进行数据传送",
    "id": 7272,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 44,
        "end": 48,
        "text": "IO指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8705,
    "created_at": "2024-08-18T01:53:58.698823Z",
    "updated_at": "2024-08-18T01:53:58.698823Z",
    "lead_time": 9.621
  },
  {
    "text": "控制部件通过控制线向执行部件发出各种控制命令，通常把这种控制命令称为微命令，而执行部件接受微命令后所进行的操作，称为微操作",
    "id": 7273,
    "label": [
      {
        "start": 58,
        "end": 61,
        "text": "微操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 34,
        "end": 37,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "控制线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8706,
    "created_at": "2024-08-18T01:54:00.910434Z",
    "updated_at": "2024-08-18T01:54:00.910434Z",
    "lead_time": 1.433
  },
  {
    "text": "指令格式如下所示",
    "id": 7274,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8707,
    "created_at": "2024-08-18T01:54:03.811737Z",
    "updated_at": "2024-08-18T01:54:03.811737Z",
    "lead_time": 2.284
  },
  {
    "text": "当执行指令时，CPU将自动修改PC的内容，以便使其保持的总是将要执行的下一条指令的地址",
    "id": 7275,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8708,
    "created_at": "2024-08-18T01:54:09.590401Z",
    "updated_at": "2024-08-18T01:54:09.591413Z",
    "lead_time": 5.228
  },
  {
    "text": "当CPU向存储器送入或从存储器取出信息时，不能存取单个的“位”，而用B字节和W字等较大的信息单位来工作",
    "id": 7276,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 39,
        "end": 40,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 29,
        "end": 30,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8709,
    "created_at": "2024-08-18T01:54:14.793634Z",
    "updated_at": "2024-08-18T01:54:14.793634Z",
    "lead_time": 4.543
  },
  {
    "text": "由于大多数指令都是按顺序来执行的，所以修改的过程通常只是简单的对PC加",
    "id": 7277,
    "label": [
      {
        "start": 5,
        "end": 7,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8710,
    "created_at": "2024-08-18T01:54:18.151883Z",
    "updated_at": "2024-08-18T01:54:18.151883Z",
    "lead_time": 2.711
  },
  {
    "text": "基本思想是“先执行再转移”，即发生转移取时并不排空指令流水线，而是让紧跟在转移指令Ib之后已进入流水线的少数几条指令继续完成",
    "id": 7278,
    "label": [
      {
        "start": 25,
        "end": 30,
        "text": "指令流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 37,
        "end": 41,
        "text": "转移指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 48,
        "end": 51,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 56,
        "end": 58,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8711,
    "created_at": "2024-08-18T01:54:20.351864Z",
    "updated_at": "2024-08-18T01:54:20.351864Z",
    "lead_time": 1.624
  },
  {
    "text": "间接寻址间接寻址是相对于直接寻址而言的，在间接寻址的情况下，指令地址字段中的形式地址A不是操作数D的真正地址，而是操作数地址的指示器",
    "id": 7279,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "间接寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 57,
        "end": 62,
        "text": "操作数地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "间接寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "间接寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "地址字段",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "直接寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 38,
        "end": 42,
        "text": "形式地址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 52,
        "end": 54,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8712,
    "created_at": "2024-08-18T01:54:24.063847Z",
    "updated_at": "2024-08-18T01:54:24.063847Z",
    "lead_time": 3.235
  },
  {
    "text": "至此，LAD指令执行周期结束",
    "id": 7280,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "LAD",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "执行周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8713,
    "created_at": "2024-08-18T01:55:33.750288Z",
    "updated_at": "2024-08-18T01:55:33.750288Z",
    "lead_time": 69.065
  },
  {
    "text": "目前在微程序控制器设计中，字段直接译码法使用较普遍",
    "id": 7281,
    "label": [
      {
        "start": 3,
        "end": 9,
        "text": "微程序控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "译码",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8714,
    "created_at": "2024-08-18T01:55:37.447944Z",
    "updated_at": "2024-08-18T01:55:37.447944Z",
    "lead_time": 3.195
  },
  {
    "text": "选择通道很像一个单道程序的处理器，在一段时间内只允许执行一个设备的通道程序，只有当这个设备的通道程序全部执行完毕后，才能执行其他设备的通道程序",
    "id": 7282,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 48,
        "end": 50,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 69,
        "end": 71,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 67,
        "end": 69,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8715,
    "created_at": "2024-08-18T01:56:08.032219Z",
    "updated_at": "2024-08-18T01:56:08.032219Z",
    "lead_time": 30.035
  },
  {
    "text": "目前的高性能微型机几乎无一例外地使用了流水技术",
    "id": 7283,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "微型机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "流水",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8716,
    "created_at": "2024-08-18T01:56:10.457098Z",
    "updated_at": "2024-08-18T01:56:10.457098Z",
    "lead_time": 1.89
  },
  {
    "text": "例如，一个位数据线的总线，一次猝发式传送可达位",
    "id": 7284,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 6,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 23,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8717,
    "created_at": "2024-08-18T01:57:15.176542Z",
    "updated_at": "2024-08-18T01:57:15.176542Z",
    "lead_time": 64.184
  },
  {
    "text": "因此，在高速、成批传送数据时，中断方式难以满足速度要求",
    "id": 7285,
    "label": [
      {
        "start": 15,
        "end": 19,
        "text": "中断方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8718,
    "created_at": "2024-08-18T01:57:16.764546Z",
    "updated_at": "2024-08-18T01:57:16.764546Z",
    "lead_time": 0.959
  },
  {
    "text": "中断服务子程序进入过程中断服务子程序的入口地址信息存于中断向量号检索表内",
    "id": 7286,
    "label": [
      {
        "start": 0,
        "end": 7,
        "text": "中断服务子程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 11,
        "end": 18,
        "text": "中断服务子程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 27,
        "end": 32,
        "text": "中断向量号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8719,
    "created_at": "2024-08-18T01:57:21.304515Z",
    "updated_at": "2024-08-18T01:57:21.304515Z",
    "lead_time": 3.877
  },
  {
    "text": "只给出地址一次表示同一地址，或进行先写后读操作，或进行先读后写操作",
    "id": 7287,
    "label": [
      {
        "start": 20,
        "end": 23,
        "text": "读操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8720,
    "created_at": "2024-08-18T01:57:23.503384Z",
    "updated_at": "2024-08-18T01:57:23.503384Z",
    "lead_time": 1.615
  },
  {
    "text": "注意：加法add指令和减法sub指令的OP字段值相同；硬件根据funct字段来确定操作类型：加法或减法",
    "id": 7288,
    "label": [
      {
        "start": 27,
        "end": 29,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "OP",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8721,
    "created_at": "2024-08-18T01:57:24.126853Z",
    "updated_at": "2024-08-18T01:57:24.126853Z",
    "lead_time": 0.054
  },
  {
    "text": "光盘由于存储容量大、耐用、易保存等优点，成为计算机大型软件的传播载体和电子出版物的媒体",
    "id": 7289,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8722,
    "created_at": "2024-08-18T01:57:26.226663Z",
    "updated_at": "2024-08-18T01:57:26.226663Z",
    "lead_time": 1.543
  },
  {
    "text": "通常，这项任务用适配器部件来完成",
    "id": 7290,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "适配器",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8723,
    "created_at": "2024-08-18T01:57:30.065692Z",
    "updated_at": "2024-08-18T01:57:30.065692Z",
    "lead_time": 3.358
  },
  {
    "text": "主存控制器和cache控制器芯片用来管理CPU对主存和cache的存取操作",
    "id": 7291,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "主存控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 14,
        "text": "cache控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 32,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "存取操作",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8724,
    "created_at": "2024-08-18T01:57:35.625959Z",
    "updated_at": "2024-08-18T01:57:35.625959Z",
    "lead_time": 4.305
  },
  {
    "text": "是为通用微机而设计的中央处理器",
    "id": 7292,
    "label": [
      {
        "start": 10,
        "end": 15,
        "text": "中央处理器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8725,
    "created_at": "2024-08-18T01:57:51.160433Z",
    "updated_at": "2024-08-18T01:57:51.160433Z",
    "lead_time": 15.009
  },
  {
    "text": "纠正器电路部分则是新、老校验位比较时形成的故障字，它也通过异或运算形成",
    "id": 7293,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "校验位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8726,
    "created_at": "2024-08-18T01:57:53.660002Z",
    "updated_at": "2024-08-18T01:57:53.660002Z",
    "lead_time": 1.837
  },
  {
    "text": "它是在继承了CISC复杂指令系统计算机的成功技术，并在克服了CISC机器缺点的基础上发展起来的",
    "id": 7294,
    "label": [
      {
        "start": 10,
        "end": 19,
        "text": "复杂指令系统计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "CISC",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "CISC",
        "labels": [
          "ARCH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8727,
    "created_at": "2024-08-18T01:57:54.973529Z",
    "updated_at": "2024-08-18T01:57:54.973529Z",
    "lead_time": 0.774
  },
  {
    "text": "图表示DRAM正确性校验的概念示意图",
    "id": 7295,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8728,
    "created_at": "2024-08-18T01:58:00.300496Z",
    "updated_at": "2024-08-18T01:58:00.301538Z",
    "lead_time": 4.729
  },
  {
    "text": "这一级由汇编程序支持和执行",
    "id": 7296,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8729,
    "created_at": "2024-08-18T01:58:12.201867Z",
    "updated_at": "2024-08-18T01:58:12.201867Z",
    "lead_time": 11.415
  },
  {
    "text": "这样当CPU访问存储器时，它所给出的一个字的内存地址会自动变换成cache的地址，即cache地址变换",
    "id": 7297,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 32,
        "end": 37,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 42,
        "end": 47,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "内存地址",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 47,
        "end": 51,
        "text": "地址变换",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 20,
        "end": 21,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8730,
    "created_at": "2024-08-18T01:58:14.887568Z",
    "updated_at": "2024-08-18T01:58:14.887568Z",
    "lead_time": 2.184
  },
  {
    "text": "因此，IO模块是通道对IO设备实现传输控制的执行机构",
    "id": 7298,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "IO模块",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8731,
    "created_at": "2024-08-18T01:58:16.427840Z",
    "updated_at": "2024-08-18T01:58:16.427840Z",
    "lead_time": 1.03
  },
  {
    "text": "在有的系统中，中断向量还包括中断服务程序开始执行时的程序状态字PSW的初始值",
    "id": 7299,
    "label": [
      {
        "start": 14,
        "end": 20,
        "text": "中断服务程序",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 11,
        "text": "中断向量",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 30,
        "end": 31,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8732,
    "created_at": "2024-08-18T01:59:11.544427Z",
    "updated_at": "2024-08-18T01:59:11.544427Z",
    "lead_time": 54.562
  },
  {
    "text": "当串行传送时，有可能按顺序连续传送若干个“”或若干个“”",
    "id": 7300,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "串行传送",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8733,
    "created_at": "2024-08-18T01:59:12.653057Z",
    "updated_at": "2024-08-18T01:59:12.653057Z",
    "lead_time": 0.52
  },
  {
    "text": "计算机组成原理其数学含义为AAOPA三地址指令字中有三个操作数地址A，A和A，其数学含义为AAOPA式中，A为被操作数地址，也称源操作数地址；A为操作数地址，也称终点操作数地址；A为存放操作结果的地址",
    "id": 7301,
    "label": [
      {
        "start": 0,
        "end": 7,
        "text": "计算机组成原理",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 28,
        "end": 33,
        "text": "操作数地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 56,
        "end": 61,
        "text": "操作数地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 65,
        "end": 70,
        "text": "操作数地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 73,
        "end": 78,
        "text": "操作数地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 83,
        "end": 88,
        "text": "操作数地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 18,
        "end": 23,
        "text": "三地址指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 98,
        "end": 100,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "OP",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "OP",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 23,
        "end": 24,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8734,
    "created_at": "2024-08-18T01:59:16.217830Z",
    "updated_at": "2024-08-18T01:59:16.217830Z",
    "lead_time": 2.972
  },
  {
    "text": "若采用相对寻址方式，则称为相对转移，转移地址为当前指令地址PC的值和指令地址部分给出的偏移量之和",
    "id": 7302,
    "label": [
      {
        "start": 18,
        "end": 22,
        "text": "转移地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "相对寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "指令地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "指令地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "偏移量",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8735,
    "created_at": "2024-08-18T02:00:18.136615Z",
    "updated_at": "2024-08-18T02:00:18.136615Z",
    "lead_time": 61.266
  },
  {
    "text": "其原理基于程序运行中具有的空间局部性和时间局部性特征",
    "id": 7303,
    "label": [
      {
        "start": 13,
        "end": 18,
        "text": "空间局部性",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 19,
        "end": 24,
        "text": "时间局部性",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8736,
    "created_at": "2024-08-18T02:00:19.521843Z",
    "updated_at": "2024-08-18T02:00:19.521843Z",
    "lead_time": 0.883
  },
  {
    "text": "周期分裂式总线定时协定分析图中的同步总线读操作时序可以看出，在第一个时钟周期CPU送出地址信息和最后一个时钟周期存储器送出数据之间，通常有若干个时钟周期的延迟时间",
    "id": 7304,
    "label": [
      {
        "start": 56,
        "end": 59,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 52,
        "end": 56,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 72,
        "end": 76,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "同步总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "总线定时",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "读操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8737,
    "created_at": "2024-08-18T02:00:22.891517Z",
    "updated_at": "2024-08-18T02:00:22.891517Z",
    "lead_time": 2.869
  },
  {
    "text": "数据传送的高速性",
    "id": 7305,
    "annotator": 1,
    "annotation_id": 8738,
    "created_at": "2024-08-18T02:00:23.814755Z",
    "updated_at": "2024-08-18T02:00:23.814755Z",
    "lead_time": 0.411
  },
  {
    "text": "RAID最早称为廉价冗余磁盘阵列，后来改为独立冗余磁盘阵列，它是用多台磁盘存储器组成的大容量外存系统",
    "id": 7306,
    "label": [
      {
        "start": 35,
        "end": 40,
        "text": "磁盘存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "RAID",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "外存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8739,
    "created_at": "2024-08-18T02:00:25.875613Z",
    "updated_at": "2024-08-18T02:00:25.875613Z",
    "lead_time": 1.558
  },
  {
    "text": "这两类总线可以分别按照各自的时序同时进行工作",
    "id": 7307,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8740,
    "created_at": "2024-08-18T02:00:26.888374Z",
    "updated_at": "2024-08-18T02:00:26.888374Z",
    "lead_time": 0.547
  },
  {
    "text": "遗憾的是，由于外围设备种类繁多，速度各异，不可能简单地把外围设备直接连接在CPU上",
    "id": 7308,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 37,
        "end": 40,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8741,
    "created_at": "2024-08-18T02:01:11.821136Z",
    "updated_at": "2024-08-18T02:01:11.821136Z",
    "lead_time": 44.417
  },
  {
    "text": "采用变形补码后，任何正数，两个符号位都是“”，即xnxnxx；任何负数，两个符号位都是“”，即xnxnxx",
    "id": 7309,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "变形补码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8742,
    "created_at": "2024-08-18T02:01:17.785771Z",
    "updated_at": "2024-08-18T02:01:17.785771Z",
    "lead_time": 5.417
  },
  {
    "text": "为了能纠错，汉明码要求的校验位长度如表所示",
    "id": 7310,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "汉明码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "校验位",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8743,
    "created_at": "2024-08-18T02:01:20.513871Z",
    "updated_at": "2024-08-18T02:01:20.513871Z",
    "lead_time": 2.092
  },
  {
    "text": "当单个存储器芯片的容量不能满足系统要求时，需要把多片存储器芯片组合起来，组成更大容量的存储器",
    "id": 7311,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8744,
    "created_at": "2024-08-18T02:01:24.591944Z",
    "updated_at": "2024-08-18T02:01:24.591944Z",
    "lead_time": 3.124
  },
  {
    "text": "所谓数据库，就是实现有组织地、动态地存储大量相关数据，方便多用户访问的计算机软、硬件资源组成的系统",
    "id": 7312,
    "label": [
      {
        "start": 35,
        "end": 38,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8745,
    "created_at": "2024-08-18T02:01:26.433158Z",
    "updated_at": "2024-08-18T02:01:26.433158Z",
    "lead_time": 1.323
  },
  {
    "text": "磁盘阵列RAID是多台磁盘存储器组成的大容量外存系统，它实现数据的并行存储、交叉存储，单独存储，改善了IO性能，增加了存储容量，是一种先进的硬磁盘体系结构",
    "id": 7313,
    "label": [
      {
        "start": 11,
        "end": 16,
        "text": "磁盘存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 51,
        "end": 55,
        "text": "IO性能",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 59,
        "end": 63,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "RAID",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 71,
        "end": 73,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "外存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8746,
    "created_at": "2024-08-18T02:01:31.250700Z",
    "updated_at": "2024-08-18T02:01:31.250700Z",
    "lead_time": 4.376
  },
  {
    "text": "读写功能有些半导体存储器存储的内容在存储器工作过程中只能读出而不能写入，这种半导体存储器称为只读存储器ROM",
    "id": 7314,
    "label": [
      {
        "start": 6,
        "end": 12,
        "text": "半导体存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 38,
        "end": 44,
        "text": "半导体存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 46,
        "end": 51,
        "text": "只读存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 51,
        "end": 54,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8747,
    "created_at": "2024-08-18T02:01:33.556770Z",
    "updated_at": "2024-08-18T02:01:33.556770Z",
    "lead_time": 1.836
  },
  {
    "text": "注意cache的每一小框代表的不是“字”而是“行”",
    "id": 7315,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 19,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8748,
    "created_at": "2024-08-18T02:01:37.855620Z",
    "updated_at": "2024-08-18T02:01:37.855620Z",
    "lead_time": 3.779
  },
  {
    "text": "它采用位数据线和位地址线，数据线和地址线是一组线，分时复用",
    "id": 7316,
    "label": [
      {
        "start": 25,
        "end": 29,
        "text": "分时复用",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "位地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "数据线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 4,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8749,
    "created_at": "2024-08-18T02:01:39.622644Z",
    "updated_at": "2024-08-18T02:01:39.622644Z",
    "lead_time": 1.274
  },
  {
    "text": "因此，图中最右边的全加器的起始进位输入端被连接到功能方式线M上，做减法时M，相当于在加法器的最低位上加",
    "id": 7317,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "全加器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 45,
        "text": "加法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 48,
        "end": 49,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8750,
    "created_at": "2024-08-18T02:01:44.260771Z",
    "updated_at": "2024-08-18T02:01:44.260771Z",
    "lead_time": 4.01
  },
  {
    "text": "控制部件与执行部件之间的另一种联系是反馈信息",
    "id": 7318,
    "annotator": 1,
    "annotation_id": 8751,
    "created_at": "2024-08-18T02:01:55.707203Z",
    "updated_at": "2024-08-18T02:01:55.707203Z",
    "lead_time": 10.988
  },
  {
    "text": "因此微指令的格式大体分成两类：水平型微指令和垂直型微指令",
    "id": 7319,
    "label": [
      {
        "start": 15,
        "end": 21,
        "text": "水平型微指令",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 28,
        "text": "垂直型微指令",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8752,
    "created_at": "2024-08-18T02:01:57.601072Z",
    "updated_at": "2024-08-18T02:01:57.601072Z",
    "lead_time": 1.405
  },
  {
    "text": "程序执行的动作如下：先向IO设备发出命令字，请求进行数据传送",
    "id": 7320,
    "label": [
      {
        "start": 12,
        "end": 16,
        "text": "IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 20,
        "end": 21,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8753,
    "created_at": "2024-08-18T02:02:01.450423Z",
    "updated_at": "2024-08-18T02:02:01.450423Z",
    "lead_time": 3.327
  },
  {
    "text": "存储器既可用来存放数据，又可用来存放指令",
    "id": 7321,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8754,
    "created_at": "2024-08-18T02:02:03.676755Z",
    "updated_at": "2024-08-18T02:02:03.676755Z",
    "lead_time": 1.819
  },
  {
    "text": "二是在SRAM读出期间可同时对DRAM阵列进行刷新",
    "id": 7322,
    "label": [
      {
        "start": 15,
        "end": 19,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8755,
    "created_at": "2024-08-18T02:02:08.731879Z",
    "updated_at": "2024-08-18T02:02:08.731879Z",
    "lead_time": 4.619
  },
  {
    "text": "在前一种情况下，如果电位高时表示数字“”，那么电位低时则表示数字“”",
    "id": 7323,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "电位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "电位",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8756,
    "created_at": "2024-08-18T02:02:15.597837Z",
    "updated_at": "2024-08-18T02:02:15.597837Z",
    "lead_time": 6.227
  },
  {
    "text": "指令系统是表征一台计算机性能的重要因素，它的格式与功能不仅影响到机器的硬件结构，而且影响到系统软件",
    "id": 7324,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 45,
        "end": 49,
        "text": "系统软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8757,
    "created_at": "2024-08-18T02:02:18.056529Z",
    "updated_at": "2024-08-18T02:02:18.056529Z",
    "lead_time": 1.944
  },
  {
    "text": "下面介绍数据传送过程中采用的几种定时协定：同步定时协定、异步定时协定、半同步定时协定和周期分裂式总线协定",
    "id": 7325,
    "label": [
      {
        "start": 21,
        "end": 25,
        "text": "同步定时",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 36,
        "end": 40,
        "text": "同步定时",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "异步定时",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 48,
        "end": 50,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8758,
    "created_at": "2024-08-18T02:02:21.575996Z",
    "updated_at": "2024-08-18T02:02:21.575996Z",
    "lead_time": 3.004
  },
  {
    "text": "磁层上的存储元被磁化后，它可以供多次读出而不被破坏",
    "id": 7326,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "存储元",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8759,
    "created_at": "2024-08-18T02:02:22.932661Z",
    "updated_at": "2024-08-18T02:02:22.932661Z",
    "lead_time": 0.853
  },
  {
    "text": "第二条微指令完成ab运算",
    "id": 7327,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8760,
    "created_at": "2024-08-18T02:02:25.008576Z",
    "updated_at": "2024-08-18T02:02:25.008576Z",
    "lead_time": 1.564
  },
  {
    "text": "当加热到一个确定的温度后，冷却时它即呈现出水晶状；但如果一开始把它加热到一个更高的温度，它会被熔化，随即冷却成一种非晶形的固态",
    "id": 7328,
    "annotator": 1,
    "annotation_id": 8761,
    "created_at": "2024-08-18T02:02:28.561521Z",
    "updated_at": "2024-08-18T02:02:28.561521Z",
    "lead_time": 3.041
  },
  {
    "text": "其存储容量M由图像分辨率和灰度级决定",
    "id": 7329,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "存储容量",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "灰度级",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8762,
    "created_at": "2024-08-18T02:02:30.492966Z",
    "updated_at": "2024-08-18T02:02:30.492966Z",
    "lead_time": 1.555
  },
  {
    "text": "一个总线周期由一个地址期和一个或多个数据期组成",
    "id": 7330,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "地址期",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "数据期",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8763,
    "created_at": "2024-08-18T02:02:34.984096Z",
    "updated_at": "2024-08-18T02:02:34.984096Z",
    "lead_time": 4.012
  },
  {
    "text": "其中HOST桥又是PCI总线控制器，含有中央仲裁器",
    "id": 7331,
    "label": [
      {
        "start": 20,
        "end": 25,
        "text": "中央仲裁器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 17,
        "text": "PCI总线控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 7,
        "text": "HOST桥",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8764,
    "created_at": "2024-08-18T02:02:38.502930Z",
    "updated_at": "2024-08-18T02:02:38.502930Z",
    "lead_time": 2.961
  },
  {
    "text": "为此，必须增加一定的硬件电路完成控制功能，即cache控制器",
    "id": 7332,
    "label": [
      {
        "start": 22,
        "end": 30,
        "text": "cache控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8765,
    "created_at": "2024-08-18T02:02:40.545295Z",
    "updated_at": "2024-08-18T02:02:40.546289Z",
    "lead_time": 1.545
  },
  {
    "text": "所有这些cache、寄存器堆、功能部件，在处理器中通过六条位宽的内部总线相连接",
    "id": 7333,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "寄存器堆",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 9,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "内部总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 30,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8766,
    "created_at": "2024-08-18T02:02:42.190683Z",
    "updated_at": "2024-08-18T02:02:42.190683Z",
    "lead_time": 1.124
  },
  {
    "text": "CISC中，由于各种指令的操作功能不同，各种指令的指令周期是不尽相同的",
    "id": 7334,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "CISC",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8767,
    "created_at": "2024-08-18T02:02:43.417752Z",
    "updated_at": "2024-08-18T02:02:43.417752Z",
    "lead_time": 0.688
  },
  {
    "text": "这种传送方法的优点是控制简单，它适用于数据传输率很高的设备进行成组传送",
    "id": 7335,
    "label": [
      {
        "start": 19,
        "end": 24,
        "text": "数据传输率",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8768,
    "created_at": "2024-08-18T02:02:45.354196Z",
    "updated_at": "2024-08-18T02:02:45.354196Z",
    "lead_time": 1.401
  },
  {
    "text": "INTI为中断排队输入，INTO中断排队输出",
    "id": 7336,
    "label": [
      {
        "start": 5,
        "end": 7,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8769,
    "created_at": "2024-08-18T02:03:16.707953Z",
    "updated_at": "2024-08-18T02:03:16.707953Z",
    "lead_time": 30.83
  },
  {
    "text": "中断屏蔽触发器IM是CPU是否受理中断或批准中断的标志",
    "id": 7337,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "中断屏蔽",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8770,
    "created_at": "2024-08-18T02:03:18.042573Z",
    "updated_at": "2024-08-18T02:03:18.042573Z",
    "lead_time": 0.9
  },
  {
    "text": "在速度较慢的外围设备准备自己的数据时，CPU照常执行自己的主程序",
    "id": 7338,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8771,
    "created_at": "2024-08-18T02:03:22.300764Z",
    "updated_at": "2024-08-18T02:03:22.300764Z",
    "lead_time": 3.795
  },
  {
    "text": "替换问题决定哪些程序和数据应被调出主存",
    "id": 7339,
    "label": [
      {
        "start": 17,
        "end": 19,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8772,
    "created_at": "2024-08-18T02:03:23.452880Z",
    "updated_at": "2024-08-18T02:03:23.452880Z",
    "lead_time": 0.757
  },
  {
    "text": "在接口方面，有决定是否向CPU发出中断请求的机构，主要是接口中的“准备就绪”标志RD和“允许中断”标志EI两个触发器",
    "id": 7340,
    "label": [
      {
        "start": 55,
        "end": 58,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8773,
    "created_at": "2024-08-18T02:03:26.784768Z",
    "updated_at": "2024-08-18T02:03:26.784768Z",
    "lead_time": 2.92
  },
  {
    "text": "无条件传送方式简单IO方式无条件传送方式假设外设始终处于就绪状态，数据传送时，CPU不必通过接口查询外设的状态，而直接执行IO指令进行数据传输",
    "id": 7341,
    "label": [
      {
        "start": 22,
        "end": 24,
        "text": "外设",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 61,
        "end": 65,
        "text": "IO指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 39,
        "end": 42,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "外设",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8774,
    "created_at": "2024-08-18T02:03:37.543775Z",
    "updated_at": "2024-08-18T02:03:37.543775Z",
    "lead_time": 10.31
  },
  {
    "text": "此外还要解决主存分配、存储保护与程序再定位等问题",
    "id": 7342,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "存储保护",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "再定位",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8775,
    "created_at": "2024-08-18T02:03:39.475051Z",
    "updated_at": "2024-08-18T02:03:39.475051Z",
    "lead_time": 1.376
  },
  {
    "text": "常规并行总线EPROM访问速度快，接口简单，但引脚数量多，封装尺寸较大，故近年来更多地被串行EPROMSEEPROM或闪存取代",
    "id": 7343,
    "label": [
      {
        "start": 6,
        "end": 11,
        "text": "EPROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 46,
        "end": 51,
        "text": "EPROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 53,
        "end": 58,
        "text": "EPROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "并行总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 59,
        "end": 61,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "引脚",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8776,
    "created_at": "2024-08-18T02:03:41.037577Z",
    "updated_at": "2024-08-18T02:03:41.037577Z",
    "lead_time": 1.05
  },
  {
    "text": "与此同时，这条微指令的顺序控制部分由于判别测试字段P和P均为，表示不进行测试，于是直接给出下一条微指令的地址为",
    "id": 7344,
    "label": [
      {
        "start": 19,
        "end": 25,
        "text": "判别测试字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 10,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 48,
        "end": 51,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 52,
        "end": 54,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8777,
    "created_at": "2024-08-18T02:07:50.755008Z",
    "updated_at": "2024-08-18T02:07:50.755008Z",
    "lead_time": 249.011
  },
  {
    "text": "使用二级cache能使性能提高多少？下面通过例子来说明",
    "id": 7345,
    "label": [
      {
        "start": 4,
        "end": 9,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8778,
    "created_at": "2024-08-18T02:07:51.976880Z",
    "updated_at": "2024-08-18T02:07:51.976880Z",
    "lead_time": 0.601
  },
  {
    "text": "在多路转移方式中，当微程序不产生分支时，后继微地址直接由微指令的顺序控制字段给出；当微程序出现分支时，有若干“后选”微地址可供选择：即按顺序控制字段的“判别测试”标志和“状态条件”信息来选择其中一个微地址，其原理如图所示",
    "id": 7346,
    "label": [
      {
        "start": 22,
        "end": 25,
        "text": "微地址",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 42,
        "end": 45,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 58,
        "end": 61,
        "text": "微地址",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 99,
        "end": 102,
        "text": "微地址",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 72,
        "end": 74,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8779,
    "created_at": "2024-08-18T02:07:54.712465Z",
    "updated_at": "2024-08-18T02:07:54.712465Z",
    "lead_time": 2.201
  },
  {
    "text": "这种算法保护了刚复制到cache中的新数据行，符合cache工作原理，因而使cache有较高的命中率",
    "id": 7347,
    "label": [
      {
        "start": 11,
        "end": 16,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 25,
        "end": 30,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 38,
        "end": 43,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 47,
        "end": 50,
        "text": "命中率",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "算法",
        "labels": [
          "ALG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8780,
    "created_at": "2024-08-18T02:09:05.496804Z",
    "updated_at": "2024-08-18T02:09:05.496804Z",
    "lead_time": 70.203
  },
  {
    "text": "例如，最常见的双线握手方式设置两条联络握手信号线：一条发方向收方发出的选通信号或请求信号，指明数据是否有效；一条收方向发方发出的应答信号，指明数据是否已经被取走",
    "id": 7348,
    "annotator": 1,
    "annotation_id": 8781,
    "created_at": "2024-08-18T02:09:06.555850Z",
    "updated_at": "2024-08-18T02:09:06.555850Z",
    "lead_time": 0.611
  },
  {
    "text": "当执行一条指令时，先把它从指令存储器简称指存读出，然后再传送至指令寄存器",
    "id": 7349,
    "label": [
      {
        "start": 13,
        "end": 18,
        "text": "指令存储器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 36,
        "text": "指令寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8782,
    "created_at": "2024-08-18T02:09:08.038197Z",
    "updated_at": "2024-08-18T02:09:08.038197Z",
    "lead_time": 1.021
  },
  {
    "text": "因此，根据外围设备供求串行数据或并行数据的方式不同，IO接口模块分为串行数据接口和并行数据接口两大类",
    "id": 7350,
    "label": [
      {
        "start": 26,
        "end": 30,
        "text": "IO接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8783,
    "created_at": "2024-08-18T02:09:10.482878Z",
    "updated_at": "2024-08-18T02:09:10.482878Z",
    "lead_time": 1.98
  },
  {
    "text": "对人来讲，符号语言简单直观、便于记忆，比二进制数表示的机器语言方便了许多",
    "id": 7351,
    "label": [
      {
        "start": 27,
        "end": 31,
        "text": "机器语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8784,
    "created_at": "2024-08-18T02:09:24.650272Z",
    "updated_at": "2024-08-18T02:09:24.650272Z",
    "lead_time": 13.612
  },
  {
    "text": "自从大规模集成电路问世以来，高速的单元阵列乘法器应运而生，出现了各种形式的流水式阵列乘法器，它们属于并行乘法器",
    "id": 7352,
    "label": [
      {
        "start": 5,
        "end": 9,
        "text": "集成电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 24,
        "text": "阵列乘法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 45,
        "text": "阵列乘法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 52,
        "end": 55,
        "text": "乘法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 50,
        "end": 52,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "流水",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8785,
    "created_at": "2024-08-18T02:09:51.390181Z",
    "updated_at": "2024-08-18T02:09:51.390181Z",
    "lead_time": 26.18
  },
  {
    "text": "它是一个高速智能接口，可以混接各种磁盘、光盘、磁带机、打印机、扫描仪、条码阅读器以及通信设备",
    "id": 7353,
    "label": [
      {
        "start": 27,
        "end": 30,
        "text": "打印机",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8786,
    "created_at": "2024-08-18T02:09:55.569723Z",
    "updated_at": "2024-08-18T02:09:55.569723Z",
    "lead_time": 3.653
  },
  {
    "text": "MOV是一条RR型指令，其指令周期如图所示",
    "id": 7354,
    "label": [
      {
        "start": 6,
        "end": 11,
        "text": "RR型指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "MOV",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8787,
    "created_at": "2024-08-18T02:09:57.327576Z",
    "updated_at": "2024-08-18T02:09:57.327576Z",
    "lead_time": 1.256
  },
  {
    "text": "显然这种方法工作效率大大提高，她可以腾出更多的时间批改作业",
    "id": 7355,
    "annotator": 1,
    "annotation_id": 8788,
    "created_at": "2024-08-18T02:10:01.492137Z",
    "updated_at": "2024-08-18T02:10:01.492137Z",
    "lead_time": 3.679
  },
  {
    "text": "ARM系列的处理器一般默认采用小端模式，但可以随时在程序中进行大小端模式的切换",
    "id": 7356,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "端模式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "端模式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8789,
    "created_at": "2024-08-18T02:10:07.804274Z",
    "updated_at": "2024-08-18T02:10:07.804274Z",
    "lead_time": 5.84
  },
  {
    "text": "寻道完成后，磁道上需要访问的扇区移动到磁头下方所需的时间，称为等待时间或寻区时间、潜伏期、旋转延迟",
    "id": 7357,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "磁道",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "扇区",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8790,
    "created_at": "2024-08-18T02:10:11.443202Z",
    "updated_at": "2024-08-18T02:10:11.443202Z",
    "lead_time": 3.151
  },
  {
    "text": "存储器的模块化组织一个由若干个模块组成的主存储器是线性编址的",
    "id": 7358,
    "label": [
      {
        "start": 20,
        "end": 24,
        "text": "主存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "编址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8791,
    "created_at": "2024-08-18T02:10:15.310900Z",
    "updated_at": "2024-08-18T02:10:15.310900Z",
    "lead_time": 3.376
  },
  {
    "text": "因此传统的软件部分，今后完全有可能“固化”甚至“硬化”",
    "id": 7359,
    "label": [
      {
        "start": 5,
        "end": 7,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8792,
    "created_at": "2024-08-18T02:10:17.738393Z",
    "updated_at": "2024-08-18T02:10:17.738393Z",
    "lead_time": 1.953
  },
  {
    "text": "由存储管理部件将其转换成位的物理地址，如图所示",
    "id": 7360,
    "label": [
      {
        "start": 1,
        "end": 7,
        "text": "存储管理部件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "物理地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 13,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8793,
    "created_at": "2024-08-18T02:10:27.176735Z",
    "updated_at": "2024-08-18T02:10:27.176735Z",
    "lead_time": 8.963
  },
  {
    "text": "在此期间，形成了计算机的基本体系，确定了程序设计的基本方法，数据处理机开始得到应用",
    "id": 7361,
    "label": [
      {
        "start": 20,
        "end": 24,
        "text": "程序设计",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 35,
        "text": "处理机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8794,
    "created_at": "2024-08-18T02:11:03.870954Z",
    "updated_at": "2024-08-18T02:11:03.870954Z",
    "lead_time": 36.184
  },
  {
    "text": "图b是周期挪用的DMA方式示意图",
    "id": 7362,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "周期挪用",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8795,
    "created_at": "2024-08-18T02:11:05.501254Z",
    "updated_at": "2024-08-18T02:11:05.501254Z",
    "lead_time": 1.153
  },
  {
    "text": "对于单处理器系统总线而言，总线仲裁器又称为总线控制器，它是CPU的一部分，一般是一个单独的功能模块，如图所示",
    "id": 7363,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "系统总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "总线仲裁",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "单处理器",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8796,
    "created_at": "2024-08-18T02:11:11.003993Z",
    "updated_at": "2024-08-18T02:11:11.003993Z",
    "lead_time": 5.011
  },
  {
    "text": "内页表和外页表上面所说的页表是虚地址到主存物理地址的变换表，通常称为内页表",
    "id": 7364,
    "label": [
      {
        "start": 15,
        "end": 18,
        "text": "虚地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "物理地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8797,
    "created_at": "2024-08-18T02:11:14.778445Z",
    "updated_at": "2024-08-18T02:11:14.778445Z",
    "lead_time": 3.195
  },
  {
    "text": "配置空间是个内部寄存器，用于保存系统初始化期间设置的配置参数",
    "id": 7365,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8798,
    "created_at": "2024-08-18T02:11:18.935302Z",
    "updated_at": "2024-08-18T02:11:18.935302Z",
    "lead_time": 3.649
  },
  {
    "text": "鼠标器输入鼠标器是一种手持的坐标定位部件，有两种类型",
    "id": 7366,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "鼠标",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "鼠标",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8799,
    "created_at": "2024-08-18T02:11:32.788766Z",
    "updated_at": "2024-08-18T02:11:32.788766Z",
    "lead_time": 13.346
  },
  {
    "text": "指令周期只需两个CPU周期，其中一个是取指周期，与图相同",
    "id": 7367,
    "label": [
      {
        "start": 8,
        "end": 13,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "取指周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8800,
    "created_at": "2024-08-18T02:11:39.174256Z",
    "updated_at": "2024-08-18T02:11:39.174256Z",
    "lead_time": 4.809
  },
  {
    "text": "SDRAM的特征SDRAM存储体的存储单元电路仍然是标准的DRAM存储体结构，只是在工艺上进行了改进，如功耗更低、集成度更高等",
    "id": 7368,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 13,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "存储单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "存储体",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "存储体",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8801,
    "created_at": "2024-08-18T02:11:41.950995Z",
    "updated_at": "2024-08-18T02:11:41.950995Z",
    "lead_time": 1.702
  },
  {
    "text": "上电或复位之后，芯片内部的状态机使器件自动进入“读存储矩阵”操作状态",
    "id": 7369,
    "label": [
      {
        "start": 25,
        "end": 29,
        "text": "存储矩阵",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 5,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8802,
    "created_at": "2024-08-18T02:12:24.119753Z",
    "updated_at": "2024-08-18T02:12:24.119753Z",
    "lead_time": 41.537
  },
  {
    "text": "此总线可连接MB的主存",
    "id": 7370,
    "label": [
      {
        "start": 9,
        "end": 11,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "MB",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8803,
    "created_at": "2024-08-18T02:12:26.421876Z",
    "updated_at": "2024-08-18T02:12:26.422874Z",
    "lead_time": 1.519
  },
  {
    "text": "指令划分为操作码和地址码字段，由二进制数字组成",
    "id": 7371,
    "label": [
      {
        "start": 5,
        "end": 8,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "字段",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8804,
    "created_at": "2024-08-18T02:12:48.311500Z",
    "updated_at": "2024-08-18T02:12:48.311500Z",
    "lead_time": 21.155
  },
  {
    "text": "可以快速执行许多图像处理算法，减轻主计算机系统的运算量",
    "id": 7372,
    "label": [
      {
        "start": 18,
        "end": 23,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 8,
        "end": 12,
        "text": "图像处理",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "算法",
        "labels": [
          "ALG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8805,
    "created_at": "2024-08-18T02:12:50.076969Z",
    "updated_at": "2024-08-18T02:12:50.076969Z",
    "lead_time": 1.079
  },
  {
    "text": "通过使用转移取和顺序取两路指令预取队列器以及目标指令cache，可将转移预测提前到取指阶段进行，以获得良好的效果",
    "id": 7373,
    "label": [
      {
        "start": 24,
        "end": 31,
        "text": "指令cache",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 38,
        "text": "转移预测",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "队列",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "取指",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8806,
    "created_at": "2024-08-18T02:12:52.743700Z",
    "updated_at": "2024-08-18T02:12:52.743700Z",
    "lead_time": 1.972
  },
  {
    "text": "理想的计算机输入设备应该是“会看”和“会听”，即能够把人们用文字或语言所表达的问题直接送到计算机内部进行处理，但是现在这种理想的输入设备还未大规模投入应用",
    "id": 7374,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "输入设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 64,
        "end": 68,
        "text": "输入设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 32,
        "text": "字",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8807,
    "created_at": "2024-08-18T02:12:54.483524Z",
    "updated_at": "2024-08-18T02:12:54.483524Z",
    "lead_time": 1.137
  },
  {
    "text": "这两个时间都是随机变化的，因此往往使用平均值来表示",
    "id": 7375,
    "annotator": 1,
    "annotation_id": 8808,
    "created_at": "2024-08-18T02:12:56.250927Z",
    "updated_at": "2024-08-18T02:12:56.250927Z",
    "lead_time": 1.189
  },
  {
    "text": "因此一条微指令的保持时间恰好是s，也就是一个CPU周期的时间",
    "id": 7376,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 22,
        "end": 27,
        "text": "CPU周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8809,
    "created_at": "2024-08-18T02:13:17.654812Z",
    "updated_at": "2024-08-18T02:13:17.654812Z",
    "lead_time": 20.808
  },
  {
    "text": "两种转移指令格式还包含一个A位，它指示寻址方式是绝对寻址还是PC相对寻址",
    "id": 7377,
    "label": [
      {
        "start": 4,
        "end": 8,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "相对寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 19,
        "end": 23,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 14,
        "end": 15,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8810,
    "created_at": "2024-08-18T02:13:21.674938Z",
    "updated_at": "2024-08-18T02:13:21.674938Z",
    "lead_time": 3.43
  },
  {
    "text": "此时Fi不仅与本位的被操作数Yi和操作数Xi有关，而且与向本位的进位值Cni有关，因此M时，进行算术操作",
    "id": 7378,
    "label": [
      {
        "start": 48,
        "end": 52,
        "text": "算术操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 9,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 30,
        "end": 31,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8811,
    "created_at": "2024-08-18T02:13:28.838928Z",
    "updated_at": "2024-08-18T02:13:28.839929Z",
    "lead_time": 6.51
  },
  {
    "text": "每进行一次传送，CPU必须执行一遍中断处理程序，完成一系列取指令、分析指令、执行指令的过程",
    "id": 7379,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "取指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 17,
        "end": 23,
        "text": "中断处理程序",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8812,
    "created_at": "2024-08-18T02:13:31.087037Z",
    "updated_at": "2024-08-18T02:13:31.087037Z",
    "lead_time": 1.536
  },
  {
    "text": "逻辑表达式表明，这是一个先行进位逻辑",
    "id": 7380,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "逻辑表达式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8813,
    "created_at": "2024-08-18T02:13:33.796377Z",
    "updated_at": "2024-08-18T02:13:33.796377Z",
    "lead_time": 2.035
  },
  {
    "text": "两个符号位出现“”，表示负溢出，即结果小于n",
    "id": 7381,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "负溢",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8814,
    "created_at": "2024-08-18T02:13:36.234066Z",
    "updated_at": "2024-08-18T02:13:36.234066Z",
    "lead_time": 1.854
  },
  {
    "text": "存储器带宽数据传送速率，频宽单位时间里存储器所存取的信息量，通常以位秒或字节秒做度量单位",
    "id": 7382,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "带宽",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 33,
        "end": 34,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8815,
    "created_at": "2024-08-18T02:13:41.576933Z",
    "updated_at": "2024-08-18T02:13:41.576933Z",
    "lead_time": 4.758
  },
  {
    "text": "这样，在计算机中实现起来就比较方便",
    "id": 7383,
    "label": [
      {
        "start": 4,
        "end": 7,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8816,
    "created_at": "2024-08-18T02:13:43.186159Z",
    "updated_at": "2024-08-18T02:13:43.186159Z",
    "lead_time": 0.769
  },
  {
    "text": "多路转移方式一条微指令具有多个转移分支的能力称为多路转移",
    "id": 7384,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8817,
    "created_at": "2024-08-18T02:13:44.612509Z",
    "updated_at": "2024-08-18T02:13:44.612509Z",
    "lead_time": 0.812
  },
  {
    "text": "图描述了动态流水线调度模型",
    "id": 7385,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8818,
    "created_at": "2024-08-18T02:14:14.410777Z",
    "updated_at": "2024-08-18T02:14:14.410777Z",
    "lead_time": 29.187
  },
  {
    "text": "大多数计算机采用了分层次的多总线结构",
    "id": 7386,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "多总线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8819,
    "created_at": "2024-08-18T02:14:16.223093Z",
    "updated_at": "2024-08-18T02:14:16.223093Z",
    "lead_time": 1.18
  },
  {
    "text": "中断优先级分为级",
    "id": 7387,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "优先级",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8820,
    "created_at": "2024-08-18T02:14:17.503076Z",
    "updated_at": "2024-08-18T02:14:17.503076Z",
    "lead_time": 0.649
  },
  {
    "text": "其中KBB，MBB，GBB，TBB",
    "id": 7388,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "MB",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "GB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "TB",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "KB",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8821,
    "created_at": "2024-08-18T02:14:19.098094Z",
    "updated_at": "2024-08-18T02:14:19.098094Z",
    "lead_time": 1.005
  },
  {
    "text": "单元之间的互联是用n的阵列来表示的",
    "id": 7389,
    "annotator": 1,
    "annotation_id": 8822,
    "created_at": "2024-08-18T02:14:20.472940Z",
    "updated_at": "2024-08-18T02:14:20.473942Z",
    "lead_time": 0.689
  },
  {
    "text": "浮点数也要有符号位",
    "id": 7390,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8823,
    "created_at": "2024-08-18T02:14:22.253197Z",
    "updated_at": "2024-08-18T02:14:22.253197Z",
    "lead_time": 1.231
  },
  {
    "text": "总之，随着大规模集成电路和计算机系统结构的发展，实体硬件机的功能范围在不断扩大",
    "id": 7391,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "集成电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 18,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8824,
    "created_at": "2024-08-18T02:14:23.746373Z",
    "updated_at": "2024-08-18T02:14:23.746373Z",
    "lead_time": 0.935
  },
  {
    "text": "设备选择电路接到总线上的每个设备预先都给定了设备地址码",
    "id": 7392,
    "label": [
      {
        "start": 22,
        "end": 26,
        "text": "设备地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8825,
    "created_at": "2024-08-18T02:14:25.712771Z",
    "updated_at": "2024-08-18T02:14:25.712771Z",
    "lead_time": 1.302
  },
  {
    "text": "最后，用到了我们人本身，这主要是人的脑和手",
    "id": 7393,
    "annotator": 1,
    "annotation_id": 8826,
    "created_at": "2024-08-18T02:14:37.008692Z",
    "updated_at": "2024-08-18T02:14:37.008692Z",
    "lead_time": 10.736
  },
  {
    "text": "因为指令是设计一台计算机的硬件与低层软件的接口",
    "id": 7394,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8827,
    "created_at": "2024-08-18T02:14:40.223787Z",
    "updated_at": "2024-08-18T02:14:40.224785Z",
    "lead_time": 2.639
  },
  {
    "text": "目前使用的存储介质主要是半导体器件、磁性材料和光存储器",
    "id": 7395,
    "label": [
      {
        "start": 23,
        "end": 27,
        "text": "光存储器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "存储介质",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "半导体",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8828,
    "created_at": "2024-08-18T02:14:42.423399Z",
    "updated_at": "2024-08-18T02:14:42.423399Z",
    "lead_time": 1.5
  },
  {
    "text": "计数器定时查询方式计数器定时查询方式原理示于图b",
    "id": 7396,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8829,
    "created_at": "2024-08-18T02:14:50.183383Z",
    "updated_at": "2024-08-18T02:14:50.183383Z",
    "lead_time": 7.103
  },
  {
    "text": "通常把取指令的一段时间叫做取指周期，而把执行指令的一段时间叫做执行周期",
    "id": 7397,
    "label": [
      {
        "start": 13,
        "end": 17,
        "text": "取指周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 31,
        "end": 35,
        "text": "执行周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "取指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8830,
    "created_at": "2024-08-18T02:14:52.151597Z",
    "updated_at": "2024-08-18T02:14:52.151597Z",
    "lead_time": 1.436
  },
  {
    "text": "这一步无需做任何操作，结果仍为第步，确定积的符号：x和y符号相反，乘积为负数，即xy浮十进制浮点数验证：流水线原理计算机的流水处理过程同工厂中的流水装配线类似",
    "id": 7398,
    "label": [
      {
        "start": 52,
        "end": 55,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 46,
        "end": 49,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 57,
        "end": 60,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 61,
        "end": 63,
        "text": "流水",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 72,
        "end": 74,
        "text": "流水",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8831,
    "created_at": "2024-08-18T02:14:53.929809Z",
    "updated_at": "2024-08-18T02:14:53.929809Z",
    "lead_time": 1.123
  },
  {
    "text": "设欲向该地址编程的数据的第七位为D，若编程未完成时，读出的DQD；而编程结束后，读出的DQD",
    "id": 7399,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 14,
        "end": 15,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8832,
    "created_at": "2024-08-18T02:14:55.825080Z",
    "updated_at": "2024-08-18T02:14:55.825080Z",
    "lead_time": 1.181
  },
  {
    "text": "为了提高总线利用率，减少延时损失，主方完成寻址总线周期后可让出总线控制权，以使其他主方完成更紧迫的操作",
    "id": 7400,
    "label": [
      {
        "start": 31,
        "end": 36,
        "text": "总线控制权",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 9,
        "text": "总线利用率",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 23,
        "end": 27,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8833,
    "created_at": "2024-08-18T02:14:57.850552Z",
    "updated_at": "2024-08-18T02:14:57.850552Z",
    "lead_time": 1.384
  },
  {
    "text": "光盘的扇区地址编码不同于磁盘，它是以分MN、秒SC和分数秒FR，s时间值作为地址",
    "id": 7401,
    "label": [
      {
        "start": 12,
        "end": 14,
        "text": "磁盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "扇区",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8834,
    "created_at": "2024-08-18T02:15:00.030155Z",
    "updated_at": "2024-08-18T02:15:00.030155Z",
    "lead_time": 1.527
  },
  {
    "text": "如果具有阵列乘法器或除法器，那么它们所处的位置应与ALU相当",
    "id": 7402,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "除法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 9,
        "text": "阵列乘法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 22,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8835,
    "created_at": "2024-08-18T02:15:01.952868Z",
    "updated_at": "2024-08-18T02:15:01.952868Z",
    "lead_time": 1.268
  },
  {
    "text": "滚筒是记录装置，表面镀有一层具有光敏特性的感光材料，通常是硒，因此又将滚筒称为硒鼓",
    "id": 7403,
    "annotator": 1,
    "annotation_id": 8836,
    "created_at": "2024-08-18T02:15:03.041238Z",
    "updated_at": "2024-08-18T02:15:03.041238Z",
    "lead_time": 0.511
  },
  {
    "text": "但问题是，外围设备通常动作很慢，程序进入查询循环时将白白消耗掉CPU很多时间",
    "id": 7404,
    "label": [
      {
        "start": 31,
        "end": 34,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8837,
    "created_at": "2024-08-18T02:15:04.468417Z",
    "updated_at": "2024-08-18T02:15:04.468417Z",
    "lead_time": 0.869
  },
  {
    "text": "这些门描述符为字节长，对应个中断向量号，IDT表长为KB",
    "id": 7405,
    "label": [
      {
        "start": 14,
        "end": 19,
        "text": "中断向量号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "KB",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8838,
    "created_at": "2024-08-18T02:15:06.764551Z",
    "updated_at": "2024-08-18T02:15:06.764551Z",
    "lead_time": 1.677
  },
  {
    "text": "因此这类指令只用于操作系统或其他系统软件，一般不直接提供给用户使用",
    "id": 7406,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "系统软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8839,
    "created_at": "2024-08-18T02:15:08.917893Z",
    "updated_at": "2024-08-18T02:15:08.917893Z",
    "lead_time": 1.571
  },
  {
    "text": "因此程序查询方式只适用于连接低速外设或者CPU任务不繁忙的情况",
    "id": 7407,
    "label": [
      {
        "start": 20,
        "end": 23,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 8,
        "text": "程序查询方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "外设",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8840,
    "created_at": "2024-08-18T02:15:11.733958Z",
    "updated_at": "2024-08-18T02:15:11.733958Z",
    "lead_time": 1.39
  },
  {
    "text": "计算机能够直接识别和执行的唯一语言是二进制机器语言，但人们用它来编写程序很不方便",
    "id": 7408,
    "label": [
      {
        "start": 21,
        "end": 25,
        "text": "机器语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8841,
    "created_at": "2024-08-18T02:15:15.200844Z",
    "updated_at": "2024-08-18T02:15:15.200844Z",
    "lead_time": 2.781
  },
  {
    "text": "第三代为年，中小规模集成电路计算机",
    "id": 7409,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "集成电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8842,
    "created_at": "2024-08-18T02:15:38.301519Z",
    "updated_at": "2024-08-18T02:15:38.302523Z",
    "lead_time": 22.464
  },
  {
    "text": "在这样长的时间里通道处于等待状态，因此整个通道的利用率不是很高",
    "id": 7410,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8843,
    "created_at": "2024-08-18T02:15:39.988992Z",
    "updated_at": "2024-08-18T02:15:39.988992Z",
    "lead_time": 1.105
  },
  {
    "text": "存取方式如果存储器中任何存储单元的内容都能被随机存取，且存取时间和存储单元的物理位置无关，这种存储器称为随机存取存储器",
    "id": 7411,
    "label": [
      {
        "start": 52,
        "end": 59,
        "text": "随机存取存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 28,
        "end": 32,
        "text": "存取时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "存储单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 33,
        "end": 37,
        "text": "存储单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 47,
        "end": 50,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 40,
        "end": 41,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8844,
    "created_at": "2024-08-18T02:15:48.567874Z",
    "updated_at": "2024-08-18T02:15:48.567874Z",
    "lead_time": 7.737
  },
  {
    "text": "为此，必须借助汇编器汇编程序或编译器编译程序，把符号语言或高级语言翻译成二进制码组成的机器语言",
    "id": 7412,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "汇编器",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "编译器",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "高级语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 43,
        "end": 47,
        "text": "机器语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "编译程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 36,
        "end": 39,
        "text": "二进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8845,
    "created_at": "2024-08-18T02:15:51.396966Z",
    "updated_at": "2024-08-18T02:15:51.396966Z",
    "lead_time": 2.101
  },
  {
    "text": "在微程序流程图中，每一条微指令的地址用数字示于长方框的右上角",
    "id": 7413,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8846,
    "created_at": "2024-08-18T02:15:55.481276Z",
    "updated_at": "2024-08-18T02:15:55.481276Z",
    "lead_time": 3.383
  },
  {
    "text": "之所以做到实时性，原因有二：一是它除了异步传送外，还提供了一种等步传送方式，数据以一系列的固定长度的包规整间隔地连续发送，端到端既有最大延时限制而又有最小延时限制；二是总线仲裁除优先权仲裁之外，还有均等仲裁和紧急仲裁方式",
    "id": 7414,
    "label": [
      {
        "start": 84,
        "end": 88,
        "text": "总线仲裁",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 106,
        "end": 110,
        "text": "仲裁方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 61,
        "end": 64,
        "text": "端到端",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8847,
    "created_at": "2024-08-18T02:15:57.990930Z",
    "updated_at": "2024-08-18T02:15:57.990930Z",
    "lead_time": 1.883
  },
  {
    "text": "当记录有代码的磁带在磁头下移动时，就可在磁头线圈上感应出电动势，即读出信息代码",
    "id": 7415,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "磁头",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8848,
    "created_at": "2024-08-18T02:15:59.421177Z",
    "updated_at": "2024-08-18T02:15:59.421177Z",
    "lead_time": 0.779
  },
  {
    "text": "总线所有事件都出现在时钟信号的下跳沿，正好是时钟周期的中间",
    "id": 7416,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "时钟信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8849,
    "created_at": "2024-08-18T02:16:01.308966Z",
    "updated_at": "2024-08-18T02:16:01.308966Z",
    "lead_time": 1.239
  },
  {
    "text": "图像输入控制板的功能是实现连续的视频信号与离散的数字量之间的转换",
    "id": 7417,
    "annotator": 1,
    "annotation_id": 8850,
    "created_at": "2024-08-18T02:16:02.624825Z",
    "updated_at": "2024-08-18T02:16:06.843366Z",
    "lead_time": 2.37
  },
  {
    "text": "用户程序按照虚地址逻辑地址编程并存放在辅存中",
    "id": 7418,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "用户程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "逻辑地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "虚地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "辅存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8851,
    "created_at": "2024-08-18T02:16:10.565150Z",
    "updated_at": "2024-08-18T02:16:10.565150Z",
    "lead_time": 1.492
  },
  {
    "text": "许多处理器允许在CPU每次访问存储器时动态确定读写的信息量大小，相应地选择不同的寻址宽度",
    "id": 7419,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "多处理器",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 40,
        "end": 42,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8852,
    "created_at": "2024-08-18T02:16:12.630350Z",
    "updated_at": "2024-08-18T02:16:12.630350Z",
    "lead_time": 1.195
  },
  {
    "text": "微程序控制器同硬布线控制器相比较，具有规整性、灵活性、可维护性等一系列优点，因而在计算机设计中逐渐取代了早期采用的硬布线控制器，并已广泛地应用",
    "id": 7420,
    "label": [
      {
        "start": 7,
        "end": 13,
        "text": "硬布线控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 57,
        "end": 63,
        "text": "硬布线控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 6,
        "text": "微程序控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 44,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8853,
    "created_at": "2024-08-18T02:16:14.610923Z",
    "updated_at": "2024-08-18T02:16:14.610923Z",
    "lead_time": 0.943
  },
  {
    "text": "这使我们认识到，如何确定微指令的结构，乃是微程序设计的关键",
    "id": 7421,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "微程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8854,
    "created_at": "2024-08-18T02:16:16.498264Z",
    "updated_at": "2024-08-18T02:16:16.498264Z",
    "lead_time": 0.95
  },
  {
    "text": "但由于流水过程中会出现以下三种相关冲突，实现流水线的不断流是困难的，这三种相关是资源相关、数据相关和控制相关",
    "id": 7422,
    "label": [
      {
        "start": 45,
        "end": 49,
        "text": "数据相关",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "流水",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 40,
        "end": 44,
        "text": "资源相关",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 50,
        "end": 54,
        "text": "控制相关",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8855,
    "created_at": "2024-08-18T02:16:19.278023Z",
    "updated_at": "2024-08-18T02:16:30.938067Z",
    "lead_time": 9.578
  },
  {
    "text": "一种是通道结构的IO处理器，通常称为输入输出处理器IOP",
    "id": 7423,
    "label": [
      {
        "start": 10,
        "end": 13,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "OP",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8856,
    "created_at": "2024-08-18T02:16:39.149298Z",
    "updated_at": "2024-08-18T02:16:39.150295Z",
    "lead_time": 3.205
  },
  {
    "text": "RISC中，由于流水执行，大部分指令在一个机器周期完成",
    "id": 7424,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "流水",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "RISC",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "机器周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8857,
    "created_at": "2024-08-18T02:17:47.002003Z",
    "updated_at": "2024-08-18T02:17:47.003010Z",
    "lead_time": 64.386
  },
  {
    "text": "由于闪存经常存放系统上电引导程序，为了防止误操作或其他原因导致存储的信息被删除，WP信号为低电平时可以让芯片处于写保护状态",
    "id": 7425,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 45,
        "end": 48,
        "text": "低电平",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 52,
        "end": 54,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8858,
    "created_at": "2024-08-18T02:17:50.621122Z",
    "updated_at": "2024-08-18T02:17:50.621122Z",
    "lead_time": 2.22
  },
  {
    "text": "中断是操作系统进行多任务调度的手段",
    "id": 7426,
    "label": [
      {
        "start": 3,
        "end": 7,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "任务调度",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8859,
    "created_at": "2024-08-18T02:17:54.983245Z",
    "updated_at": "2024-08-18T02:17:54.983245Z",
    "lead_time": 2.815
  },
  {
    "text": "因此，寻址过程就是把操作数的形式地址，变换为操作数的有效地址的过程",
    "id": 7427,
    "label": [
      {
        "start": 16,
        "end": 18,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "有效地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8860,
    "created_at": "2024-08-18T02:18:00.562037Z",
    "updated_at": "2024-08-18T02:18:00.562037Z",
    "lead_time": 4.403
  },
  {
    "text": "每一个部分乘积项位积aibj叫做一个被加数",
    "id": 7428,
    "label": [
      {
        "start": 8,
        "end": 9,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8861,
    "created_at": "2024-08-18T02:18:03.817134Z",
    "updated_at": "2024-08-18T02:18:03.817134Z",
    "lead_time": 1.746
  },
  {
    "text": "采用这种方法，用高级语言编写程序时，若用到硬件资源，则可用汇编程序来实现",
    "id": 7429,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "高级语言",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8862,
    "created_at": "2024-08-18T02:18:17.574938Z",
    "updated_at": "2024-08-18T02:18:17.574938Z",
    "lead_time": 12.753
  },
  {
    "text": "它依据设定的显示工作方式，自主地、反复不断地读取显存中的图像点阵包括图形、字符文本数据，将它们转换成R、G、B三色信号，并配以同步信号送至显示器刷新屏幕",
    "id": 7430,
    "label": [
      {
        "start": 69,
        "end": 72,
        "text": "显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "点阵",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 63,
        "end": 65,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8863,
    "created_at": "2024-08-18T02:18:28.812974Z",
    "updated_at": "2024-08-18T02:18:28.812974Z",
    "lead_time": 10.47
  },
  {
    "text": "具有这种线性优先关系的流水线称为线性流水线",
    "id": 7431,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8864,
    "created_at": "2024-08-18T02:18:33.592696Z",
    "updated_at": "2024-08-18T02:18:33.592696Z",
    "lead_time": 3.681
  },
  {
    "text": "同时假定用图所示的运算器做执行部件",
    "id": 7432,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8865,
    "created_at": "2024-08-18T02:18:36.654884Z",
    "updated_at": "2024-08-18T02:18:36.654884Z",
    "lead_time": 1.878
  },
  {
    "text": "为了防止这种错误，可将信号采用专门的逻辑电路进行编码以检测错误，甚至校正错误",
    "id": 7433,
    "label": [
      {
        "start": 18,
        "end": 22,
        "text": "逻辑电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8866,
    "created_at": "2024-08-18T02:18:45.753326Z",
    "updated_at": "2024-08-18T02:18:45.753326Z",
    "lead_time": 8.217
  },
  {
    "text": "这时，CPU将寻找中断请求源是哪一个设备，并保存CPU自己的程序计数器PC的内容",
    "id": 7434,
    "label": [
      {
        "start": 9,
        "end": 13,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 35,
        "text": "程序计数器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8867,
    "created_at": "2024-08-18T02:18:48.781073Z",
    "updated_at": "2024-08-18T02:19:04.296171Z",
    "lead_time": 13.449000000000002
  },
  {
    "text": "其功能是将主存中一个单元的信息送入寄存器或者将寄存器的数据送往主存",
    "id": 7435,
    "label": [
      {
        "start": 17,
        "end": 20,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8868,
    "created_at": "2024-08-18T02:20:15.933496Z",
    "updated_at": "2024-08-18T02:20:15.933496Z",
    "lead_time": 68.223
  },
  {
    "text": "在这个意义上说，CPU和外围设备的一些操作是并行地进行的，因而同串行进行的程序查询方式相比，计算机系统的效率大大提高了",
    "id": 7436,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 43,
        "text": "程序查询方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 46,
        "end": 51,
        "text": "计算机系统",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8869,
    "created_at": "2024-08-18T02:20:31.634785Z",
    "updated_at": "2024-08-18T02:20:31.634785Z",
    "lead_time": 12.691
  },
  {
    "text": "实时处理",
    "id": 7437,
    "annotator": 1,
    "annotation_id": 8870,
    "created_at": "2024-08-18T02:21:08.873393Z",
    "updated_at": "2024-08-18T02:21:08.873393Z",
    "lead_time": 35.317
  },
  {
    "text": "区码和位码各两位十进制数字，因此输入一个汉字需按键四次",
    "id": 7438,
    "label": [
      {
        "start": 20,
        "end": 22,
        "text": "汉字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "十进制",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 3,
        "end": 4,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 8,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8871,
    "created_at": "2024-08-18T02:21:14.768484Z",
    "updated_at": "2024-08-18T02:21:14.768484Z",
    "lead_time": 4.542
  },
  {
    "text": "从计算机组成的层次结构来说，计算机的指令有微指令、机器指令和宏指令之分",
    "id": 7439,
    "label": [
      {
        "start": 21,
        "end": 24,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8872,
    "created_at": "2024-08-18T02:21:17.986458Z",
    "updated_at": "2024-08-18T02:21:17.986458Z",
    "lead_time": 1.817
  },
  {
    "text": "如果指令中指明要变址或间址变换，那么形式地址就不是操作数的有效地址，而要经过指定方式的变换，才能形成有效地址",
    "id": 7440,
    "label": [
      {
        "start": 20,
        "end": 22,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "有效地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 50,
        "end": 54,
        "text": "有效地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "变址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8873,
    "created_at": "2024-08-18T02:21:22.616637Z",
    "updated_at": "2024-08-18T02:21:22.616637Z",
    "lead_time": 3.573
  },
  {
    "text": "比方说，用算盘进行运算，算盘本身就是硬件，而运算法则和解题步骤等就是软件",
    "id": 7441,
    "label": [
      {
        "start": 34,
        "end": 36,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "算法",
        "labels": [
          "ALG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8874,
    "created_at": "2024-08-18T02:21:26.841610Z",
    "updated_at": "2024-08-18T02:21:26.841610Z",
    "lead_time": 2.723
  },
  {
    "text": "中、低速IO设备之间互相连接的总线，称为IO总线",
    "id": 7442,
    "label": [
      {
        "start": 20,
        "end": 24,
        "text": "IO总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 8,
        "text": "低速IO设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8875,
    "created_at": "2024-08-18T02:21:57.120841Z",
    "updated_at": "2024-08-18T02:21:57.120841Z",
    "lead_time": 27.817
  },
  {
    "text": "在写周期中，也是地址线先有效，接着片选信号CS有效，写命令WE有效低电平，此时数据总线IO上必须置写入数据，在tWD时间段将数据写入存储器",
    "id": 7443,
    "label": [
      {
        "start": 33,
        "end": 36,
        "text": "低电平",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 66,
        "end": 69,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "片选信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 39,
        "end": 43,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "写周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8876,
    "created_at": "2024-08-18T02:22:03.403453Z",
    "updated_at": "2024-08-18T02:22:03.403453Z",
    "lead_time": 3.027
  },
  {
    "text": "由存储器取出装入通用寄存器时，要进行符号位扩展，即所有空出位用符号位填充",
    "id": 7444,
    "label": [
      {
        "start": 8,
        "end": 13,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 29,
        "end": 30,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8877,
    "created_at": "2024-08-18T02:22:10.566182Z",
    "updated_at": "2024-08-18T02:22:10.566182Z",
    "lead_time": 5.373
  },
  {
    "text": "这以后，存储器的价格持续快速下跌，但存储密度却不断增加",
    "id": 7445,
    "label": [
      {
        "start": 18,
        "end": 22,
        "text": "存储密度",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8878,
    "created_at": "2024-08-18T02:22:13.467693Z",
    "updated_at": "2024-08-18T02:22:13.467693Z",
    "lead_time": 1.601
  },
  {
    "text": "译码后总是力图同一时间发射这两条指令到EX段",
    "id": 7446,
    "label": [
      {
        "start": 0,
        "end": 2,
        "text": "译码",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8879,
    "created_at": "2024-08-18T02:22:15.990097Z",
    "updated_at": "2024-08-18T02:22:15.990097Z",
    "lead_time": 1.477
  },
  {
    "text": "这种情况类似于上述例子中第一种方法",
    "id": 7447,
    "annotator": 1,
    "annotation_id": 8880,
    "created_at": "2024-08-18T02:22:19.442711Z",
    "updated_at": "2024-08-18T02:22:19.443716Z",
    "lead_time": 2.21
  },
  {
    "text": "这种计算机的主要特征是：计算机的各个操作如读写存储器，算术或逻辑运算，IO操作只能串行地完成，即任一时刻只能进行一个操作",
    "id": 7448,
    "label": [
      {
        "start": 23,
        "end": 26,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "逻辑运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "串行",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8881,
    "created_at": "2024-08-18T02:22:22.934925Z",
    "updated_at": "2024-08-18T02:22:22.934925Z",
    "lead_time": 1.548
  },
  {
    "text": "从图b的逻辑结构图可以看出，闪存芯片的核心仍然是存储矩阵",
    "id": 7449,
    "label": [
      {
        "start": 24,
        "end": 28,
        "text": "存储矩阵",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8882,
    "created_at": "2024-08-18T02:22:25.985395Z",
    "updated_at": "2024-08-18T02:22:25.985395Z",
    "lead_time": 1.149
  },
  {
    "text": "用户的虚拟地址空间是TB",
    "id": 7450,
    "label": [
      {
        "start": 3,
        "end": 9,
        "text": "虚拟地址空间",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "TB",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8883,
    "created_at": "2024-08-18T02:22:28.415815Z",
    "updated_at": "2024-08-18T02:22:28.415815Z",
    "lead_time": 1.313
  },
  {
    "text": "总线仲裁器接到请求信号以后，在BS线为“”的情况下让计数器开始计数，计数值通过一组地址线发向各设备",
    "id": 7451,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "仲裁器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "计数器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 44,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8884,
    "created_at": "2024-08-18T02:22:36.362725Z",
    "updated_at": "2024-08-18T02:22:36.362725Z",
    "lead_time": 6.732
  },
  {
    "text": "例如，图中的RD，WE信号持续时间均为ns，而一个CPU周期也正好是ns",
    "id": 7452,
    "label": [
      {
        "start": 25,
        "end": 30,
        "text": "CPU周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8885,
    "created_at": "2024-08-18T02:22:41.068538Z",
    "updated_at": "2024-08-18T02:22:53.394774Z",
    "lead_time": 10.808
  },
  {
    "text": "简言之，一条机器指令所完成的操作划分成若干条微指令来完成，由微指令进行解释和执行",
    "id": 7453,
    "label": [
      {
        "start": 22,
        "end": 25,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8886,
    "created_at": "2024-08-18T02:23:00.013764Z",
    "updated_at": "2024-08-18T02:23:00.014768Z",
    "lead_time": 2.586
  },
  {
    "text": "磁盘存储器的数据传输率可达几十兆字节秒",
    "id": 7454,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "磁盘存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 11,
        "text": "数据传输率",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8887,
    "created_at": "2024-08-18T02:23:39.990667Z",
    "updated_at": "2024-08-18T02:23:39.990667Z",
    "lead_time": 38.29
  },
  {
    "text": "为了深化概念，图中给出了一个读操作总线周期时序示例",
    "id": 7455,
    "label": [
      {
        "start": 17,
        "end": 21,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "读操作",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8888,
    "created_at": "2024-08-18T02:23:42.548617Z",
    "updated_at": "2024-08-18T02:23:42.548617Z",
    "lead_time": 1.397
  },
  {
    "text": "图示出了典型的程序查询流程图",
    "id": 7456,
    "label": [
      {
        "start": 7,
        "end": 9,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8889,
    "created_at": "2024-08-18T02:23:44.344696Z",
    "updated_at": "2024-08-18T02:23:44.344696Z",
    "lead_time": 0.635
  },
  {
    "text": "因此这里介绍的寻址方式主要是指有效地址的获取方式，用字母EA表示",
    "id": 7457,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 19,
        "text": "有效地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8890,
    "created_at": "2024-08-18T02:23:50.267913Z",
    "updated_at": "2024-08-18T02:23:50.267913Z",
    "lead_time": 4.654
  },
  {
    "text": "单周期CPU和多周期CPU单周期CPU在一个时钟周期内完成从指令取出到得到结果的所有工作，指令系统中所有指令执行时间都以最长时间的指令为准，因而效率低，当前较少采用",
    "id": 7458,
    "label": [
      {
        "start": 45,
        "end": 49,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 54,
        "end": 58,
        "text": "执行时间",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 13,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 52,
        "end": 54,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 65,
        "end": 67,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8891,
    "created_at": "2024-08-18T02:24:04.353869Z",
    "updated_at": "2024-08-18T02:24:04.353869Z",
    "lead_time": 13.055
  },
  {
    "text": "此时将尾数运算结果右移以实现规格化表示，称为向右规格化，即尾数右移位，阶码加",
    "id": 7459,
    "label": [
      {
        "start": 14,
        "end": 17,
        "text": "规格化",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "规格化",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "右移",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "右移",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 29,
        "end": 31,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 33,
        "end": 34,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8892,
    "created_at": "2024-08-18T02:24:17.631498Z",
    "updated_at": "2024-08-18T02:24:17.632509Z",
    "lead_time": 11.95
  },
  {
    "text": "分页方式的缺点是页长与程序的逻辑大小不相关，而分段方式则可按照程序的自然分界将内存空间划分为长度可以动态改变的存储区域",
    "id": 7460,
    "label": [
      {
        "start": 55,
        "end": 59,
        "text": "存储区域",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 39,
        "end": 43,
        "text": "内存空间",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "分页",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "分段",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 8,
        "end": 9,
        "text": "页",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8893,
    "created_at": "2024-08-18T02:24:21.745894Z",
    "updated_at": "2024-08-18T02:24:21.749892Z",
    "lead_time": 2.94
  },
  {
    "text": "它在显示方式上除遵循VESA的SuperVGA模式外，并没有提出新的显示方式",
    "id": 7461,
    "label": [
      {
        "start": 10,
        "end": 14,
        "text": "VESA",
        "labels": [
          "GRP"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "VGA",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8894,
    "created_at": "2024-08-18T02:24:25.809916Z",
    "updated_at": "2024-08-18T02:24:25.809916Z",
    "lead_time": 2.877
  },
  {
    "text": "图显示了页式虚拟存储器的地址映射过程",
    "id": 7462,
    "label": [
      {
        "start": 4,
        "end": 11,
        "text": "页式虚拟存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "地址映射",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8895,
    "created_at": "2024-08-18T02:24:27.837253Z",
    "updated_at": "2024-08-18T02:24:27.837253Z",
    "lead_time": 0.935
  },
  {
    "text": "有个用户可见的段寄存器，每个保存相应段的起始地址、段长和访问权限",
    "id": 7463,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 24,
        "text": "起始地址",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8896,
    "created_at": "2024-08-18T02:24:51.689734Z",
    "updated_at": "2024-08-18T02:24:51.689734Z",
    "lead_time": 22.687
  },
  {
    "text": "从前两节讲述可知，计算机不能简单地认为是一种电子设备，而是一个十分复杂的硬、软件结合而成的整体",
    "id": 7464,
    "label": [
      {
        "start": 9,
        "end": 12,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8897,
    "created_at": "2024-08-18T02:24:55.455806Z",
    "updated_at": "2024-08-18T02:24:55.455806Z",
    "lead_time": 2.539
  },
  {
    "text": "磁盘存储器、磁带存储器均属于磁表面存储器",
    "id": 7465,
    "label": [
      {
        "start": 14,
        "end": 20,
        "text": "磁表面存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "磁盘存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8898,
    "created_at": "2024-08-18T02:25:41.855747Z",
    "updated_at": "2024-08-18T02:25:41.855747Z",
    "lead_time": 44.902
  },
  {
    "text": "但是多路型DMA控制器却适合于同时为多个慢速外围设备服务",
    "id": 7466,
    "label": [
      {
        "start": 5,
        "end": 11,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 26,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8899,
    "created_at": "2024-08-18T02:25:56.385606Z",
    "updated_at": "2024-08-18T02:25:56.385606Z",
    "lead_time": 13.396
  },
  {
    "text": "这种方法容易导致误差累积",
    "id": 7467,
    "annotator": 1,
    "annotation_id": 8900,
    "created_at": "2024-08-18T02:25:58.762361Z",
    "updated_at": "2024-08-18T02:25:58.762361Z",
    "lead_time": 1.122
  },
  {
    "text": "如果想把纸上的图像输入计算机，一种方法是用摄像机对着纸上的图像摄像输入，另一种方法是利用装有CCD电荷耦合器件的图文扫描仪或图文传真机",
    "id": 7468,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8901,
    "created_at": "2024-08-18T02:26:01.588670Z",
    "updated_at": "2024-08-18T02:26:01.588670Z",
    "lead_time": 1.841
  },
  {
    "text": "磁盘控制器它是主机与磁盘驱动器之间的接口，电路板实物如图a所示",
    "id": 7469,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "磁盘控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 15,
        "text": "磁盘驱动器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8902,
    "created_at": "2024-08-18T02:28:00.091521Z",
    "updated_at": "2024-08-18T02:28:00.091521Z",
    "lead_time": 117.389
  },
  {
    "text": "首先，两个加数的指数部分通过ALU相减，从而判断出哪一个的指数较大、大多少",
    "id": 7470,
    "label": [
      {
        "start": 14,
        "end": 17,
        "text": "ALU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8903,
    "created_at": "2024-08-18T02:28:04.102468Z",
    "updated_at": "2024-08-18T02:28:04.102468Z",
    "lead_time": 2.743
  },
  {
    "text": "性能特点随着CPU速度达到上百兆赫，存储器容量达到GB级，以及PC、工作站、服务器对快速IO的强烈需求，工业界期望能有一种更高速、连接更方便的IO接口",
    "id": 7471,
    "label": [
      {
        "start": 71,
        "end": 75,
        "text": "IO接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 21,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "GB",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8904,
    "created_at": "2024-08-18T02:28:08.226730Z",
    "updated_at": "2024-08-18T02:28:08.226730Z",
    "lead_time": 2.871
  },
  {
    "text": "凡掌握汉语拼音的人，不需训练和记忆，即可使用",
    "id": 7472,
    "annotator": 1,
    "annotation_id": 8905,
    "created_at": "2024-08-18T02:28:12.327625Z",
    "updated_at": "2024-08-18T02:28:12.327625Z",
    "lead_time": 2.826
  },
  {
    "text": "控制寄存器CR指向页表，页表的每个表项为位",
    "id": 7473,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "控制寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "页表",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 21,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8906,
    "created_at": "2024-08-18T02:28:18.241151Z",
    "updated_at": "2024-08-18T02:28:18.241151Z",
    "lead_time": 2.937
  },
  {
    "text": "在CPU方面，有决定是否受理中断请求的机构，主要是“中断请求”标志IR和“中断屏蔽”标志IM两个触发器",
    "id": 7474,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 48,
        "end": 51,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 37,
        "end": 42,
        "text": "中断屏蔽”",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 26,
        "end": 30,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 33,
        "end": 35,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8907,
    "created_at": "2024-08-18T02:28:22.181817Z",
    "updated_at": "2024-08-18T02:28:22.183055Z",
    "lead_time": 2.563
  },
  {
    "text": "如果需要执行传统ROM不支持的其他操作，需要执行特定的命令序列，使NOR闪存转入其他状态，进行芯片擦除、区块擦除、编程写入、软件数据保护或者读标识码等操作",
    "id": 7475,
    "label": [
      {
        "start": 36,
        "end": 38,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 62,
        "end": 64,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 52,
        "end": 54,
        "text": "区块",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8908,
    "created_at": "2024-08-18T02:28:24.828851Z",
    "updated_at": "2024-08-18T02:28:24.828851Z",
    "lead_time": 1.344
  },
  {
    "text": "它需要两个CPU周期，其中取指周期需要一个CPU周期，执行周期需要一个CPU周期",
    "id": 7476,
    "label": [
      {
        "start": 5,
        "end": 10,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 21,
        "end": 26,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 35,
        "end": 40,
        "text": "CPU周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "取指周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 27,
        "end": 31,
        "text": "执行周期",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8909,
    "created_at": "2024-08-18T02:28:27.469808Z",
    "updated_at": "2024-08-18T02:28:27.469808Z",
    "lead_time": 1.109
  },
  {
    "text": "由于NAND闪存有倍于NOR闪存的可擦除次数，故适用于大容量存储设备，如存储卡、优盘USB闪存盘、固态盘等应用",
    "id": 7477,
    "label": [
      {
        "start": 36,
        "end": 39,
        "text": "存储卡",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "AND",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8910,
    "created_at": "2024-08-18T02:28:33.476777Z",
    "updated_at": "2024-08-18T02:28:33.476777Z",
    "lead_time": 4.84
  },
  {
    "text": "显然，Pentium采用RS型指令，指令格式中只有一个存储器操作数",
    "id": 7478,
    "label": [
      {
        "start": 27,
        "end": 30,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 17,
        "text": "RS型指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "指令格式",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8911,
    "created_at": "2024-08-18T02:28:36.933564Z",
    "updated_at": "2024-08-18T02:28:36.933635Z",
    "lead_time": 2.099
  },
  {
    "text": "其输入信号，可以是数字式的电压，也可以是模拟式的电压和电流",
    "id": 7479,
    "annotator": 1,
    "annotation_id": 8912,
    "created_at": "2024-08-18T02:29:22.319472Z",
    "updated_at": "2024-08-18T02:29:22.319472Z",
    "lead_time": 43.883
  },
  {
    "text": "以此类推，直至到第个孩子发完块糖",
    "id": 7480,
    "annotator": 1,
    "annotation_id": 8913,
    "created_at": "2024-08-18T02:29:24.814859Z",
    "updated_at": "2024-08-18T02:29:24.814859Z",
    "lead_time": 1.456
  },
  {
    "text": "指令的前位网点表示指定操作码部分",
    "id": 7481,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "操作码",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 4,
        "end": 5,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8914,
    "created_at": "2024-08-18T02:29:30.124812Z",
    "updated_at": "2024-08-18T02:29:30.124812Z",
    "lead_time": 4.14
  },
  {
    "text": "由于数据是在CK的上下沿触发，因而传输周期缩短了一半，因此必须要保证传输周期的稳定，以确保数据的正确传输",
    "id": 7482,
    "annotator": 1,
    "annotation_id": 8915,
    "created_at": "2024-08-18T02:29:45.213816Z",
    "updated_at": "2024-08-18T02:29:45.213816Z",
    "lead_time": 13.911
  },
  {
    "text": "在透明的DMA方式下工作，CPU既不停止主程序的运行，也不进入等待状态，是一种高效率的工作方式",
    "id": 7483,
    "label": [
      {
        "start": 13,
        "end": 16,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8916,
    "created_at": "2024-08-18T02:30:04.841850Z",
    "updated_at": "2024-08-18T02:30:04.841850Z",
    "lead_time": 18.397
  },
  {
    "text": "所谓SCSI设备是指连接在SCSI总线上的智能设备，即除主适配器HBA外，其他SCSI设备实际是外围设备的适配器或控制器",
    "id": 7484,
    "label": [
      {
        "start": 48,
        "end": 52,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 57,
        "end": 60,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "适配器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 53,
        "end": 56,
        "text": "适配器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8917,
    "created_at": "2024-08-18T02:30:10.600920Z",
    "updated_at": "2024-08-18T02:30:10.600920Z",
    "lead_time": 3.52
  },
  {
    "text": "从功能上看，它是主存的缓冲存储器，由高速的SRAM组成",
    "id": 7485,
    "label": [
      {
        "start": 21,
        "end": 25,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 16,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "主存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8918,
    "created_at": "2024-08-18T02:30:18.048980Z",
    "updated_at": "2024-08-18T02:30:18.048980Z",
    "lead_time": 3.148
  },
  {
    "text": "半同步总线整体上仍然采用同步操作方式，其总线周期是时钟周期的整数倍",
    "id": 7486,
    "label": [
      {
        "start": 20,
        "end": 24,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "时钟周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "同步总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8919,
    "created_at": "2024-08-18T02:30:44.326559Z",
    "updated_at": "2024-08-18T02:30:44.326559Z",
    "lead_time": 25.025
  },
  {
    "text": "基于英特尔IA体系结构的奔腾系列机为存储管理提供了硬件支持",
    "id": 7487,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "英特尔",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8920,
    "created_at": "2024-08-18T02:30:47.071310Z",
    "updated_at": "2024-08-18T02:30:47.071310Z",
    "lead_time": 1.671
  },
  {
    "text": "更进一步，现代的很多高性能计算机系统为输入输出操作配置专用的处理器，称为输入输出处理器IOP或者外围处理器",
    "id": 7488,
    "label": [
      {
        "start": 10,
        "end": 16,
        "text": "高性能计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 50,
        "end": 53,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 44,
        "end": 46,
        "text": "OP",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8921,
    "created_at": "2024-08-18T02:30:51.808788Z",
    "updated_at": "2024-08-18T02:30:51.808788Z",
    "lead_time": 3.503
  },
  {
    "text": "这种寻址方式的实质还是基址寻址",
    "id": 7489,
    "label": [
      {
        "start": 11,
        "end": 15,
        "text": "基址寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "寻址方式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8922,
    "created_at": "2024-08-18T02:30:55.198666Z",
    "updated_at": "2024-08-18T02:30:55.198666Z",
    "lead_time": 2.282
  },
  {
    "text": "乱序执行逻辑依据数据相关性和资源可用性，调度微指令的执行，因而微指令可按不同于所取机器指令流的顺序被调度执行",
    "id": 7490,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "数据相关",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 41,
        "end": 45,
        "text": "机器指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 22,
        "end": 25,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 31,
        "end": 34,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8923,
    "created_at": "2024-08-18T02:31:06.403125Z",
    "updated_at": "2024-08-18T02:31:06.403125Z",
    "lead_time": 9.963
  },
  {
    "text": "M为方式控制输入线，当M时，做加法AB运算；当M，做减法AB运算，在后一种情况下，AB运算转化成A补B补运算，求补过程由B来实现",
    "id": 7491,
    "annotator": 1,
    "annotation_id": 8924,
    "created_at": "2024-08-18T02:31:09.986785Z",
    "updated_at": "2024-08-18T02:31:09.986785Z",
    "lead_time": 2.07
  },
  {
    "text": "流水线分为三段：取指和译码FD段、执行EX段、写回WB段，如图所示",
    "id": 7492,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "流水线",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "译码",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "取指",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8925,
    "created_at": "2024-08-18T02:31:23.438415Z",
    "updated_at": "2024-08-18T02:31:23.438415Z",
    "lead_time": 12.23
  },
  {
    "text": "在DRAM接口上增加时钟信号则可以降低存储器芯片与控制器同步的开销，优化DRAM与CPU之间的接口，这是同步DRAMSDRAM的最主要改进",
    "id": 7493,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 52,
        "end": 58,
        "text": "同步DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 58,
        "end": 63,
        "text": "SDRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "时钟信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 36,
        "end": 40,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 41,
        "end": 44,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 30,
        "text": "同步",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8926,
    "created_at": "2024-08-18T02:32:29.542760Z",
    "updated_at": "2024-08-18T02:32:29.542760Z",
    "lead_time": 64.798
  },
  {
    "text": "常用的英特尔系列处理器采用小端模式",
    "id": 7494,
    "label": [
      {
        "start": 3,
        "end": 6,
        "text": "英特尔",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "处理器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "小端模式",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8927,
    "created_at": "2024-08-18T02:32:47.491030Z",
    "updated_at": "2024-08-18T02:32:47.491030Z",
    "lead_time": 16.623
  },
  {
    "text": "有关中断的概念留在第章介绍",
    "id": 7495,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "关中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8928,
    "created_at": "2024-08-18T02:32:49.761897Z",
    "updated_at": "2024-08-18T02:32:49.761897Z",
    "lead_time": 1.002
  },
  {
    "text": "基本DMA控制器与系统的连接可采用两种方式：一种是公用的DMA请求方式，另一种是独立的DMA请求方式，这与中断方式类似",
    "id": 7496,
    "label": [
      {
        "start": 2,
        "end": 8,
        "text": "DMA控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 53,
        "end": 55,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 46,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8929,
    "created_at": "2024-08-18T02:33:15.513722Z",
    "updated_at": "2024-08-18T02:33:15.513722Z",
    "lead_time": 24.439
  },
  {
    "text": "这种芯片是非破坏性的，而且读写速度比磁芯快得多，读出一位只要纳秒，但是其价格比磁芯要贵",
    "id": 7497,
    "label": [
      {
        "start": 2,
        "end": 4,
        "text": "芯片",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "磁芯",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "磁芯",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 27,
        "end": 28,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8930,
    "created_at": "2024-08-18T02:35:52.321083Z",
    "updated_at": "2024-08-18T02:35:52.321083Z",
    "lead_time": 155.309
  },
  {
    "text": "表列出了无冲突的读写条件，表中符号代表高电平，为低电平，为任意，Z为高阻态",
    "id": 7498,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "高电平",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 27,
        "text": "低电平",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8931,
    "created_at": "2024-08-18T02:36:04.064925Z",
    "updated_at": "2024-08-18T02:36:04.064925Z",
    "lead_time": 10.272
  },
  {
    "text": "在中断响应时，由公共的中断服务程序软件查询中断源，并跳转至相应中断服务子程序入口执行",
    "id": 7499,
    "label": [
      {
        "start": 31,
        "end": 38,
        "text": "中断服务子程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 11,
        "end": 17,
        "text": "中断服务程序",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 24,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8932,
    "created_at": "2024-08-18T02:37:29.103832Z",
    "updated_at": "2024-08-18T02:37:29.103832Z",
    "lead_time": 83.851
  },
  {
    "text": "为了使人眼能看到稳定的图像显示，必须使电子束不断地重复扫描整个屏幕，这个过程称为刷新",
    "id": 7500,
    "label": [
      {
        "start": 19,
        "end": 22,
        "text": "电子束",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8933,
    "created_at": "2024-08-18T02:37:44.781909Z",
    "updated_at": "2024-08-18T02:37:44.781909Z",
    "lead_time": 14.361
  },
  {
    "text": "DMA方式适用于内存和高速外围设备之间大批数据交换的场合",
    "id": 7501,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8934,
    "created_at": "2024-08-18T02:37:47.489158Z",
    "updated_at": "2024-08-18T02:37:47.489158Z",
    "lead_time": 1.918
  },
  {
    "text": "当阶码E为全且尾数M为全时，表示的真值N为无穷大，结合符号位S为或，也有和之分",
    "id": 7502,
    "label": [
      {
        "start": 27,
        "end": 30,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 7,
        "end": 9,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 1,
        "end": 3,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 17,
        "end": 19,
        "text": "真值",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8935,
    "created_at": "2024-08-18T02:37:51.498202Z",
    "updated_at": "2024-08-18T02:37:51.498202Z",
    "lead_time": 2.859
  },
  {
    "text": "程序中断每当外围设备向CPU请求某种动作时，接口模块即发生一个中断请求信号到CPU",
    "id": 7503,
    "label": [
      {
        "start": 31,
        "end": 35,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 10,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 11,
        "end": 14,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "程序中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8936,
    "created_at": "2024-08-18T02:38:06.933918Z",
    "updated_at": "2024-08-18T02:38:06.933918Z",
    "lead_time": 14.423
  },
  {
    "text": "这种指令字结构简单，且指令字长度是不变的",
    "id": 7504,
    "label": [
      {
        "start": 2,
        "end": 5,
        "text": "指令字",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 11,
        "end": 16,
        "text": "指令字长度",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8937,
    "created_at": "2024-08-18T02:38:09.337829Z",
    "updated_at": "2024-08-18T02:38:09.337829Z",
    "lead_time": 1.413
  },
  {
    "text": "图示出了硬布线控制器的结构方框图",
    "id": 7505,
    "label": [
      {
        "start": 4,
        "end": 10,
        "text": "硬布线控制器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8938,
    "created_at": "2024-08-18T02:38:11.045738Z",
    "updated_at": "2024-08-18T02:38:11.045738Z",
    "lead_time": 0.836
  },
  {
    "text": "寄存器寻址：一般指令或使用位通用寄存器AH，AL，BH，BL，CH，CL，DH，DL，或使用位通用寄存器AX，BX，CX，DX，SI，DI，SP，BP，或使用位通用寄存器EAX，EBX，ECX，EDX，ESI，EDI，ESP，EBP",
    "id": 7506,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "寄存器寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 14,
        "end": 19,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 47,
        "end": 52,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 80,
        "end": 85,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 109,
        "end": 112,
        "text": "ESP",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 8,
        "end": 10,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 13,
        "end": 14,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 46,
        "end": 47,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 79,
        "end": 80,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8939,
    "created_at": "2024-08-18T02:38:19.800646Z",
    "updated_at": "2024-08-18T02:38:19.800646Z",
    "lead_time": 7.899
  },
  {
    "text": "运算器就好像是一个由电子线路构成的算盘，图是它的示意图",
    "id": 7507,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8940,
    "created_at": "2024-08-18T02:38:35.906788Z",
    "updated_at": "2024-08-18T02:38:35.906788Z",
    "lead_time": 15.219
  },
  {
    "text": "异步控制方式异步控制方式的特点是：每条指令、每个操作控制信号需要多少时间就占用多少时间",
    "id": 7508,
    "label": [
      {
        "start": 24,
        "end": 30,
        "text": "操作控制信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8941,
    "created_at": "2024-08-18T02:39:01.731461Z",
    "updated_at": "2024-08-18T02:39:01.731461Z",
    "lead_time": 24.896
  },
  {
    "text": "而在程序运行时，则分配给每个程序一定的运行空间，由地址转换部件硬件或软件将编程时的地址转换成实际内存的物理地址",
    "id": 7509,
    "label": [
      {
        "start": 51,
        "end": 55,
        "text": "物理地址",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 25,
        "end": 29,
        "text": "地址转换",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 41,
        "end": 45,
        "text": "地址转换",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 48,
        "end": 50,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 31,
        "end": 33,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8942,
    "created_at": "2024-08-18T02:40:44.609613Z",
    "updated_at": "2024-08-18T02:40:44.609613Z",
    "lead_time": 101.952
  },
  {
    "text": "除数y是一个位的小数：yyyy它沿对角线方向进入这个阵列",
    "id": 7510,
    "label": [
      {
        "start": 6,
        "end": 7,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8943,
    "created_at": "2024-08-18T02:42:02.851138Z",
    "updated_at": "2024-08-18T02:42:02.851138Z",
    "lead_time": 76.947
  },
  {
    "text": "这两种情况综合在一起，说明每条指令和每个操作控制信号所需的时间各不相同",
    "id": 7511,
    "label": [
      {
        "start": 20,
        "end": 26,
        "text": "操作控制信号",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8944,
    "created_at": "2024-08-18T02:42:07.371619Z",
    "updated_at": "2024-08-18T02:42:07.371619Z",
    "lead_time": 3.688
  },
  {
    "text": "各模块的读写过程将重叠进行，所以多模块交叉存储器是一种并行存储器结构",
    "id": 7512,
    "label": [
      {
        "start": 16,
        "end": 24,
        "text": "多模块交叉存储器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 32,
        "text": "并行存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8945,
    "created_at": "2024-08-18T02:42:09.138538Z",
    "updated_at": "2024-08-18T02:42:09.138538Z",
    "lead_time": 0.821
  },
  {
    "text": "由上可见，以桥连接实现的PCI总线结构具有很好的扩充性和兼容性，允许多条总线并行工作",
    "id": 7513,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "PCI",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 36,
        "end": 38,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "并行",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 7,
        "text": "桥",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8946,
    "created_at": "2024-08-18T02:42:19.421708Z",
    "updated_at": "2024-08-18T02:42:19.421708Z",
    "lead_time": 9.248
  },
  {
    "text": "另外，在二维中断结构中，除了有中断优先级排队电路确定优先响应中断级外，还要确定优先响应的中断源，一般通过链式查询的硬件逻辑来实现",
    "id": 7514,
    "label": [
      {
        "start": 17,
        "end": 20,
        "text": "优先级",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 44,
        "end": 47,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 6,
        "end": 8,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 15,
        "end": 17,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 57,
        "end": 59,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8947,
    "created_at": "2024-08-18T02:42:24.611749Z",
    "updated_at": "2024-08-18T02:42:24.611749Z",
    "lead_time": 4.143
  },
  {
    "text": "用磁性材料做成的存储器称为磁表面存储器，如磁盘存储器和磁带存储器",
    "id": 7515,
    "label": [
      {
        "start": 13,
        "end": 19,
        "text": "磁表面存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 26,
        "text": "磁盘存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8948,
    "created_at": "2024-08-18T02:42:29.571855Z",
    "updated_at": "2024-08-18T02:42:29.571855Z",
    "lead_time": 3.305
  },
  {
    "text": "这种方式下，CPU在端口读、写操作之前对目标设备的状态不作任何检测",
    "id": 7516,
    "label": [
      {
        "start": 6,
        "end": 9,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "端口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8949,
    "created_at": "2024-08-18T02:42:34.131683Z",
    "updated_at": "2024-08-18T02:42:34.131683Z",
    "lead_time": 2.873
  },
  {
    "text": "一个系统可以兼有两种类型的通道，也可以只有其中一种",
    "id": 7517,
    "label": [
      {
        "start": 13,
        "end": 15,
        "text": "通道",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8950,
    "created_at": "2024-08-18T02:45:44.174688Z",
    "updated_at": "2024-08-18T02:45:44.174688Z",
    "lead_time": 188.897
  },
  {
    "text": "程序查询输入输出方式程序查询方式是利用程序控制实现CPU和外部设备之间的数据传送",
    "id": 7518,
    "label": [
      {
        "start": 25,
        "end": 28,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 16,
        "text": "程序查询方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 29,
        "end": 33,
        "text": "外部设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 0,
        "end": 2,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8951,
    "created_at": "2024-08-18T02:47:30.838997Z",
    "updated_at": "2024-08-18T02:47:30.838997Z",
    "lead_time": 105.694
  },
  {
    "text": "可见，虽然闪存具有非易失性并可在线编程，但仍然属于ROM，一般情况下闪存不能取代RAM",
    "id": 7519,
    "label": [
      {
        "start": 25,
        "end": 28,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 9,
        "end": 13,
        "text": "非易失性",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "RAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 34,
        "end": 36,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8952,
    "created_at": "2024-08-18T02:47:34.515651Z",
    "updated_at": "2024-08-18T02:47:34.515651Z",
    "lead_time": 2.248
  },
  {
    "text": "图表示了位格式浮点数的溢出概念",
    "id": 7520,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "浮点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "溢出",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 4,
        "end": 5,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8953,
    "created_at": "2024-08-18T02:47:44.574649Z",
    "updated_at": "2024-08-18T02:47:44.574649Z",
    "lead_time": 8.881
  },
  {
    "text": "当鼠标器在板上移动时，安装在鼠标器底部的光电转换装置可以定位坐标点",
    "id": 7521,
    "label": [
      {
        "start": 1,
        "end": 3,
        "text": "鼠标",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "鼠标",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8954,
    "created_at": "2024-08-18T02:48:29.423216Z",
    "updated_at": "2024-08-18T02:48:29.423216Z",
    "lead_time": 43.811
  },
  {
    "text": "外界中断请求信号通常存放在接口中的中断源锁存器里，并通过中断请求线连至CPU，每当一条指令执行到末尾，CPU便检查中断请求信号",
    "id": 7522,
    "label": [
      {
        "start": 28,
        "end": 33,
        "text": "中断请求线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "外界中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 57,
        "end": 61,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 51,
        "end": 54,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "锁存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "中断源",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8955,
    "created_at": "2024-08-18T02:48:53.004788Z",
    "updated_at": "2024-08-18T02:48:53.004788Z",
    "lead_time": 22.648
  },
  {
    "text": "若Wi时，将一直向下传递，使其竞争号后面的低位不能送上AB线",
    "id": 7523,
    "label": [
      {
        "start": 22,
        "end": 23,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8956,
    "created_at": "2024-08-18T02:48:55.514710Z",
    "updated_at": "2024-08-18T02:48:55.514710Z",
    "lead_time": 1.487
  },
  {
    "text": "电源线和地线未列入表中",
    "id": 7524,
    "annotator": 1,
    "annotation_id": 8957,
    "created_at": "2024-08-18T02:49:04.536372Z",
    "updated_at": "2024-08-18T02:49:04.536372Z",
    "lead_time": 8.04
  },
  {
    "text": "另外，还有能够输出图形图像的打印机，具有彩色效果的彩色打印机等",
    "id": 7525,
    "label": [
      {
        "start": 14,
        "end": 17,
        "text": "打印机",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "打印机",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8958,
    "created_at": "2024-08-18T02:49:06.283963Z",
    "updated_at": "2024-08-18T02:49:06.283963Z",
    "lead_time": 0.853
  },
  {
    "text": "在操作系统的控制下，硬件和系统软件为用户解决了上述问题，从而使应用程序的编程大大简化",
    "id": 7526,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 13,
        "end": 17,
        "text": "系统软件",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 31,
        "end": 35,
        "text": "应用程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 1,
        "end": 5,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8959,
    "created_at": "2024-08-18T02:49:08.913660Z",
    "updated_at": "2024-08-18T02:49:08.913660Z",
    "lead_time": 1.513
  },
  {
    "text": "我们知道，使用算盘进行运算时，要按运算法则和计算步骤，利用珠算口诀来进行",
    "id": 7527,
    "label": [
      {
        "start": 18,
        "end": 20,
        "text": "算法",
        "labels": [
          "ALG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8960,
    "created_at": "2024-08-18T02:49:10.962623Z",
    "updated_at": "2024-08-18T02:49:10.962623Z",
    "lead_time": 0.855
  },
  {
    "text": "随着计算机技术的日益发展，原始的操作方式越来越不适应，特别是用户直接使用大型机器并独占机器，无论是对机器的效率来说还是对方便用户来说都不适宜",
    "id": 7528,
    "label": [
      {
        "start": 36,
        "end": 39,
        "text": "大型机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8961,
    "created_at": "2024-08-18T02:49:14.705875Z",
    "updated_at": "2024-08-18T02:49:14.705875Z",
    "lead_time": 2.65
  },
  {
    "text": "使用相对寻址可节省指令中的地址位数，也便于程序在内存中成块搬动",
    "id": 7529,
    "label": [
      {
        "start": 4,
        "end": 6,
        "text": "寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 24,
        "end": 26,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 9,
        "end": 11,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 15,
        "end": 16,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8962,
    "created_at": "2024-08-18T02:49:30.016928Z",
    "updated_at": "2024-08-18T02:49:30.016928Z",
    "lead_time": 14.281
  },
  {
    "text": "另外，用相对坐标定位，必须和CRT显示的光标配合，计算机先要给定光标初始位置，然后用读取的相对位移移动光标",
    "id": 7530,
    "label": [
      {
        "start": 14,
        "end": 17,
        "text": "CRT",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 25,
        "end": 28,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 47,
        "end": 48,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8963,
    "created_at": "2024-08-18T02:49:37.119540Z",
    "updated_at": "2024-08-18T02:49:37.119540Z",
    "lead_time": 5.96
  },
  {
    "text": "目前的光盘有CDROM、WORM、CDR、CDRW、DVDROM等类型",
    "id": 7531,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "光盘",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 26,
        "end": 32,
        "text": "DVDROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "ROM",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8964,
    "created_at": "2024-08-18T02:49:40.333050Z",
    "updated_at": "2024-08-18T02:49:40.333050Z",
    "lead_time": 2.23
  },
  {
    "text": "一个提出申请并被授权的主设备，应在nFRAME、nIRDY线已释放的条件下尽快开始新的总线周期操作",
    "id": 7532,
    "label": [
      {
        "start": 11,
        "end": 14,
        "text": "主设备",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 47,
        "text": "总线周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 18,
        "end": 22,
        "text": "FRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8965,
    "created_at": "2024-08-18T02:49:45.391600Z",
    "updated_at": "2024-08-18T02:49:45.392621Z",
    "lead_time": 3.983
  },
  {
    "text": "朝舍入对正数来说，只要多余位不全为则向最低有效位进；对负数来说，则是简单的截尾",
    "id": 7533,
    "label": [
      {
        "start": 21,
        "end": 24,
        "text": "有效位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 37,
        "end": 39,
        "text": "截尾",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 14,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8966,
    "created_at": "2024-08-18T02:49:48.137471Z",
    "updated_at": "2024-08-18T02:49:48.137471Z",
    "lead_time": 1.57
  },
  {
    "text": "寄存器寻址当操作数不在内存中，而是放在CPU的通用寄存器中时，可采用寄存器寻址方式，如图e所示",
    "id": 7534,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "寄存器寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 34,
        "end": 39,
        "text": "寄存器寻址",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 23,
        "end": 28,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 19,
        "end": 22,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 6,
        "end": 9,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8967,
    "created_at": "2024-08-18T02:49:54.089615Z",
    "updated_at": "2024-08-18T02:49:54.089615Z",
    "lead_time": 4.627
  },
  {
    "text": "按总线的逻辑结构来说，总线可分为单向传送总线和双向传送总线",
    "id": 7535,
    "label": [
      {
        "start": 1,
        "end": 3,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 13,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 29,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8968,
    "created_at": "2024-08-18T02:49:59.830795Z",
    "updated_at": "2024-08-18T02:49:59.830795Z",
    "lead_time": 4.214
  },
  {
    "text": "磁芯存储器速度相当快，读存储器中的一位只需微秒",
    "id": 7536,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "磁芯存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 15,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 19,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8969,
    "created_at": "2024-08-18T02:50:02.922707Z",
    "updated_at": "2024-08-18T02:50:02.922707Z",
    "lead_time": 1.627
  },
  {
    "text": "例如，对于一片有行、刷新周期为ms的DRAM内存来说：在集中式刷新策略中，每一个刷新周期中集中一段时间对DRAM的所有行进行刷新",
    "id": 7537,
    "label": [
      {
        "start": 18,
        "end": 22,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 10,
        "end": 14,
        "text": "刷新周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 40,
        "end": 44,
        "text": "刷新周期",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 52,
        "end": 56,
        "text": "DRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 22,
        "end": 24,
        "text": "内存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8970,
    "created_at": "2024-08-18T02:50:10.850697Z",
    "updated_at": "2024-08-18T02:50:10.850697Z",
    "lead_time": 6.061
  },
  {
    "text": "PPU基本上是独立于主机工作的，它有自己的指令系统，完成算术逻辑运算，读写主存储器，与外设交换信息等",
    "id": 7538,
    "label": [
      {
        "start": 37,
        "end": 41,
        "text": "主存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 21,
        "end": 25,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 34,
        "text": "逻辑运算",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 45,
        "text": "外设",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8971,
    "created_at": "2024-08-18T02:50:14.388469Z",
    "updated_at": "2024-08-18T02:50:14.388469Z",
    "lead_time": 2.325
  },
  {
    "text": "在种类上，由简单的输入输出装置，发展到多种输入输出装置、随机存取大容量外存、多种终端设备，等等",
    "id": 7539,
    "label": [
      {
        "start": 35,
        "end": 37,
        "text": "外存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8972,
    "created_at": "2024-08-18T02:50:21.312458Z",
    "updated_at": "2024-08-18T02:50:21.312458Z",
    "lead_time": 5.669
  },
  {
    "text": "目前的磁带技术有如下几种类型",
    "id": 7540,
    "label": [
      {
        "start": 3,
        "end": 5,
        "text": "磁带",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8973,
    "created_at": "2024-08-18T02:50:30.483732Z",
    "updated_at": "2024-08-18T02:50:30.483732Z",
    "lead_time": 8.156
  },
  {
    "text": "但是这种方法还可以改进，于是她想了第三种方法，进行批处理：每人拿块糖各自去吃，吃完块糖后再向她报告",
    "id": 7541,
    "annotator": 1,
    "annotation_id": 8974,
    "created_at": "2024-08-18T02:50:32.747624Z",
    "updated_at": "2024-08-18T02:50:32.748618Z",
    "lead_time": 1.133
  },
  {
    "text": "因此必须寻找一种方法，以便将外围设备同某种计算机连接起来，使它们在一起可以正常工作",
    "id": 7542,
    "label": [
      {
        "start": 21,
        "end": 24,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 18,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8975,
    "created_at": "2024-08-18T02:50:36.222926Z",
    "updated_at": "2024-08-18T02:50:36.222926Z",
    "lead_time": 2.317
  },
  {
    "text": "换句话说，对机械开关来讲，可以认为输入的数据一直有效，因为机械开关的动作相对主机的速度来讲是非常慢的",
    "id": 7543,
    "label": [
      {
        "start": 38,
        "end": 40,
        "text": "主机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8976,
    "created_at": "2024-08-18T02:50:37.882674Z",
    "updated_at": "2024-08-18T02:50:37.882674Z",
    "lead_time": 0.548
  },
  {
    "text": "由于多路型DMA同时要为多个设备服务，因此对应多少个DMA通路设备，在控制器内部就有多少组寄存器用于存放各自的传送参数",
    "id": 7544,
    "label": [
      {
        "start": 45,
        "end": 48,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 38,
        "text": "控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 8,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 26,
        "end": 29,
        "text": "DMA",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8977,
    "created_at": "2024-08-18T02:50:40.912687Z",
    "updated_at": "2024-08-18T02:50:40.912687Z",
    "lead_time": 1.955
  },
  {
    "text": "随机扫描图形显示器工作原理是将所显示图形的一组坐标点和绘图命令组成显示文件存放在缓冲存储器，缓存中的显示文件送矢量线段产生器，产生相应的模拟电压，直接控制电子束在屏幕上的移动",
    "id": 7545,
    "label": [
      {
        "start": 77,
        "end": 80,
        "text": "电子束",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 4,
        "end": 9,
        "text": "图形显示器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 0,
        "end": 4,
        "text": "随机扫描",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 42,
        "end": 45,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 46,
        "end": 48,
        "text": "缓存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8978,
    "created_at": "2024-08-18T02:50:52.071574Z",
    "updated_at": "2024-08-18T02:50:52.071574Z",
    "lead_time": 10.08
  },
  {
    "text": "这些设备不仅能输出文字符号，而且还能画图作曲线",
    "id": 7546,
    "annotator": 1,
    "annotation_id": 8979,
    "created_at": "2024-08-18T02:50:58.345609Z",
    "updated_at": "2024-08-18T02:50:58.345609Z",
    "lead_time": 4.984
  },
  {
    "text": "注意，任何时候DBUS上只能有一个数据；OC送出控制信号，将DBUS上的数据打入到数据缓冲寄存器DR；OC送出控制信号，将DR中的数据打入到目标寄存器R，R的内容由变为",
    "id": 7547,
    "label": [
      {
        "start": 43,
        "end": 48,
        "text": "缓冲寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 70,
        "end": 75,
        "text": "目标寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 55,
        "end": 59,
        "text": "控制信号",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8980,
    "created_at": "2024-08-18T02:51:00.452478Z",
    "updated_at": "2024-08-18T02:51:00.452478Z",
    "lead_time": 1.01
  },
  {
    "text": "介于超级计算机和多核机之间的是大型机、服务器、PC机和单片机，它们的结构规模和性能指标依次递减",
    "id": 7548,
    "label": [
      {
        "start": 27,
        "end": 30,
        "text": "单片机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 7,
        "text": "超级计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 39,
        "end": 43,
        "text": "性能指标",
        "labels": [
          "PERF"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "多核机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 15,
        "end": 18,
        "text": "大型机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "PC机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8981,
    "created_at": "2024-08-18T02:51:03.076623Z",
    "updated_at": "2024-08-18T02:51:03.076623Z",
    "lead_time": 1.328
  },
  {
    "text": "符号位在数字位之后",
    "id": 7549,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 6,
        "end": 7,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8982,
    "created_at": "2024-08-18T02:51:08.289634Z",
    "updated_at": "2024-08-18T02:51:08.289634Z",
    "lead_time": 3.83
  },
  {
    "text": "有的外围处理机干脆就选用已有的通用机",
    "id": 7550,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "外围处理机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8983,
    "created_at": "2024-08-18T02:51:10.985513Z",
    "updated_at": "2024-08-18T02:51:10.985513Z",
    "lead_time": 1.64
  },
  {
    "text": "等所有行刷新结束后，又开始正常的读写周期",
    "id": 7551,
    "label": [
      {
        "start": 16,
        "end": 20,
        "text": "读写周期",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8984,
    "created_at": "2024-08-18T02:51:13.007468Z",
    "updated_at": "2024-08-18T02:51:13.007468Z",
    "lead_time": 0.714
  },
  {
    "text": "在定点数的反码表示法中，正数的机器码仍然等于其真值；而负数的机器码符号位为，尾数则将真值的各个二进制位取反",
    "id": 7552,
    "label": [
      {
        "start": 15,
        "end": 18,
        "text": "机器码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 47,
        "end": 51,
        "text": "二进制位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 33,
        "end": 36,
        "text": "符号位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 1,
        "end": 4,
        "text": "定点数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "机器码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 38,
        "end": 40,
        "text": "尾数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 5,
        "end": 7,
        "text": "反码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "真值",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "真值",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8985,
    "created_at": "2024-08-18T02:51:16.873457Z",
    "updated_at": "2024-08-18T02:51:16.873457Z",
    "lead_time": 2.838
  },
  {
    "text": "我们在讲述本章节时，曾讲述了指令与机器周期概念，并归纳了五条典型指令的指令周期参见图",
    "id": 7553,
    "label": [
      {
        "start": 35,
        "end": 39,
        "text": "指令周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 17,
        "end": 21,
        "text": "机器周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 14,
        "end": 16,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 32,
        "end": 34,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8986,
    "created_at": "2024-08-18T02:51:18.985611Z",
    "updated_at": "2024-08-18T02:51:18.985611Z",
    "lead_time": 0.997
  },
  {
    "text": "中断方式一般适用于随机出现的服务请求，并且一旦提出要求，能使服务请求立即得到响应，因而适合于计算机工作量十分饱满、而IO处理的实时性要求又很高的系统",
    "id": 7554,
    "label": [
      {
        "start": 0,
        "end": 4,
        "text": "中断方式",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 46,
        "end": 49,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8987,
    "created_at": "2024-08-18T02:51:21.132955Z",
    "updated_at": "2024-08-18T02:51:21.132955Z",
    "lead_time": 0.873
  },
  {
    "text": "微命令和微操作一台数字计算机基本上可以划分为两大部分控制部件和执行部件",
    "id": 7555,
    "label": [
      {
        "start": 9,
        "end": 14,
        "text": "数字计算机",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "微操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "微命令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8988,
    "created_at": "2024-08-18T02:51:23.008898Z",
    "updated_at": "2024-08-18T02:51:23.008898Z",
    "lead_time": 0.793
  },
  {
    "text": "例如，英寸彩色CRT的分辨率为像素",
    "id": 7556,
    "label": [
      {
        "start": 7,
        "end": 10,
        "text": "CRT",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8989,
    "created_at": "2024-08-18T02:51:25.145102Z",
    "updated_at": "2024-08-18T02:51:25.145102Z",
    "lead_time": 0.997
  },
  {
    "text": "很显然，一个增加后的阶码与另一个阶码相等，所增加的阶码一定是小阶",
    "id": 7557,
    "label": [
      {
        "start": 10,
        "end": 12,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 27,
        "text": "阶码",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8990,
    "created_at": "2024-08-18T02:51:32.193749Z",
    "updated_at": "2024-08-18T02:51:32.193749Z",
    "lead_time": 6.031
  },
  {
    "text": "其中G称为进位发生输出，P称为进位传送输出",
    "id": 7558,
    "annotator": 1,
    "annotation_id": 8991,
    "created_at": "2024-08-18T02:51:39.071446Z",
    "updated_at": "2024-08-18T02:51:39.072458Z",
    "lead_time": 5.622
  },
  {
    "text": "通常为控制方便，读周期和写周期时间相等",
    "id": 7559,
    "label": [
      {
        "start": 12,
        "end": 15,
        "text": "写周期",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 8,
        "end": 11,
        "text": "读周期",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8992,
    "created_at": "2024-08-18T02:51:40.859157Z",
    "updated_at": "2024-08-18T02:51:40.860692Z",
    "lead_time": 0.729
  },
  {
    "text": "图示出了位位阵列乘法器的逻辑电路图，其中FA是前面讲过的一位全加器，FA的斜线方向为进位输出，竖线方向为和输出，而所有被加数项的排列和前述ABP乘法过程中的被加数矩阵相同",
    "id": 7560,
    "label": [
      {
        "start": 6,
        "end": 11,
        "text": "阵列乘法器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "逻辑电路",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "全加器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 4,
        "end": 5,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 5,
        "end": 6,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 29,
        "end": 30,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8993,
    "created_at": "2024-08-18T02:51:46.051504Z",
    "updated_at": "2024-08-18T02:51:46.051504Z",
    "lead_time": 4.056
  },
  {
    "text": "每个中断请求信号保存在“中断请求”触发器中，经“中断屏蔽”触发器控制后，可能有若干个中断请求信号IRi进入虚线框所示的排队电路",
    "id": 7561,
    "label": [
      {
        "start": 24,
        "end": 29,
        "text": "中断屏蔽”",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 2,
        "end": 6,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 12,
        "end": 16,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 42,
        "end": 46,
        "text": "中断请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 29,
        "end": 32,
        "text": "触发器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 48,
        "end": 50,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8994,
    "created_at": "2024-08-18T02:51:50.038761Z",
    "updated_at": "2024-08-18T02:51:50.038761Z",
    "lead_time": 2.982
  },
  {
    "text": "通常语音识别器与语言合成器放在一起做成语音输入输出设备",
    "id": 7562,
    "label": [
      {
        "start": 2,
        "end": 7,
        "text": "语音识别器",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 21,
        "end": 27,
        "text": "输入输出设备",
        "labels": [
          "IO"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8995,
    "created_at": "2024-08-18T02:51:52.271863Z",
    "updated_at": "2024-08-18T02:51:52.271863Z",
    "lead_time": 1.013
  },
  {
    "text": "各种计算机的时序信号产生电路是不尽相同的",
    "id": 7563,
    "label": [
      {
        "start": 6,
        "end": 10,
        "text": "时序信号",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 2,
        "end": 5,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8996,
    "created_at": "2024-08-18T02:51:57.741652Z",
    "updated_at": "2024-08-18T02:51:57.741652Z",
    "lead_time": 4.336
  },
  {
    "text": "PCIe桥PCIebrige负责PCIe和其他总线之间的转换，PCIe总线系统可以通过PCIe桥扩展出传统的PCI总线或PCIX总线",
    "id": 7564,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "PCIe桥",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 31,
        "end": 37,
        "text": "PCIe总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 54,
        "end": 59,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 43,
        "end": 48,
        "text": "PCIe桥",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 9,
        "text": "PCIe",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 20,
        "text": "PCIe",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 60,
        "end": 63,
        "text": "PCI",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 23,
        "end": 25,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 64,
        "end": 66,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8997,
    "created_at": "2024-08-18T02:52:03.431970Z",
    "updated_at": "2024-08-18T02:52:03.431970Z",
    "lead_time": 4.706
  },
  {
    "text": "比如，早晨起床；上课，午休，每个教师和学生都必须严格遵守这一规定，在规定的时间里上课，在规定的时间里休息，不得各行其是，否则就难以保证正常的教学秩序",
    "id": 7565,
    "annotator": 1,
    "annotation_id": 8998,
    "created_at": "2024-08-18T02:52:14.896632Z",
    "updated_at": "2024-08-18T02:52:14.896632Z",
    "lead_time": 10.286
  },
  {
    "text": "推广到一般情况，一个n位n位的加减交替除法阵列由n个CAS单元组成，其中两个操作数被除数与除数都是正的",
    "id": 7566,
    "label": [
      {
        "start": 26,
        "end": 29,
        "text": "CAS",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 38,
        "end": 41,
        "text": "操作数",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 11,
        "end": 12,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 13,
        "end": 14,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 8999,
    "created_at": "2024-08-18T02:52:17.978941Z",
    "updated_at": "2024-08-18T02:52:17.978941Z",
    "lead_time": 2.163
  },
  {
    "text": "与此同时，因IR，经门和门，使IS，如果IR，则被选中",
    "id": 7567,
    "label": [
      {
        "start": 6,
        "end": 8,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 22,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 9000,
    "created_at": "2024-08-18T02:52:23.754817Z",
    "updated_at": "2024-08-18T02:52:23.754817Z",
    "lead_time": 4.728
  },
  {
    "text": "CPU执行的动作如下：操作控制器OC发出控制命令打开IR输出三态门，将指令中的直接地址码放到数据总线DBUS上；OC发出操作命令，将地址码装入数存地址寄存器AR；OC发出读命令，将数存号单元中的数读出到DBUS上；OC发出命令，将DBUS上的数据装入缓冲寄存器DR；OC发出命令，将DR中的数装入通用寄存器R，原来R中的数被冲掉",
    "id": 7568,
    "label": [
      {
        "start": 11,
        "end": 16,
        "text": "操作控制器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 125,
        "end": 130,
        "text": "缓冲寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 148,
        "end": 153,
        "text": "通用寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 73,
        "end": 78,
        "text": "地址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 46,
        "end": 50,
        "text": "数据总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 0,
        "end": 3,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 30,
        "end": 33,
        "text": "三态门",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 44,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 66,
        "end": 69,
        "text": "地址码",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 26,
        "end": 28,
        "text": "IR",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 9001,
    "created_at": "2024-08-18T02:52:28.815567Z",
    "updated_at": "2024-08-18T02:52:28.816557Z",
    "lead_time": 3.856
  },
  {
    "text": "由于要对存储器阵列进行地址译码，所以必须使用地址寄存器来保持地址信息，直到一次读写操作完成",
    "id": 7569,
    "label": [
      {
        "start": 22,
        "end": 27,
        "text": "地址寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 11,
        "end": 15,
        "text": "地址译码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 40,
        "end": 43,
        "text": "写操作",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 4,
        "end": 7,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 30,
        "end": 32,
        "text": "地址",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 9002,
    "created_at": "2024-08-18T02:52:36.536742Z",
    "updated_at": "2024-08-18T02:52:36.536742Z",
    "lead_time": 6.172
  },
  {
    "text": "从NOR闪存的编程和擦除方式可以看出闪存与RAM的差异",
    "id": 7570,
    "label": [
      {
        "start": 21,
        "end": 24,
        "text": "RAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 6,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 18,
        "end": 20,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 9003,
    "created_at": "2024-08-18T02:53:38.397849Z",
    "updated_at": "2024-08-18T02:53:38.397849Z",
    "lead_time": 60.201
  },
  {
    "text": "而CPU对cache的写入更改了cache的内容",
    "id": 7571,
    "label": [
      {
        "start": 1,
        "end": 4,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 5,
        "end": 10,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 16,
        "end": 21,
        "text": "cache",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 9004,
    "created_at": "2024-08-18T02:55:43.717787Z",
    "updated_at": "2024-08-18T02:55:43.717787Z",
    "lead_time": 124.071
  },
  {
    "text": "任何一个SRAM，都有三组信号线与外部打交道：地址线，本例中有条，即A、A、A、A、A、A，它指定了存储器的容量是个存储单元",
    "id": 7572,
    "label": [
      {
        "start": 58,
        "end": 62,
        "text": "存储单元",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 4,
        "end": 8,
        "text": "SRAM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 23,
        "end": 26,
        "text": "地址线",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 50,
        "end": 53,
        "text": "存储器",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 9005,
    "created_at": "2024-08-18T02:55:48.497709Z",
    "updated_at": "2024-08-18T02:55:48.497709Z",
    "lead_time": 3.687
  },
  {
    "text": "从图中看出，外面扇区比里面扇区面积要大",
    "id": 7573,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "扇区",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "扇区",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 9006,
    "created_at": "2024-08-18T02:55:51.211082Z",
    "updated_at": "2024-08-18T02:55:51.211082Z",
    "lead_time": 1.482
  },
  {
    "text": "时序产生器的作用，就是对各种操作信号实施时间上的控制",
    "id": 7574,
    "label": [
      {
        "start": 0,
        "end": 5,
        "text": "时序产生器",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 9007,
    "created_at": "2024-08-18T02:55:54.285652Z",
    "updated_at": "2024-08-18T02:55:54.285652Z",
    "lead_time": 1.942
  },
  {
    "text": "依次类推",
    "id": 7575,
    "annotator": 1,
    "annotation_id": 9008,
    "created_at": "2024-08-18T02:55:56.208471Z",
    "updated_at": "2024-08-18T02:55:56.208471Z",
    "lead_time": 0.78
  },
  {
    "text": "如图a所示，三级中断优先权高于二级，而二级中断优先权又高于一级",
    "id": 7576,
    "label": [
      {
        "start": 8,
        "end": 10,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 9009,
    "created_at": "2024-08-18T02:56:03.884337Z",
    "updated_at": "2024-08-18T02:56:03.884337Z",
    "lead_time": 1.166
  },
  {
    "text": "当完成结果时，它就被发送到等待特殊结果的储存站及指令完成单元",
    "id": 7577,
    "label": [
      {
        "start": 24,
        "end": 26,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 9010,
    "created_at": "2024-08-18T02:56:05.738589Z",
    "updated_at": "2024-08-18T02:56:05.738589Z",
    "lead_time": 1.065
  },
  {
    "text": "一个单处理器系统中的总线，大致分为三类：CPU内部连接各寄存器及运算部件之间的总线，称为内部总线",
    "id": 7578,
    "label": [
      {
        "start": 2,
        "end": 6,
        "text": "单处理器",
        "labels": [
          "ARCH"
        ]
      },
      {
        "start": 44,
        "end": 48,
        "text": "内部总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 28,
        "end": 31,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 10,
        "end": 12,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 39,
        "end": 41,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 9011,
    "created_at": "2024-08-18T02:56:08.045610Z",
    "updated_at": "2024-08-18T02:56:08.045610Z",
    "lead_time": 1.522
  },
  {
    "text": "根据不同使用环境要求，操作系统目前大致分为批处理操作系统、分时操作系统、网络操作系统、实时操作系统等多种",
    "id": 7579,
    "label": [
      {
        "start": 11,
        "end": 15,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 24,
        "end": 28,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 31,
        "end": 35,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 38,
        "end": 42,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 45,
        "end": 49,
        "text": "操作系统",
        "labels": [
          "PROG"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 9012,
    "created_at": "2024-08-18T02:56:11.011615Z",
    "updated_at": "2024-08-18T02:56:11.011615Z",
    "lead_time": 2.191
  },
  {
    "text": "要使它们送入定点计算机进行某种运算，必须对它们分别取不同的比例因子，使其数值部分的绝对值小于，即这里的比例因子和要分别存放在机器的某个存储单元中，便于以后对计算结果按这个比例增大",
    "id": 7580,
    "label": [
      {
        "start": 6,
        "end": 11,
        "text": "定点计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 67,
        "end": 71,
        "text": "存储单元",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 9013,
    "created_at": "2024-08-18T02:56:13.156710Z",
    "updated_at": "2024-08-18T02:56:13.156710Z",
    "lead_time": 1.296
  },
  {
    "text": "很显然，在这种DMA传送过程中，CPU基本处于不工作状态或者说保持状态",
    "id": 7581,
    "label": [
      {
        "start": 7,
        "end": 12,
        "text": "DMA传送",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 16,
        "end": 19,
        "text": "CPU",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 9014,
    "created_at": "2024-08-18T02:56:17.902788Z",
    "updated_at": "2024-08-18T02:56:17.902788Z",
    "lead_time": 3.972
  },
  {
    "text": "使用芯电缆，规定了两种电气条件：单端驱动，电缆长m；差分驱动，电缆最长m",
    "id": 7582,
    "annotator": 1,
    "annotation_id": 9015,
    "created_at": "2024-08-18T02:56:23.183543Z",
    "updated_at": "2024-08-18T02:56:23.183543Z",
    "lead_time": 4.588
  },
  {
    "text": "但是如此庞大的指令系统不但使计算机的研制周期变长，且由于采用了大量使用频率很低的复杂指令而造成硬件资源浪费，产生指令系统所谓百分比的规律，即最常使用的简单指令仅占指令总数的，但在程序中出现的频率却占",
    "id": 7583,
    "label": [
      {
        "start": 7,
        "end": 11,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 56,
        "end": 60,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 14,
        "end": 17,
        "text": "计算机",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 89,
        "end": 91,
        "text": "程序",
        "labels": [
          "PROG"
        ]
      },
      {
        "start": 47,
        "end": 49,
        "text": "硬件",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 42,
        "end": 44,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 77,
        "end": 79,
        "text": "指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 81,
        "end": 83,
        "text": "指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 9016,
    "created_at": "2024-08-18T02:56:26.176064Z",
    "updated_at": "2024-08-18T02:56:26.176064Z",
    "lead_time": 2.37
  },
  {
    "text": "状态接口模块监视外围设备的工作状态并保存状态信息",
    "id": 7584,
    "label": [
      {
        "start": 8,
        "end": 12,
        "text": "外围设备",
        "labels": [
          "IO"
        ]
      },
      {
        "start": 2,
        "end": 4,
        "text": "接口",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 9017,
    "created_at": "2024-08-18T02:56:27.859116Z",
    "updated_at": "2024-08-18T02:56:27.859116Z",
    "lead_time": 0.718
  },
  {
    "text": "符第章运算方法和运算器号位也占半字节并放在最低数字位之后，其值选用四位编码中的六种冗余状态中的有关值，如用C表示正号，用D表示负号",
    "id": 7585,
    "label": [
      {
        "start": 8,
        "end": 11,
        "text": "运算器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 16,
        "end": 18,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 35,
        "end": 37,
        "text": "编码",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 24,
        "end": 25,
        "text": "字",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 12,
        "end": 13,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 25,
        "end": 26,
        "text": "位",
        "labels": [
          "DATA"
        ]
      },
      {
        "start": 34,
        "end": 35,
        "text": "位",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 9018,
    "created_at": "2024-08-18T02:56:29.726380Z",
    "updated_at": "2024-08-18T02:56:29.726380Z",
    "lead_time": 1.131
  },
  {
    "text": "NOR闪存通常被称为线性闪存，最早由英特尔和AMD等公司生产",
    "id": 7586,
    "label": [
      {
        "start": 18,
        "end": 21,
        "text": "英特尔",
        "labels": [
          "CORP"
        ]
      },
      {
        "start": 3,
        "end": 5,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 12,
        "end": 14,
        "text": "闪存",
        "labels": [
          "STOR"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 9019,
    "created_at": "2024-08-18T02:56:31.301546Z",
    "updated_at": "2024-08-18T02:56:31.301546Z",
    "lead_time": 0.746
  },
  {
    "text": "寄存器寄存器传送型微指令",
    "id": 7587,
    "label": [
      {
        "start": 0,
        "end": 3,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 3,
        "end": 6,
        "text": "寄存器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 9,
        "end": 12,
        "text": "微指令",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 9020,
    "created_at": "2024-08-18T02:56:33.147813Z",
    "updated_at": "2024-08-18T02:56:33.147813Z",
    "lead_time": 0.962
  },
  {
    "text": "电可擦PROMEEPROM，EPROM采用电擦除，因而不需要离线擦除，且擦除速度快，可以单字节编程和擦除或者擦除块尺寸很小，使用更方便",
    "id": 7588,
    "label": [
      {
        "start": 8,
        "end": 13,
        "text": "EPROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 14,
        "end": 19,
        "text": "EPROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "PROM",
        "labels": [
          "STOR"
        ]
      },
      {
        "start": 45,
        "end": 47,
        "text": "字节",
        "labels": [
          "DATA"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 9021,
    "created_at": "2024-08-18T02:56:35.280914Z",
    "updated_at": "2024-08-18T02:56:35.281422Z",
    "lead_time": 1.387
  },
  {
    "text": "换言之，此时需要有MB的刷存与之对应",
    "id": 7589,
    "label": [
      {
        "start": 9,
        "end": 11,
        "text": "MB",
        "labels": [
          "PERF"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 9022,
    "created_at": "2024-08-18T02:56:36.755716Z",
    "updated_at": "2024-08-18T02:56:36.755716Z",
    "lead_time": 0.763
  },
  {
    "text": "在一个指令系统中，如果各种指令字长度是相等的，称为等长指令字结构，它们可以都是单字长指令或半字长指令",
    "id": 7590,
    "label": [
      {
        "start": 45,
        "end": 50,
        "text": "半字长指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 13,
        "end": 18,
        "text": "指令字长度",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 39,
        "end": 44,
        "text": "单字长指令",
        "labels": [
          "INST"
        ]
      },
      {
        "start": 3,
        "end": 7,
        "text": "指令系统",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 27,
        "end": 30,
        "text": "指令字",
        "labels": [
          "INST"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 9023,
    "created_at": "2024-08-18T02:56:38.416860Z",
    "updated_at": "2024-08-18T02:56:38.416860Z",
    "lead_time": 0.899
  },
  {
    "text": "和单级中断情况类似，在多级中断中也使用中断堆栈保存现场信息",
    "id": 7591,
    "label": [
      {
        "start": 1,
        "end": 5,
        "text": "单级中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 13,
        "end": 15,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 19,
        "end": 21,
        "text": "中断",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 21,
        "end": 23,
        "text": "堆栈",
        "labels": [
          "TECH"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 9024,
    "created_at": "2024-08-18T02:56:39.756468Z",
    "updated_at": "2024-08-18T02:56:39.756468Z",
    "lead_time": 0.552
  },
  {
    "text": "PCI总线采用集中式仲裁方式，每个PCI主设备都有独立的nREQ总线请求和nGNT总线授权两条信号线与中央仲裁器相连",
    "id": 7592,
    "label": [
      {
        "start": 51,
        "end": 56,
        "text": "中央仲裁器",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 7,
        "end": 12,
        "text": "集中式仲裁",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 0,
        "end": 5,
        "text": "PCI总线",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 32,
        "end": 36,
        "text": "总线请求",
        "labels": [
          "TECH"
        ]
      },
      {
        "start": 17,
        "end": 20,
        "text": "PCI",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 20,
        "end": 23,
        "text": "主设备",
        "labels": [
          "COMP"
        ]
      },
      {
        "start": 41,
        "end": 43,
        "text": "总线",
        "labels": [
          "COMP"
        ]
      }
    ],
    "annotator": 1,
    "annotation_id": 9025,
    "created_at": "2024-08-18T02:56:41.896502Z",
    "updated_at": "2024-08-18T02:56:41.896502Z",
    "lead_time": 1.387
  }
]